{
	"id": "fab2ced06ff5b8ba08974c98bce15240",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-0c61f2e207.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract KnowLedgeToken is ERC20, ERC20Permit {\n    constructor() ERC20(\"KnowLedgeToken\", \"KTK\") ERC20Permit(\"KnowLedgeToken\") {\n        _mint(msg.sender, 10000 * 10 ** decimals());\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts@5.0.1/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.1/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2035,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2037,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1014,
								"contract": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1014,
								"contract": "@openzeppelin/contracts@5.0.1/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206a671e4acb00c0d10ef3871e59b205e76dc5c4cd41903d8678bb262e9e366f5664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206a671e4acb00c0d10ef3871e59b205e76dc5c4cd41903d8678bb262e9e366f5664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x671E4ACB00C0D10EF3871E MSIZE 0xB2 SDIV 0xE7 PUSH14 0xC5C4CD41903D8678BB262E9E366F JUMP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1255:3053:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206a671e4acb00c0d10ef3871e59b205e76dc5c4cd41903d8678bb262e9e366f5664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x671E4ACB00C0D10EF3871E MSIZE 0xB2 SDIV 0xE7 PUSH14 0xC5C4CD41903D8678BB262E9E366F JUMP PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "1255:3053:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a671e4acb00c0d10ef3871e59b205e76dc5c4cd41903d8678bb262e9e366f5664736f6c63430008160033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a697ac2f8340bee8ef46dddb2c03275e9280ef69a75785fbc67959342c7c701e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a697ac2f8340bee8ef46dddb2c03275e9280ef69a75785fbc67959342c7c701e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP8 0xAC 0x2F DUP4 BLOCKHASH 0xBE 0xE8 0xEF CHAINID 0xDD 0xDB 0x2C SUB 0x27 0x5E SWAP3 DUP1 0xEF PUSH10 0xA75785FBC67959342C7C PUSH17 0x1E64736F6C634300081600330000000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a697ac2f8340bee8ef46dddb2c03275e9280ef69a75785fbc67959342c7c701e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 SWAP8 0xAC 0x2F DUP4 BLOCKHASH 0xBE 0xE8 0xEF CHAINID 0xDD 0xDB 0x2C SUB 0x27 0x5E SWAP3 DUP1 0xEF PUSH10 0xA75785FBC67959342C7C PUSH17 0x1E64736F6C634300081600330000000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a697ac2f8340bee8ef46dddb2c03275e9280ef69a75785fbc67959342c7c701e64736f6c63430008160033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b5378143a09a06faf268ac1905740c5ca02c9f77da33759a24b6a310f2d1e3fb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5378143a09a06faf268ac1905740c5ca02c9f77da33759a24b6a310f2d1e3fb64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLDATACOPY DUP2 NUMBER LOG0 SWAP11 MOD STATICCALL CALLCODE PUSH9 0xAC1905740C5CA02C9F PUSH24 0xDA33759A24B6A310F2D1E3FB64736F6C6343000816003300 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b5378143a09a06faf268ac1905740c5ca02c9f77da33759a24b6a310f2d1e3fb64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLDATACOPY DUP2 NUMBER LOG0 SWAP11 MOD STATICCALL CALLCODE PUSH9 0xAC1905740C5CA02C9F PUSH24 0xDA33759A24B6A310F2D1E3FB64736F6C6343000816003300 ",
							"sourceMap": "251:2847:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5378143a09a06faf268ac1905740c5ca02c9f77da33759a24b6a310f2d1e3fb64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c53886642f2b5641b36e00fad54b8b5311c0dedb669c088d10bff6855f6effe64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209c53886642f2b5641b36e00fad54b8b5311c0dedb669c088d10bff6855f6effe64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 MSTORE8 DUP9 PUSH7 0x42F2B5641B36E0 0xF 0xAD SLOAD 0xB8 0xB5 BALANCE SHR 0xD 0xED 0xB6 PUSH10 0xC088D10BFF6855F6EFFE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "344:7386:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209c53886642f2b5641b36e00fad54b8b5311c0dedb669c088d10bff6855f6effe64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 MSTORE8 DUP9 PUSH7 0x42F2B5641B36E0 0xF 0xAD SLOAD 0xB8 0xB5 BALANCE SHR 0xD 0xED 0xB6 PUSH10 0xC088D10BFF6855F6EFFE PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "344:7386:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c53886642f2b5641b36e00fad54b8b5311c0dedb669c088d10bff6855f6effe64736f6c63430008160033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2035,
								"contract": "@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2037,
								"contract": "@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cbaa46b8f88d28cbcbbe4604c3ce7b9cb735ae16056d7459c55b8549e9d9d29664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cbaa46b8f88d28cbcbbe4604c3ce7b9cb735ae16056d7459c55b8549e9d9d29664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xAA CHAINID 0xB8 0xF8 DUP14 0x28 0xCB 0xCB 0xBE CHAINID DIV 0xC3 0xCE PUSH28 0x9CB735AE16056D7459C55B8549E9D9D29664736F6C63430008160033 ",
							"sourceMap": "521:3235:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cbaa46b8f88d28cbcbbe4604c3ce7b9cb735ae16056d7459c55b8549e9d9d29664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xAA CHAINID 0xB8 0xF8 DUP14 0x28 0xCB 0xCB 0xBE CHAINID DIV 0xC3 0xCE PUSH28 0x9CB735AE16056D7459C55B8549E9D9D29664736F6C63430008160033 ",
							"sourceMap": "521:3235:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cbaa46b8f88d28cbcbbe4604c3ce7b9cb735ae16056d7459c55b8549e9d9d29664736f6c63430008160033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220352624d971fa8641980bc29cfafa944e7723ee7f35459ade1759fefa96f689eb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220352624d971fa8641980bc29cfafa944e7723ee7f35459ade1759fefa96f689eb64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x26 0x24 0xD9 PUSH18 0xFA8641980BC29CFAFA944E7723EE7F35459A 0xDE OR MSIZE INVALID STATICCALL SWAP7 0xF6 DUP10 0xEB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220352624d971fa8641980bc29cfafa944e7723ee7f35459ade1759fefa96f689eb64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x26 0x24 0xD9 PUSH18 0xFA8641980BC29CFAFA944E7723EE7F35459A 0xDE OR MSIZE INVALID STATICCALL SWAP7 0xF6 DUP10 0xEB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220352624d971fa8641980bc29cfafa944e7723ee7f35459ade1759fefa96f689eb64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122045546e2e479adae25cf84ebb07d7a9d5d1121da2a49b2aa5600ab04fb8a8d31d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122045546e2e479adae25cf84ebb07d7a9d5d1121da2a49b2aa5600ab04fb8a8d31d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SLOAD PUSH15 0x2E479ADAE25CF84EBB07D7A9D5D112 SAR LOG2 LOG4 SWAP12 0x2A 0xA5 PUSH1 0xA 0xB0 0x4F 0xB8 0xA8 0xD3 SAR PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122045546e2e479adae25cf84ebb07d7a9d5d1121da2a49b2aa5600ab04fb8a8d31d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT SLOAD PUSH15 0x2E479ADAE25CF84EBB07D7A9D5D112 SAR LOG2 LOG4 SWAP12 0x2A 0xA5 PUSH1 0xA 0xB0 0x4F 0xB8 0xA8 0xD3 SAR PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045546e2e479adae25cf84ebb07d7a9d5d1121da2a49b2aa5600ab04fb8a8d31d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-0c61f2e207.sol": {
				"KnowLedgeToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-0c61f2e207.sol\":200:389  contract KnowLedgeToken is ERC20, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contract-0c61f2e207.sol\":252:387  constructor() ERC20(\"KnowLedgeToken\", \"KTK\") ERC20Permit(\"KnowLedgeToken\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x4b6e6f774c65646765546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1613:1617  name */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x4b6e6f774c65646765546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4b544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_11\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_13\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_12)\n  swap1\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_14\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"contract-0c61f2e207.sol\":337:380  _mint(msg.sender, 10000 * 10 ** decimals()) */\n  tag_18\n    /* \"contract-0c61f2e207.sol\":343:353  msg.sender */\n  caller\n    /* \"contract-0c61f2e207.sol\":369:379  decimals() */\n  tag_19\n    /* \"contract-0c61f2e207.sol\":369:377  decimals */\n  shl(0x20, tag_20)\n    /* \"contract-0c61f2e207.sol\":369:379  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contract-0c61f2e207.sol\":363:365  10 */\n  0x0a\n    /* \"contract-0c61f2e207.sol\":363:379  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contract-0c61f2e207.sol\":355:360  10000 */\n  0x2710\n    /* \"contract-0c61f2e207.sol\":355:379  10000 * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contract-0c61f2e207.sol\":337:342  _mint */\n  shl(0x20, tag_25)\n    /* \"contract-0c61f2e207.sol\":337:380  _mint(msg.sender, 10000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contract-0c61f2e207.sol\":200:389  contract KnowLedgeToken is ERC20, ERC20Permit {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_29\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_27)\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_28:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_32\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_34\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_34:\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_15:\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_36\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_43\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_44)\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_30:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_46:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_49\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_33:\n    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_44:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_56)\ntag_53:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_57:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_64:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_65:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_66:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_67:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_107:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_109\n  tag_66\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":714:798   */\ntag_108:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_68:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_69:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_70:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_71:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_114\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_70\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1429:1468   */\n  tag_115\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_70\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_72:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_73:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_74:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_119\n    /* \"#utility.yul\":1818:1852   */\n  tag_120\n    /* \"#utility.yul\":1827:1851   */\n  tag_121\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_72\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1818:1852   */\n  tag_73\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1800:1853   */\n  tag_72\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_75:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_76:\n    /* \"#utility.yul\":2056:2095   */\n  tag_124\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_74\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2117:2208   */\n  tag_125\n    /* \"#utility.yul\":2166:2207   */\n  tag_126\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_75\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_71\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_77:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_78:\n    /* \"#utility.yul\":2377:2409   */\n  tag_129\n  tag_77\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2418:2483   */\n  tag_130\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_76\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_79:\n    /* \"#utility.yul\":2555:2675   */\ntag_132:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_135\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_78\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_132)\ntag_134:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_80:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_138\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2906:2935   */\n  tag_139\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_140:\n    /* \"#utility.yul\":3133:3213   */\n  tag_141\n    /* \"#utility.yul\":3189:3211   */\n  tag_142\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_69\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_79\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_137:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_81:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_82:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_145\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_81\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_83:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_147\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_82\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_149\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_151\n  tag_65\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4038:4094   */\ntag_150:\n    /* \"#utility.yul\":4118:4156   */\n  tag_152\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_67\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4203:4270   */\n  tag_153\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_80\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_155\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_156:\n    /* \"#utility.yul\":5144:5211   */\n  tag_157\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_154)\n    /* \"#utility.yul\":4365:4983   */\ntag_155:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_158\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_68\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_159:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_159)\ntag_161:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_163\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_82\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_162:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_154:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_84:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_85:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_86:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_167:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_171\n  tag_84\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5753:5803   */\ntag_170:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_172:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_173\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_85\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_87:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_174)\n    /* \"#utility.yul\":6617:6657   */\ntag_175:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_174)\n    /* \"#utility.yul\":6666:6702   */\ntag_176:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_177)\n    /* \"#utility.yul\":6805:6832   */\ntag_178:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_174)\n    /* \"#utility.yul\":6841:7032   */\ntag_179:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_181\n  tag_84\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6870:6913   */\ntag_180:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_183\n  tag_84\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6964:7004   */\ntag_182:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_174)\n    /* \"#utility.yul\":6755:7032   */\ntag_177:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_186\n  tag_84\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":7219:7259   */\ntag_185:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_174)\n    /* \"#utility.yul\":7041:7287   */\ntag_184:\n    /* \"#utility.yul\":7312:7354   */\n  tag_187\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_86\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_189\n  tag_84\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7364:7415   */\ntag_188:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_174:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7547   */\ntag_88:\n    /* \"#utility.yul\":7496:7503   */\n  0x00\n    /* \"#utility.yul\":7536:7540   */\n  0xff\n    /* \"#utility.yul\":7529:7534   */\n  dup3\n    /* \"#utility.yul\":7525:7541   */\n  and\n    /* \"#utility.yul\":7514:7541   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7547   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7553:7834   */\ntag_22:\n    /* \"#utility.yul\":7611:7616   */\n  0x00\n    /* \"#utility.yul\":7635:7658   */\n  tag_192\n    /* \"#utility.yul\":7653:7657   */\n  dup3\n    /* \"#utility.yul\":7635:7658   */\n  tag_72\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7627:7658   */\n  swap2\n  pop\n    /* \"#utility.yul\":7679:7704   */\n  tag_193\n    /* \"#utility.yul\":7695:7703   */\n  dup4\n    /* \"#utility.yul\":7679:7704   */\n  tag_88\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7667:7704   */\n  swap3\n  pop\n    /* \"#utility.yul\":7723:7827   */\n  tag_194\n    /* \"#utility.yul\":7760:7826   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7750:7758   */\n  dup5\n    /* \"#utility.yul\":7744:7748   */\n  dup5\n    /* \"#utility.yul\":7723:7827   */\n  tag_87\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7714:7827   */\n  swap1\n  pop\n    /* \"#utility.yul\":7553:7834   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7840:8250   */\ntag_24:\n    /* \"#utility.yul\":7880:7887   */\n  0x00\n    /* \"#utility.yul\":7903:7923   */\n  tag_196\n    /* \"#utility.yul\":7921:7922   */\n  dup3\n    /* \"#utility.yul\":7903:7923   */\n  tag_72\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7898:7923   */\n  swap2\n  pop\n    /* \"#utility.yul\":7937:7957   */\n  tag_197\n    /* \"#utility.yul\":7955:7956   */\n  dup4\n    /* \"#utility.yul\":7937:7957   */\n  tag_72\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":7932:7957   */\n  swap3\n  pop\n    /* \"#utility.yul\":7992:7993   */\n  dup3\n    /* \"#utility.yul\":7989:7990   */\n  dup3\n    /* \"#utility.yul\":7985:7994   */\n  mul\n    /* \"#utility.yul\":8014:8044   */\n  tag_198\n    /* \"#utility.yul\":8032:8043   */\n  dup2\n    /* \"#utility.yul\":8014:8044   */\n  tag_72\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8003:8044   */\n  swap2\n  pop\n    /* \"#utility.yul\":8193:8194   */\n  dup3\n    /* \"#utility.yul\":8184:8191   */\n  dup3\n    /* \"#utility.yul\":8180:8195   */\n  div\n    /* \"#utility.yul\":8177:8178   */\n  dup5\n    /* \"#utility.yul\":8174:8196   */\n  eq\n    /* \"#utility.yul\":8154:8155   */\n  dup4\n    /* \"#utility.yul\":8147:8156   */\n  iszero\n    /* \"#utility.yul\":8127:8210   */\n  or\n    /* \"#utility.yul\":8104:8243   */\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8223:8241   */\n  tag_200\n  tag_84\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8104:8243   */\ntag_199:\n    /* \"#utility.yul\":7888:8250   */\n  pop\n    /* \"#utility.yul\":7840:8250   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8256:8333   */\ntag_89:\n    /* \"#utility.yul\":8293:8300   */\n  0x00\n    /* \"#utility.yul\":8322:8327   */\n  dup2\n    /* \"#utility.yul\":8311:8327   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8339:8457   */\ntag_90:\n    /* \"#utility.yul\":8426:8450   */\n  tag_203\n    /* \"#utility.yul\":8444:8449   */\n  dup2\n    /* \"#utility.yul\":8426:8450   */\n  tag_89\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8421:8424   */\n  dup3\n    /* \"#utility.yul\":8414:8451   */\n  mstore\n    /* \"#utility.yul\":8339:8457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8463:8581   */\ntag_91:\n    /* \"#utility.yul\":8550:8574   */\n  tag_205\n    /* \"#utility.yul\":8568:8573   */\n  dup2\n    /* \"#utility.yul\":8550:8574   */\n  tag_72\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8545:8548   */\n  dup3\n    /* \"#utility.yul\":8538:8575   */\n  mstore\n    /* \"#utility.yul\":8463:8581   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8587:8713   */\ntag_92:\n    /* \"#utility.yul\":8624:8631   */\n  0x00\n    /* \"#utility.yul\":8664:8706   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8657:8662   */\n  dup3\n    /* \"#utility.yul\":8653:8707   */\n  and\n    /* \"#utility.yul\":8642:8707   */\n  swap1\n  pop\n    /* \"#utility.yul\":8587:8713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8719:8815   */\ntag_93:\n    /* \"#utility.yul\":8756:8763   */\n  0x00\n    /* \"#utility.yul\":8785:8809   */\n  tag_208\n    /* \"#utility.yul\":8803:8808   */\n  dup3\n    /* \"#utility.yul\":8785:8809   */\n  tag_92\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8774:8809   */\n  swap1\n  pop\n    /* \"#utility.yul\":8719:8815   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8821:8939   */\ntag_94:\n    /* \"#utility.yul\":8908:8932   */\n  tag_210\n    /* \"#utility.yul\":8926:8931   */\n  dup2\n    /* \"#utility.yul\":8908:8932   */\n  tag_93\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8903:8906   */\n  dup3\n    /* \"#utility.yul\":8896:8933   */\n  mstore\n    /* \"#utility.yul\":8821:8939   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8945:9609   */\ntag_37:\n    /* \"#utility.yul\":9150:9154   */\n  0x00\n    /* \"#utility.yul\":9188:9191   */\n  0xa0\n    /* \"#utility.yul\":9177:9186   */\n  dup3\n    /* \"#utility.yul\":9173:9192   */\n  add\n    /* \"#utility.yul\":9165:9192   */\n  swap1\n  pop\n    /* \"#utility.yul\":9202:9273   */\n  tag_212\n    /* \"#utility.yul\":9270:9271   */\n  0x00\n    /* \"#utility.yul\":9259:9268   */\n  dup4\n    /* \"#utility.yul\":9255:9272   */\n  add\n    /* \"#utility.yul\":9246:9252   */\n  dup9\n    /* \"#utility.yul\":9202:9273   */\n  tag_90\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9283:9355   */\n  tag_213\n    /* \"#utility.yul\":9351:9353   */\n  0x20\n    /* \"#utility.yul\":9340:9349   */\n  dup4\n    /* \"#utility.yul\":9336:9354   */\n  add\n    /* \"#utility.yul\":9327:9333   */\n  dup8\n    /* \"#utility.yul\":9283:9355   */\n  tag_90\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9365:9437   */\n  tag_214\n    /* \"#utility.yul\":9433:9435   */\n  0x40\n    /* \"#utility.yul\":9422:9431   */\n  dup4\n    /* \"#utility.yul\":9418:9436   */\n  add\n    /* \"#utility.yul\":9409:9415   */\n  dup7\n    /* \"#utility.yul\":9365:9437   */\n  tag_90\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9447:9519   */\n  tag_215\n    /* \"#utility.yul\":9515:9517   */\n  0x60\n    /* \"#utility.yul\":9504:9513   */\n  dup4\n    /* \"#utility.yul\":9500:9518   */\n  add\n    /* \"#utility.yul\":9491:9497   */\n  dup6\n    /* \"#utility.yul\":9447:9519   */\n  tag_91\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9529:9602   */\n  tag_216\n    /* \"#utility.yul\":9597:9600   */\n  0x80\n    /* \"#utility.yul\":9586:9595   */\n  dup4\n    /* \"#utility.yul\":9582:9601   */\n  add\n    /* \"#utility.yul\":9573:9579   */\n  dup5\n    /* \"#utility.yul\":9529:9602   */\n  tag_94\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8945:9609   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9615:9837   */\ntag_42:\n    /* \"#utility.yul\":9708:9712   */\n  0x00\n    /* \"#utility.yul\":9746:9748   */\n  0x20\n    /* \"#utility.yul\":9735:9744   */\n  dup3\n    /* \"#utility.yul\":9731:9749   */\n  add\n    /* \"#utility.yul\":9723:9749   */\n  swap1\n  pop\n    /* \"#utility.yul\":9759:9830   */\n  tag_218\n    /* \"#utility.yul\":9827:9828   */\n  0x00\n    /* \"#utility.yul\":9816:9825   */\n  dup4\n    /* \"#utility.yul\":9812:9829   */\n  add\n    /* \"#utility.yul\":9803:9809   */\n  dup5\n    /* \"#utility.yul\":9759:9830   */\n  tag_94\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9615:9837   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9843:10012   */\ntag_95:\n    /* \"#utility.yul\":9927:9938   */\n  0x00\n    /* \"#utility.yul\":9961:9967   */\n  dup3\n    /* \"#utility.yul\":9956:9959   */\n  dup3\n    /* \"#utility.yul\":9949:9968   */\n  mstore\n    /* \"#utility.yul\":10001:10005   */\n  0x20\n    /* \"#utility.yul\":9996:9999   */\n  dup3\n    /* \"#utility.yul\":9992:10006   */\n  add\n    /* \"#utility.yul\":9977:10006   */\n  swap1\n  pop\n    /* \"#utility.yul\":9843:10012   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10018:10264   */\ntag_96:\n    /* \"#utility.yul\":10099:10100   */\n  0x00\n    /* \"#utility.yul\":10109:10222   */\ntag_221:\n    /* \"#utility.yul\":10123:10129   */\n  dup4\n    /* \"#utility.yul\":10120:10121   */\n  dup2\n    /* \"#utility.yul\":10117:10130   */\n  lt\n    /* \"#utility.yul\":10109:10222   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":10208:10209   */\n  dup1\n    /* \"#utility.yul\":10203:10206   */\n  dup3\n    /* \"#utility.yul\":10199:10210   */\n  add\n    /* \"#utility.yul\":10193:10211   */\n  mload\n    /* \"#utility.yul\":10189:10190   */\n  dup2\n    /* \"#utility.yul\":10184:10187   */\n  dup5\n    /* \"#utility.yul\":10180:10191   */\n  add\n    /* \"#utility.yul\":10173:10212   */\n  mstore\n    /* \"#utility.yul\":10145:10147   */\n  0x20\n    /* \"#utility.yul\":10142:10143   */\n  dup2\n    /* \"#utility.yul\":10138:10148   */\n  add\n    /* \"#utility.yul\":10133:10148   */\n  swap1\n  pop\n    /* \"#utility.yul\":10109:10222   */\n  jump(tag_221)\ntag_223:\n    /* \"#utility.yul\":10256:10257   */\n  0x00\n    /* \"#utility.yul\":10247:10253   */\n  dup5\n    /* \"#utility.yul\":10242:10245   */\n  dup5\n    /* \"#utility.yul\":10238:10254   */\n  add\n    /* \"#utility.yul\":10231:10258   */\n  mstore\n    /* \"#utility.yul\":10080:10264   */\n  pop\n    /* \"#utility.yul\":10018:10264   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10270:10372   */\ntag_97:\n    /* \"#utility.yul\":10311:10317   */\n  0x00\n    /* \"#utility.yul\":10362:10364   */\n  0x1f\n    /* \"#utility.yul\":10358:10365   */\n  not\n    /* \"#utility.yul\":10353:10355   */\n  0x1f\n    /* \"#utility.yul\":10346:10351   */\n  dup4\n    /* \"#utility.yul\":10342:10356   */\n  add\n    /* \"#utility.yul\":10338:10366   */\n  and\n    /* \"#utility.yul\":10328:10366   */\n  swap1\n  pop\n    /* \"#utility.yul\":10270:10372   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10378:10755   */\ntag_98:\n    /* \"#utility.yul\":10466:10469   */\n  0x00\n    /* \"#utility.yul\":10494:10533   */\n  tag_226\n    /* \"#utility.yul\":10527:10532   */\n  dup3\n    /* \"#utility.yul\":10494:10533   */\n  tag_64\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10549:10620   */\n  tag_227\n    /* \"#utility.yul\":10613:10619   */\n  dup2\n    /* \"#utility.yul\":10608:10611   */\n  dup6\n    /* \"#utility.yul\":10549:10620   */\n  tag_95\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10542:10620   */\n  swap4\n  pop\n    /* \"#utility.yul\":10629:10694   */\n  tag_228\n    /* \"#utility.yul\":10687:10693   */\n  dup2\n    /* \"#utility.yul\":10682:10685   */\n  dup6\n    /* \"#utility.yul\":10675:10679   */\n  0x20\n    /* \"#utility.yul\":10668:10673   */\n  dup7\n    /* \"#utility.yul\":10664:10680   */\n  add\n    /* \"#utility.yul\":10629:10694   */\n  tag_96\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10719:10748   */\n  tag_229\n    /* \"#utility.yul\":10741:10747   */\n  dup2\n    /* \"#utility.yul\":10719:10748   */\n  tag_97\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10714:10717   */\n  dup5\n    /* \"#utility.yul\":10710:10749   */\n  add\n    /* \"#utility.yul\":10703:10749   */\n  swap2\n  pop\n    /* \"#utility.yul\":10470:10755   */\n  pop\n    /* \"#utility.yul\":10378:10755   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10761:11074   */\ntag_48:\n    /* \"#utility.yul\":10874:10878   */\n  0x00\n    /* \"#utility.yul\":10912:10914   */\n  0x20\n    /* \"#utility.yul\":10901:10910   */\n  dup3\n    /* \"#utility.yul\":10897:10915   */\n  add\n    /* \"#utility.yul\":10889:10915   */\n  swap1\n  pop\n    /* \"#utility.yul\":10961:10970   */\n  dup2\n    /* \"#utility.yul\":10955:10959   */\n  dup2\n    /* \"#utility.yul\":10951:10971   */\n  sub\n    /* \"#utility.yul\":10947:10948   */\n  0x00\n    /* \"#utility.yul\":10936:10945   */\n  dup4\n    /* \"#utility.yul\":10932:10949   */\n  add\n    /* \"#utility.yul\":10925:10972   */\n  mstore\n    /* \"#utility.yul\":10989:11067   */\n  tag_231\n    /* \"#utility.yul\":11062:11066   */\n  dup2\n    /* \"#utility.yul\":11053:11059   */\n  dup5\n    /* \"#utility.yul\":10989:11067   */\n  tag_98\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":10981:11067   */\n  swap1\n  pop\n    /* \"#utility.yul\":10761:11074   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11080:11178   */\ntag_99:\n    /* \"#utility.yul\":11131:11137   */\n  0x00\n    /* \"#utility.yul\":11165:11170   */\n  dup2\n    /* \"#utility.yul\":11159:11171   */\n  mload\n    /* \"#utility.yul\":11149:11171   */\n  swap1\n  pop\n    /* \"#utility.yul\":11080:11178   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11184:11300   */\ntag_100:\n    /* \"#utility.yul\":11235:11239   */\n  0x00\n    /* \"#utility.yul\":11258:11261   */\n  dup2\n    /* \"#utility.yul\":11250:11261   */\n  swap1\n  pop\n    /* \"#utility.yul\":11288:11292   */\n  0x20\n    /* \"#utility.yul\":11283:11286   */\n  dup3\n    /* \"#utility.yul\":11279:11293   */\n  add\n    /* \"#utility.yul\":11271:11293   */\n  swap1\n  pop\n    /* \"#utility.yul\":11184:11300   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11306:11460   */\ntag_101:\n    /* \"#utility.yul\":11349:11360   */\n  0x00\n    /* \"#utility.yul\":11385:11414   */\n  tag_235\n    /* \"#utility.yul\":11409:11412   */\n  dup3\n    /* \"#utility.yul\":11403:11413   */\n  mload\n    /* \"#utility.yul\":11385:11414   */\n  tag_89\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11448:11453   */\n  dup1\n    /* \"#utility.yul\":11424:11453   */\n  swap2\n  pop\n    /* \"#utility.yul\":11361:11460   */\n  pop\n    /* \"#utility.yul\":11306:11460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11466:12060   */\ntag_50:\n    /* \"#utility.yul\":11550:11555   */\n  0x00\n    /* \"#utility.yul\":11581:11619   */\n  tag_237\n    /* \"#utility.yul\":11613:11618   */\n  dup3\n    /* \"#utility.yul\":11581:11619   */\n  tag_99\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11644:11649   */\n  dup3\n    /* \"#utility.yul\":11671:11711   */\n  tag_238\n    /* \"#utility.yul\":11705:11710   */\n  dup5\n    /* \"#utility.yul\":11671:11711   */\n  tag_100\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11659:11711   */\n  swap1\n  pop\n    /* \"#utility.yul\":11730:11765   */\n  tag_239\n    /* \"#utility.yul\":11756:11764   */\n  dup2\n    /* \"#utility.yul\":11730:11765   */\n  tag_101\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11721:11765   */\n  swap3\n  pop\n    /* \"#utility.yul\":11789:11791   */\n  0x20\n    /* \"#utility.yul\":11781:11787   */\n  dup3\n    /* \"#utility.yul\":11778:11792   */\n  lt\n    /* \"#utility.yul\":11775:12053   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":11860:12029   */\n  tag_241\n    /* \"#utility.yul\":11945:12011   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11915:11921   */\n  dup4\n    /* \"#utility.yul\":11911:11913   */\n  0x20\n    /* \"#utility.yul\":11907:11922   */\n  sub\n    /* \"#utility.yul\":11904:11905   */\n  0x08\n    /* \"#utility.yul\":11900:11923   */\n  mul\n    /* \"#utility.yul\":11860:12029   */\n  tag_70\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":11837:11842   */\n  dup4\n    /* \"#utility.yul\":11816:12043   */\n  and\n    /* \"#utility.yul\":11807:12043   */\n  swap3\n  pop\n    /* \"#utility.yul\":11775:12053   */\ntag_240:\n    /* \"#utility.yul\":11556:12060   */\n  pop\n  pop\n    /* \"#utility.yul\":11466:12060   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12066:12257   */\ntag_55:\n    /* \"#utility.yul\":12106:12109   */\n  0x00\n    /* \"#utility.yul\":12125:12145   */\n  tag_243\n    /* \"#utility.yul\":12143:12144   */\n  dup3\n    /* \"#utility.yul\":12125:12145   */\n  tag_72\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12120:12145   */\n  swap2\n  pop\n    /* \"#utility.yul\":12159:12179   */\n  tag_244\n    /* \"#utility.yul\":12177:12178   */\n  dup4\n    /* \"#utility.yul\":12159:12179   */\n  tag_72\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12154:12179   */\n  swap3\n  pop\n    /* \"#utility.yul\":12202:12203   */\n  dup3\n    /* \"#utility.yul\":12199:12200   */\n  dup3\n    /* \"#utility.yul\":12195:12204   */\n  add\n    /* \"#utility.yul\":12188:12204   */\n  swap1\n  pop\n    /* \"#utility.yul\":12223:12226   */\n  dup1\n    /* \"#utility.yul\":12220:12221   */\n  dup3\n    /* \"#utility.yul\":12217:12227   */\n  gt\n    /* \"#utility.yul\":12214:12250   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":12230:12248   */\n  tag_246\n  tag_84\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12214:12250   */\ntag_245:\n    /* \"#utility.yul\":12066:12257   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12263:12705   */\ntag_59:\n    /* \"#utility.yul\":12412:12416   */\n  0x00\n    /* \"#utility.yul\":12450:12452   */\n  0x60\n    /* \"#utility.yul\":12439:12448   */\n  dup3\n    /* \"#utility.yul\":12435:12453   */\n  add\n    /* \"#utility.yul\":12427:12453   */\n  swap1\n  pop\n    /* \"#utility.yul\":12463:12534   */\n  tag_248\n    /* \"#utility.yul\":12531:12532   */\n  0x00\n    /* \"#utility.yul\":12520:12529   */\n  dup4\n    /* \"#utility.yul\":12516:12533   */\n  add\n    /* \"#utility.yul\":12507:12513   */\n  dup7\n    /* \"#utility.yul\":12463:12534   */\n  tag_94\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":12544:12616   */\n  tag_249\n    /* \"#utility.yul\":12612:12614   */\n  0x20\n    /* \"#utility.yul\":12601:12610   */\n  dup4\n    /* \"#utility.yul\":12597:12615   */\n  add\n    /* \"#utility.yul\":12588:12594   */\n  dup6\n    /* \"#utility.yul\":12544:12616   */\n  tag_91\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12626:12698   */\n  tag_250\n    /* \"#utility.yul\":12694:12696   */\n  0x40\n    /* \"#utility.yul\":12683:12692   */\n  dup4\n    /* \"#utility.yul\":12679:12697   */\n  add\n    /* \"#utility.yul\":12670:12676   */\n  dup5\n    /* \"#utility.yul\":12626:12698   */\n  tag_91\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12263:12705   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12711:12933   */\ntag_63:\n    /* \"#utility.yul\":12804:12808   */\n  0x00\n    /* \"#utility.yul\":12842:12844   */\n  0x20\n    /* \"#utility.yul\":12831:12840   */\n  dup3\n    /* \"#utility.yul\":12827:12845   */\n  add\n    /* \"#utility.yul\":12819:12845   */\n  swap1\n  pop\n    /* \"#utility.yul\":12855:12926   */\n  tag_252\n    /* \"#utility.yul\":12923:12924   */\n  0x00\n    /* \"#utility.yul\":12912:12921   */\n  dup4\n    /* \"#utility.yul\":12908:12925   */\n  add\n    /* \"#utility.yul\":12899:12905   */\n  dup5\n    /* \"#utility.yul\":12855:12926   */\n  tag_91\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12711:12933   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract-0c61f2e207.sol\":200:389  contract KnowLedgeToken is ERC20, ERC20Permit {... */\ntag_26:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe156ff544111f0d61300ce79ff347b01537432ccb5ab72ff35b2177c2ed3fa4b\")\n  0x00\n  assignImmutable(\"0x57650568a02a7887f4f4e1ae3b5071ca25e4fb181c1b7adfd0d312e8c663feb3\")\n  0x00\n  assignImmutable(\"0xf22c5b16043446a68d62f47815793cbbc874be5b2e65e9e313507336d6583f6d\")\n  0x00\n  assignImmutable(\"0x7046b97b103039cb97ea5110f1f4832d5d00e701e21d67c9f93f60c215815d45\")\n  0x00\n  assignImmutable(\"0x45583c716935567ea164771749ab630fc2584e89eead72531f29ea474918321a\")\n  0x00\n  assignImmutable(\"0x2eb9a99718a5ddb41634aa3a127c1821b30a0e7db3d87b6203b71d7595223311\")\n  0x00\n  assignImmutable(\"0xb775854bb325b699ccfc2a72dec93b06810d465e2ba7b7ffc485571437231d1a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract-0c61f2e207.sol\":200:389  contract KnowLedgeToken is ERC20, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_84\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_90\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_91\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2715:2722  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      tag_95\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2741:2759  _domainSeparatorV4 */\n      tag_96\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2734:2761  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2497:2504  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      tag_99\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2536:2541  owner */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2523:2535  super.nonces */\n      tag_100\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2516:2542  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_55:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_102\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_103\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_104\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_105\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n    tag_106:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_109:\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_76\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_76\n      jump\t// in\n    tag_112:\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_114\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_113)\n    tag_114:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_115:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_115\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_118\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_68:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1901:1909  deadline */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1883:1909  block.timestamp > deadline */\n      gt\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1956:1964  deadline */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1932:1965  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1986:2004  bytes32 structHash */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1022:1117  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2045:2050  owner */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2052:2059  spender */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2061:2066  value */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      tag_122\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2078:2083  owner */\n      dup13\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2068:2077  _useNonce */\n      tag_123\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2086:2094  deadline */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2017:2095  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_124\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2007:2096  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1986:2096  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2107:2119  bytes32 hash */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2139:2149  structHash */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2122:2138  _hashTypedDataV4 */\n      tag_127\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2107:2150  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2161:2175  address signer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      tag_128\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2192:2196  hash */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2198:2199  v */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  r */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  s */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2178:2191  ECDSA.recover */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2161:2206  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2230:2235  owner */\n      dup10\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2220:2226  signer */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2279:2285  signer */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2287:2292  owner */\n      dup11\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2258:2293  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      tag_133\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2323:2328  owner */\n      dup11\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2330:2337  spender */\n      dup11\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2339:2344  value */\n      dup11\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2314:2322  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1869:2352  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts@5.0.1/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.1/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_137\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_140\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_72\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_145\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_138\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_152\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_153\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0x45583c716935567ea164771749ab630fc2584e89eead72531f29ea474918321a\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0x2eb9a99718a5ddb41634aa3a127c1821b30a0e7db3d87b6203b71d7595223311\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_155:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0xb775854bb325b699ccfc2a72dec93b06810d465e2ba7b7ffc485571437231d1a\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_154)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_158\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_159\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_154:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":598:605  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":632:637  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":617:638  return _nonces[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_162\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x57650568a02a7887f4f4e1ae3b5071ca25e4fb181c1b7adfd0d312e8c663feb3\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_163\n      swap1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_165\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xe156ff544111f0d61300ce79ff347b01537432ccb5ab72ff35b2177c2ed3fa4b\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_163\n      swap1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1129:1134  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":1114:1137  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_168\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_169\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_96\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_170\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_172\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_173\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_174\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_175\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_187)\n    tag_184:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_191)\n    tag_190:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0x7046b97b103039cb97ea5110f1f4832d5d00e701e21d67c9f93f60c215815d45\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0xf22c5b16043446a68d62f47815793cbbc874be5b2e65e9e313507336d6583f6d\")\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_194\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_198\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_199\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_196)\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_76\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_76\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_196:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_173:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_207)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_209\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_207)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_207:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_175:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n    tag_215:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_218\n      jumpi\n      tag_219\n      tag_217\n      jump\t// in\n    tag_219:\n    tag_218:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_214\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_223\n      tag_217\n      jump\t// in\n    tag_223:\n    tag_222:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_224\n      jumpi\n      tag_225\n      tag_217\n      jump\t// in\n    tag_225:\n    tag_224:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_228\n      jumpi\n      tag_229\n      tag_217\n      jump\t// in\n    tag_229:\n    tag_228:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      tag_231\n      tag_217\n      jump\t// in\n    tag_231:\n    tag_230:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_235\n      jumpi\n      tag_236\n      tag_217\n      jump\t// in\n    tag_236:\n    tag_235:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_238\n      tag_217\n      jump\t// in\n    tag_238:\n    tag_237:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_214:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_242\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_243\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_245\n      tag_108\n      jump\t// in\n    tag_245:\n    tag_244:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_246:\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_249:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_250:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_251:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_291:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_291)\n    tag_293:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_252:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_253:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_296\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_249\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":818:889   */\n      tag_297\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_250\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_298\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_251\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":988:1017   */\n      tag_299\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_252\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_21:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_301\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_253\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_255:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_257:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_258:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_307\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_257\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_259:\n        /* \"#utility.yul\":1983:2007   */\n      tag_309\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_258\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_310:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_260:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_312\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_259\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_261:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_262:\n        /* \"#utility.yul\":2339:2363   */\n      tag_315\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_261\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_316:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_263:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_318\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_262\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_24:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_321\n      tag_255\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2632:2751   */\n    tag_320:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_322\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_260\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_323\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_263\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_264:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_265:\n        /* \"#utility.yul\":3196:3217   */\n      tag_326\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_264\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_27:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_328\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_265\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_266:\n        /* \"#utility.yul\":3533:3557   */\n      tag_330\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_261\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_31:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_332\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_266\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_34:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_335\n      tag_255\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3908:4027   */\n    tag_334:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_336\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_260\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_337\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_260\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_338\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_263\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_267:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_268:\n        /* \"#utility.yul\":4598:4620   */\n      tag_341\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_267\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_40:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_343\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_268\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_269:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_270:\n        /* \"#utility.yul\":5023:5047   */\n      tag_346\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_269\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_44:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_348\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_270\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_47:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_351\n      tag_255\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5364:5483   */\n    tag_350:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_352\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_260\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_271:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_272:\n        /* \"#utility.yul\":5863:5886   */\n      tag_355\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_271\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_273:\n        /* \"#utility.yul\":5986:6010   */\n      tag_357\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_258\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_274:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_275:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_276:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_277:\n        /* \"#utility.yul\":6548:6572   */\n      tag_362\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_261\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_278:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_364\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_277\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_279:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_280:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_367\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_274\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7137:7223   */\n      tag_368\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_275\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_369\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_276\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_370:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_373\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_278\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_374\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_279\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_370)\n    tag_372:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_57:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_376\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_272\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_377\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_253\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_378\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_253\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_379\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_266\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8525:8598   */\n      tag_380\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_273\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8608:8681   */\n      tag_381\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_270\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_382\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_280\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:8996   */\n    tag_281:\n        /* \"#utility.yul\":8949:8971   */\n      tag_384\n        /* \"#utility.yul\":8965:8970   */\n      dup2\n        /* \"#utility.yul\":8949:8971   */\n      tag_267\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8942:8947   */\n      dup2\n        /* \"#utility.yul\":8939:8972   */\n      eq\n        /* \"#utility.yul\":8929:8990   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":8986:8987   */\n      0x00\n        /* \"#utility.yul\":8983:8984   */\n      dup1\n        /* \"#utility.yul\":8976:8988   */\n      revert\n        /* \"#utility.yul\":8929:8990   */\n    tag_385:\n        /* \"#utility.yul\":8878:8996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9002:9137   */\n    tag_282:\n        /* \"#utility.yul\":9046:9051   */\n      0x00\n        /* \"#utility.yul\":9084:9090   */\n      dup2\n        /* \"#utility.yul\":9071:9091   */\n      calldataload\n        /* \"#utility.yul\":9062:9091   */\n      swap1\n      pop\n        /* \"#utility.yul\":9100:9131   */\n      tag_387\n        /* \"#utility.yul\":9125:9130   */\n      dup2\n        /* \"#utility.yul\":9100:9131   */\n      tag_281\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9002:9137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9265   */\n    tag_283:\n        /* \"#utility.yul\":9216:9240   */\n      tag_389\n        /* \"#utility.yul\":9234:9239   */\n      dup2\n        /* \"#utility.yul\":9216:9240   */\n      tag_269\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9209:9214   */\n      dup2\n        /* \"#utility.yul\":9206:9241   */\n      eq\n        /* \"#utility.yul\":9196:9259   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":9255:9256   */\n      0x00\n        /* \"#utility.yul\":9252:9253   */\n      dup1\n        /* \"#utility.yul\":9245:9257   */\n      revert\n        /* \"#utility.yul\":9196:9259   */\n    tag_390:\n        /* \"#utility.yul\":9143:9265   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9271:9410   */\n    tag_284:\n        /* \"#utility.yul\":9317:9322   */\n      0x00\n        /* \"#utility.yul\":9355:9361   */\n      dup2\n        /* \"#utility.yul\":9342:9362   */\n      calldataload\n        /* \"#utility.yul\":9333:9362   */\n      swap1\n      pop\n        /* \"#utility.yul\":9371:9404   */\n      tag_392\n        /* \"#utility.yul\":9398:9403   */\n      dup2\n        /* \"#utility.yul\":9371:9404   */\n      tag_283\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9271:9410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9416:10615   */\n    tag_67:\n        /* \"#utility.yul\":9527:9533   */\n      0x00\n        /* \"#utility.yul\":9535:9541   */\n      dup1\n        /* \"#utility.yul\":9543:9549   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup1\n        /* \"#utility.yul\":9559:9565   */\n      0x00\n        /* \"#utility.yul\":9567:9573   */\n      dup1\n        /* \"#utility.yul\":9575:9581   */\n      0x00\n        /* \"#utility.yul\":9624:9627   */\n      0xe0\n        /* \"#utility.yul\":9612:9621   */\n      dup9\n        /* \"#utility.yul\":9603:9610   */\n      dup11\n        /* \"#utility.yul\":9599:9622   */\n      sub\n        /* \"#utility.yul\":9595:9628   */\n      slt\n        /* \"#utility.yul\":9592:9712   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":9631:9710   */\n      tag_395\n      tag_255\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9592:9712   */\n    tag_394:\n        /* \"#utility.yul\":9751:9752   */\n      0x00\n        /* \"#utility.yul\":9776:9829   */\n      tag_396\n        /* \"#utility.yul\":9821:9828   */\n      dup11\n        /* \"#utility.yul\":9812:9818   */\n      dup3\n        /* \"#utility.yul\":9801:9810   */\n      dup12\n        /* \"#utility.yul\":9797:9819   */\n      add\n        /* \"#utility.yul\":9776:9829   */\n      tag_260\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9766:9829   */\n      swap8\n      pop\n        /* \"#utility.yul\":9722:9839   */\n      pop\n        /* \"#utility.yul\":9878:9880   */\n      0x20\n        /* \"#utility.yul\":9904:9957   */\n      tag_397\n        /* \"#utility.yul\":9949:9956   */\n      dup11\n        /* \"#utility.yul\":9940:9946   */\n      dup3\n        /* \"#utility.yul\":9929:9938   */\n      dup12\n        /* \"#utility.yul\":9925:9947   */\n      add\n        /* \"#utility.yul\":9904:9957   */\n      tag_260\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9894:9957   */\n      swap7\n      pop\n        /* \"#utility.yul\":9849:9967   */\n      pop\n        /* \"#utility.yul\":10006:10008   */\n      0x40\n        /* \"#utility.yul\":10032:10085   */\n      tag_398\n        /* \"#utility.yul\":10077:10084   */\n      dup11\n        /* \"#utility.yul\":10068:10074   */\n      dup3\n        /* \"#utility.yul\":10057:10066   */\n      dup12\n        /* \"#utility.yul\":10053:10075   */\n      add\n        /* \"#utility.yul\":10032:10085   */\n      tag_263\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10022:10085   */\n      swap6\n      pop\n        /* \"#utility.yul\":9977:10095   */\n      pop\n        /* \"#utility.yul\":10134:10136   */\n      0x60\n        /* \"#utility.yul\":10160:10213   */\n      tag_399\n        /* \"#utility.yul\":10205:10212   */\n      dup11\n        /* \"#utility.yul\":10196:10202   */\n      dup3\n        /* \"#utility.yul\":10185:10194   */\n      dup12\n        /* \"#utility.yul\":10181:10203   */\n      add\n        /* \"#utility.yul\":10160:10213   */\n      tag_263\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":10150:10213   */\n      swap5\n      pop\n        /* \"#utility.yul\":10105:10223   */\n      pop\n        /* \"#utility.yul\":10262:10265   */\n      0x80\n        /* \"#utility.yul\":10289:10340   */\n      tag_400\n        /* \"#utility.yul\":10332:10339   */\n      dup11\n        /* \"#utility.yul\":10323:10329   */\n      dup3\n        /* \"#utility.yul\":10312:10321   */\n      dup12\n        /* \"#utility.yul\":10308:10330   */\n      add\n        /* \"#utility.yul\":10289:10340   */\n      tag_282\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10279:10340   */\n      swap4\n      pop\n        /* \"#utility.yul\":10233:10350   */\n      pop\n        /* \"#utility.yul\":10389:10392   */\n      0xa0\n        /* \"#utility.yul\":10416:10469   */\n      tag_401\n        /* \"#utility.yul\":10461:10468   */\n      dup11\n        /* \"#utility.yul\":10452:10458   */\n      dup3\n        /* \"#utility.yul\":10441:10450   */\n      dup12\n        /* \"#utility.yul\":10437:10459   */\n      add\n        /* \"#utility.yul\":10416:10469   */\n      tag_284\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10406:10469   */\n      swap3\n      pop\n        /* \"#utility.yul\":10360:10479   */\n      pop\n        /* \"#utility.yul\":10518:10521   */\n      0xc0\n        /* \"#utility.yul\":10545:10598   */\n      tag_402\n        /* \"#utility.yul\":10590:10597   */\n      dup11\n        /* \"#utility.yul\":10581:10587   */\n      dup3\n        /* \"#utility.yul\":10570:10579   */\n      dup12\n        /* \"#utility.yul\":10566:10588   */\n      add\n        /* \"#utility.yul\":10545:10598   */\n      tag_284\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10535:10598   */\n      swap2\n      pop\n        /* \"#utility.yul\":10489:10608   */\n      pop\n        /* \"#utility.yul\":9416:10615   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10621:11095   */\n    tag_71:\n        /* \"#utility.yul\":10689:10695   */\n      0x00\n        /* \"#utility.yul\":10697:10703   */\n      dup1\n        /* \"#utility.yul\":10746:10748   */\n      0x40\n        /* \"#utility.yul\":10734:10743   */\n      dup4\n        /* \"#utility.yul\":10725:10732   */\n      dup6\n        /* \"#utility.yul\":10721:10744   */\n      sub\n        /* \"#utility.yul\":10717:10749   */\n      slt\n        /* \"#utility.yul\":10714:10833   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":10752:10831   */\n      tag_405\n      tag_255\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10714:10833   */\n    tag_404:\n        /* \"#utility.yul\":10872:10873   */\n      0x00\n        /* \"#utility.yul\":10897:10950   */\n      tag_406\n        /* \"#utility.yul\":10942:10949   */\n      dup6\n        /* \"#utility.yul\":10933:10939   */\n      dup3\n        /* \"#utility.yul\":10922:10931   */\n      dup7\n        /* \"#utility.yul\":10918:10940   */\n      add\n        /* \"#utility.yul\":10897:10950   */\n      tag_260\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10887:10950   */\n      swap3\n      pop\n        /* \"#utility.yul\":10843:10960   */\n      pop\n        /* \"#utility.yul\":10999:11001   */\n      0x20\n        /* \"#utility.yul\":11025:11078   */\n      tag_407\n        /* \"#utility.yul\":11070:11077   */\n      dup6\n        /* \"#utility.yul\":11061:11067   */\n      dup3\n        /* \"#utility.yul\":11050:11059   */\n      dup7\n        /* \"#utility.yul\":11046:11068   */\n      add\n        /* \"#utility.yul\":11025:11078   */\n      tag_260\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11015:11078   */\n      swap2\n      pop\n        /* \"#utility.yul\":10970:11088   */\n      pop\n        /* \"#utility.yul\":10621:11095   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11101:11281   */\n    tag_285:\n        /* \"#utility.yul\":11149:11226   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11139:11227   */\n      mstore\n        /* \"#utility.yul\":11246:11250   */\n      0x22\n        /* \"#utility.yul\":11243:11244   */\n      0x04\n        /* \"#utility.yul\":11236:11251   */\n      mstore\n        /* \"#utility.yul\":11270:11274   */\n      0x24\n        /* \"#utility.yul\":11267:11268   */\n      0x00\n        /* \"#utility.yul\":11260:11275   */\n      revert\n        /* \"#utility.yul\":11287:11607   */\n    tag_76:\n        /* \"#utility.yul\":11331:11337   */\n      0x00\n        /* \"#utility.yul\":11368:11369   */\n      0x02\n        /* \"#utility.yul\":11362:11366   */\n      dup3\n        /* \"#utility.yul\":11358:11370   */\n      div\n        /* \"#utility.yul\":11348:11370   */\n      swap1\n      pop\n        /* \"#utility.yul\":11415:11416   */\n      0x01\n        /* \"#utility.yul\":11409:11413   */\n      dup3\n        /* \"#utility.yul\":11405:11417   */\n      and\n        /* \"#utility.yul\":11436:11454   */\n      dup1\n        /* \"#utility.yul\":11426:11507   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":11492:11496   */\n      0x7f\n        /* \"#utility.yul\":11484:11490   */\n      dup3\n        /* \"#utility.yul\":11480:11497   */\n      and\n        /* \"#utility.yul\":11470:11497   */\n      swap2\n      pop\n        /* \"#utility.yul\":11426:11507   */\n    tag_410:\n        /* \"#utility.yul\":11554:11556   */\n      0x20\n        /* \"#utility.yul\":11546:11552   */\n      dup3\n        /* \"#utility.yul\":11543:11557   */\n      lt\n        /* \"#utility.yul\":11523:11541   */\n      dup2\n        /* \"#utility.yul\":11520:11558   */\n      sub\n        /* \"#utility.yul\":11517:11601   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":11573:11591   */\n      tag_412\n      tag_285\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11517:11601   */\n    tag_411:\n        /* \"#utility.yul\":11338:11607   */\n      pop\n        /* \"#utility.yul\":11287:11607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11613:11793   */\n    tag_108:\n        /* \"#utility.yul\":11661:11738   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11658:11659   */\n      0x00\n        /* \"#utility.yul\":11651:11739   */\n      mstore\n        /* \"#utility.yul\":11758:11762   */\n      0x41\n        /* \"#utility.yul\":11755:11756   */\n      0x04\n        /* \"#utility.yul\":11748:11763   */\n      mstore\n        /* \"#utility.yul\":11782:11786   */\n      0x24\n        /* \"#utility.yul\":11779:11780   */\n      0x00\n        /* \"#utility.yul\":11772:11787   */\n      revert\n        /* \"#utility.yul\":11799:12574   */\n    tag_125:\n        /* \"#utility.yul\":12032:12036   */\n      0x00\n        /* \"#utility.yul\":12070:12073   */\n      0xc0\n        /* \"#utility.yul\":12059:12068   */\n      dup3\n        /* \"#utility.yul\":12055:12074   */\n      add\n        /* \"#utility.yul\":12047:12074   */\n      swap1\n      pop\n        /* \"#utility.yul\":12084:12155   */\n      tag_415\n        /* \"#utility.yul\":12152:12153   */\n      0x00\n        /* \"#utility.yul\":12141:12150   */\n      dup4\n        /* \"#utility.yul\":12137:12154   */\n      add\n        /* \"#utility.yul\":12128:12134   */\n      dup10\n        /* \"#utility.yul\":12084:12155   */\n      tag_270\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":12165:12237   */\n      tag_416\n        /* \"#utility.yul\":12233:12235   */\n      0x20\n        /* \"#utility.yul\":12222:12231   */\n      dup4\n        /* \"#utility.yul\":12218:12236   */\n      add\n        /* \"#utility.yul\":12209:12215   */\n      dup9\n        /* \"#utility.yul\":12165:12237   */\n      tag_273\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12247:12319   */\n      tag_417\n        /* \"#utility.yul\":12315:12317   */\n      0x40\n        /* \"#utility.yul\":12304:12313   */\n      dup4\n        /* \"#utility.yul\":12300:12318   */\n      add\n        /* \"#utility.yul\":12291:12297   */\n      dup8\n        /* \"#utility.yul\":12247:12319   */\n      tag_273\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12329:12401   */\n      tag_418\n        /* \"#utility.yul\":12397:12399   */\n      0x60\n        /* \"#utility.yul\":12386:12395   */\n      dup4\n        /* \"#utility.yul\":12382:12400   */\n      add\n        /* \"#utility.yul\":12373:12379   */\n      dup7\n        /* \"#utility.yul\":12329:12401   */\n      tag_266\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12411:12484   */\n      tag_419\n        /* \"#utility.yul\":12479:12482   */\n      0x80\n        /* \"#utility.yul\":12468:12477   */\n      dup4\n        /* \"#utility.yul\":12464:12483   */\n      add\n        /* \"#utility.yul\":12455:12461   */\n      dup6\n        /* \"#utility.yul\":12411:12484   */\n      tag_266\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12494:12567   */\n      tag_420\n        /* \"#utility.yul\":12562:12565   */\n      0xa0\n        /* \"#utility.yul\":12551:12560   */\n      dup4\n        /* \"#utility.yul\":12547:12566   */\n      add\n        /* \"#utility.yul\":12538:12544   */\n      dup5\n        /* \"#utility.yul\":12494:12567   */\n      tag_266\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":11799:12574   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12580:12912   */\n    tag_132:\n        /* \"#utility.yul\":12701:12705   */\n      0x00\n        /* \"#utility.yul\":12739:12741   */\n      0x40\n        /* \"#utility.yul\":12728:12737   */\n      dup3\n        /* \"#utility.yul\":12724:12742   */\n      add\n        /* \"#utility.yul\":12716:12742   */\n      swap1\n      pop\n        /* \"#utility.yul\":12752:12823   */\n      tag_422\n        /* \"#utility.yul\":12820:12821   */\n      0x00\n        /* \"#utility.yul\":12809:12818   */\n      dup4\n        /* \"#utility.yul\":12805:12822   */\n      add\n        /* \"#utility.yul\":12796:12802   */\n      dup6\n        /* \"#utility.yul\":12752:12823   */\n      tag_273\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12833:12905   */\n      tag_423\n        /* \"#utility.yul\":12901:12903   */\n      0x20\n        /* \"#utility.yul\":12890:12899   */\n      dup4\n        /* \"#utility.yul\":12886:12904   */\n      add\n        /* \"#utility.yul\":12877:12883   */\n      dup5\n        /* \"#utility.yul\":12833:12905   */\n      tag_273\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12580:12912   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12918:13360   */\n    tag_144:\n        /* \"#utility.yul\":13067:13071   */\n      0x00\n        /* \"#utility.yul\":13105:13107   */\n      0x60\n        /* \"#utility.yul\":13094:13103   */\n      dup3\n        /* \"#utility.yul\":13090:13108   */\n      add\n        /* \"#utility.yul\":13082:13108   */\n      swap1\n      pop\n        /* \"#utility.yul\":13118:13189   */\n      tag_425\n        /* \"#utility.yul\":13186:13187   */\n      0x00\n        /* \"#utility.yul\":13175:13184   */\n      dup4\n        /* \"#utility.yul\":13171:13188   */\n      add\n        /* \"#utility.yul\":13162:13168   */\n      dup7\n        /* \"#utility.yul\":13118:13189   */\n      tag_273\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13199:13271   */\n      tag_426\n        /* \"#utility.yul\":13267:13269   */\n      0x20\n        /* \"#utility.yul\":13256:13265   */\n      dup4\n        /* \"#utility.yul\":13252:13270   */\n      add\n        /* \"#utility.yul\":13243:13249   */\n      dup6\n        /* \"#utility.yul\":13199:13271   */\n      tag_266\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13281:13353   */\n      tag_427\n        /* \"#utility.yul\":13349:13351   */\n      0x40\n        /* \"#utility.yul\":13338:13347   */\n      dup4\n        /* \"#utility.yul\":13334:13352   */\n      add\n        /* \"#utility.yul\":13325:13331   */\n      dup5\n        /* \"#utility.yul\":13281:13353   */\n      tag_266\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12918:13360   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13366:13588   */\n    tag_149:\n        /* \"#utility.yul\":13459:13463   */\n      0x00\n        /* \"#utility.yul\":13497:13499   */\n      0x20\n        /* \"#utility.yul\":13486:13495   */\n      dup3\n        /* \"#utility.yul\":13482:13500   */\n      add\n        /* \"#utility.yul\":13474:13500   */\n      swap1\n      pop\n        /* \"#utility.yul\":13510:13581   */\n      tag_429\n        /* \"#utility.yul\":13578:13579   */\n      0x00\n        /* \"#utility.yul\":13567:13576   */\n      dup4\n        /* \"#utility.yul\":13563:13580   */\n      add\n        /* \"#utility.yul\":13554:13560   */\n      dup5\n        /* \"#utility.yul\":13510:13581   */\n      tag_273\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13366:13588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13594:13774   */\n    tag_286:\n        /* \"#utility.yul\":13642:13719   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13639:13640   */\n      0x00\n        /* \"#utility.yul\":13632:13720   */\n      mstore\n        /* \"#utility.yul\":13739:13743   */\n      0x11\n        /* \"#utility.yul\":13736:13737   */\n      0x04\n        /* \"#utility.yul\":13729:13744   */\n      mstore\n        /* \"#utility.yul\":13763:13767   */\n      0x24\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13753:13768   */\n      revert\n        /* \"#utility.yul\":13780:13971   */\n    tag_186:\n        /* \"#utility.yul\":13820:13823   */\n      0x00\n        /* \"#utility.yul\":13839:13859   */\n      tag_432\n        /* \"#utility.yul\":13857:13858   */\n      dup3\n        /* \"#utility.yul\":13839:13859   */\n      tag_261\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13834:13859   */\n      swap2\n      pop\n        /* \"#utility.yul\":13873:13893   */\n      tag_433\n        /* \"#utility.yul\":13891:13892   */\n      dup4\n        /* \"#utility.yul\":13873:13893   */\n      tag_261\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13868:13893   */\n      swap3\n      pop\n        /* \"#utility.yul\":13916:13917   */\n      dup3\n        /* \"#utility.yul\":13913:13914   */\n      dup3\n        /* \"#utility.yul\":13909:13918   */\n      add\n        /* \"#utility.yul\":13902:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13937:13940   */\n      dup1\n        /* \"#utility.yul\":13934:13935   */\n      dup3\n        /* \"#utility.yul\":13931:13941   */\n      gt\n        /* \"#utility.yul\":13928:13964   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":13944:13962   */\n      tag_435\n      tag_286\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13928:13964   */\n    tag_434:\n        /* \"#utility.yul\":13780:13971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13977:14641   */\n    tag_195:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14223   */\n      0xa0\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14224   */\n      add\n        /* \"#utility.yul\":14197:14224   */\n      swap1\n      pop\n        /* \"#utility.yul\":14234:14305   */\n      tag_437\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14291:14300   */\n      dup4\n        /* \"#utility.yul\":14287:14304   */\n      add\n        /* \"#utility.yul\":14278:14284   */\n      dup9\n        /* \"#utility.yul\":14234:14305   */\n      tag_270\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14315:14387   */\n      tag_438\n        /* \"#utility.yul\":14383:14385   */\n      0x20\n        /* \"#utility.yul\":14372:14381   */\n      dup4\n        /* \"#utility.yul\":14368:14386   */\n      add\n        /* \"#utility.yul\":14359:14365   */\n      dup8\n        /* \"#utility.yul\":14315:14387   */\n      tag_270\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14397:14469   */\n      tag_439\n        /* \"#utility.yul\":14465:14467   */\n      0x40\n        /* \"#utility.yul\":14454:14463   */\n      dup4\n        /* \"#utility.yul\":14450:14468   */\n      add\n        /* \"#utility.yul\":14441:14447   */\n      dup7\n        /* \"#utility.yul\":14397:14469   */\n      tag_270\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":14479:14551   */\n      tag_440\n        /* \"#utility.yul\":14547:14549   */\n      0x60\n        /* \"#utility.yul\":14536:14545   */\n      dup4\n        /* \"#utility.yul\":14532:14550   */\n      add\n        /* \"#utility.yul\":14523:14529   */\n      dup6\n        /* \"#utility.yul\":14479:14551   */\n      tag_266\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14561:14634   */\n      tag_441\n        /* \"#utility.yul\":14629:14632   */\n      0x80\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14633   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14634   */\n      tag_273\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13977:14641   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14647:15192   */\n    tag_210:\n        /* \"#utility.yul\":14820:14824   */\n      0x00\n        /* \"#utility.yul\":14858:14861   */\n      0x80\n        /* \"#utility.yul\":14847:14856   */\n      dup3\n        /* \"#utility.yul\":14843:14862   */\n      add\n        /* \"#utility.yul\":14835:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14872:14943   */\n      tag_443\n        /* \"#utility.yul\":14940:14941   */\n      0x00\n        /* \"#utility.yul\":14929:14938   */\n      dup4\n        /* \"#utility.yul\":14925:14942   */\n      add\n        /* \"#utility.yul\":14916:14922   */\n      dup8\n        /* \"#utility.yul\":14872:14943   */\n      tag_270\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14953:15021   */\n      tag_444\n        /* \"#utility.yul\":15017:15019   */\n      0x20\n        /* \"#utility.yul\":15006:15015   */\n      dup4\n        /* \"#utility.yul\":15002:15020   */\n      add\n        /* \"#utility.yul\":14993:14999   */\n      dup7\n        /* \"#utility.yul\":14953:15021   */\n      tag_268\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15031:15103   */\n      tag_445\n        /* \"#utility.yul\":15099:15101   */\n      0x40\n        /* \"#utility.yul\":15088:15097   */\n      dup4\n        /* \"#utility.yul\":15084:15102   */\n      add\n        /* \"#utility.yul\":15075:15081   */\n      dup6\n        /* \"#utility.yul\":15031:15103   */\n      tag_270\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":15113:15185   */\n      tag_446\n        /* \"#utility.yul\":15181:15183   */\n      0x60\n        /* \"#utility.yul\":15170:15179   */\n      dup4\n        /* \"#utility.yul\":15166:15184   */\n      add\n        /* \"#utility.yul\":15157:15163   */\n      dup5\n        /* \"#utility.yul\":15113:15185   */\n      tag_270\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14647:15192   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15378   */\n    tag_217:\n        /* \"#utility.yul\":15246:15323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15243:15244   */\n      0x00\n        /* \"#utility.yul\":15236:15324   */\n      mstore\n        /* \"#utility.yul\":15343:15347   */\n      0x21\n        /* \"#utility.yul\":15340:15341   */\n      0x04\n        /* \"#utility.yul\":15333:15348   */\n      mstore\n        /* \"#utility.yul\":15367:15371   */\n      0x24\n        /* \"#utility.yul\":15364:15365   */\n      0x00\n        /* \"#utility.yul\":15357:15372   */\n      revert\n\n    auxdata: 0xa2646970667358221220a3b651deeede408756b2dd895a28adcb1cc2b656366aae713ce89fd739b1b30764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2095": {
									"entryPoint": null,
									"id": 2095,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3488": {
									"entryPoint": null,
									"id": 3488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_803": {
									"entryPoint": null,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2142": {
									"entryPoint": 603,
									"id": 2142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_516": {
									"entryPoint": 703,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 956,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_240": {
									"entryPoint": 695,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1372": {
									"entryPoint": 947,
									"id": 1372,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1226": {
									"entryPoint": 518,
									"id": 1226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1128": {
									"entryPoint": 841,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2401,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12936:18",
										"nodeType": "YulBlock",
										"src": "0:12936:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "140:152:18",
													"nodeType": "YulBlock",
													"src": "140:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:18",
																		"nodeType": "YulLiteral",
																		"src": "160:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:18"
																},
																"nativeSrc": "150:88:18",
																"nodeType": "YulFunctionCall",
																"src": "150:88:18"
															},
															"nativeSrc": "150:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:18",
																		"nodeType": "YulLiteral",
																		"src": "254:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:18",
																		"nodeType": "YulLiteral",
																		"src": "257:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:18"
																},
																"nativeSrc": "247:15:18",
																"nodeType": "YulFunctionCall",
																"src": "247:15:18"
															},
															"nativeSrc": "247:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:18",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:18",
																		"nodeType": "YulLiteral",
																		"src": "281:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:18"
																},
																"nativeSrc": "271:15:18",
																"nodeType": "YulFunctionCall",
																"src": "271:15:18"
															},
															"nativeSrc": "271:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:18"
											},
											{
												"body": {
													"nativeSrc": "326:152:18",
													"nodeType": "YulBlock",
													"src": "326:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:18",
																		"nodeType": "YulLiteral",
																		"src": "343:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:18",
																		"nodeType": "YulLiteral",
																		"src": "346:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:18"
																},
																"nativeSrc": "336:88:18",
																"nodeType": "YulFunctionCall",
																"src": "336:88:18"
															},
															"nativeSrc": "336:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:18",
																		"nodeType": "YulLiteral",
																		"src": "443:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nativeSrc": "433:15:18",
																"nodeType": "YulFunctionCall",
																"src": "433:15:18"
															},
															"nativeSrc": "433:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:18",
																		"nodeType": "YulLiteral",
																		"src": "467:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:18"
																},
																"nativeSrc": "457:15:18",
																"nodeType": "YulFunctionCall",
																"src": "457:15:18"
															},
															"nativeSrc": "457:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:18"
											},
											{
												"body": {
													"nativeSrc": "535:269:18",
													"nodeType": "YulBlock",
													"src": "535:269:18",
													"statements": [
														{
															"nativeSrc": "545:22:18",
															"nodeType": "YulAssignment",
															"src": "545:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "565:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:18"
																},
																"nativeSrc": "555:12:18",
																"nodeType": "YulFunctionCall",
																"src": "555:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:18"
																}
															]
														},
														{
															"nativeSrc": "576:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:18",
																		"nodeType": "YulLiteral",
																		"src": "612:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:18"
																},
																"nativeSrc": "602:12:18",
																"nodeType": "YulFunctionCall",
																"src": "602:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:18",
																	"nodeType": "YulTypedName",
																	"src": "580:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:18",
																"nodeType": "YulBlock",
																"src": "653:51:18",
																"statements": [
																	{
																		"nativeSrc": "667:27:18",
																		"nodeType": "YulAssignment",
																		"src": "667:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:18",
																					"nodeType": "YulLiteral",
																					"src": "689:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:18"
																			},
																			"nativeSrc": "677:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:18"
																},
																"nativeSrc": "626:26:18",
																"nodeType": "YulFunctionCall",
																"src": "626:26:18"
															},
															"nativeSrc": "623:81:18",
															"nodeType": "YulIf",
															"src": "623:81:18"
														},
														{
															"body": {
																"nativeSrc": "756:42:18",
																"nodeType": "YulBlock",
																"src": "756:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:18"
																			},
																			"nativeSrc": "770:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:18"
																		},
																		"nativeSrc": "770:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:18",
																				"nodeType": "YulLiteral",
																				"src": "751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:18"
																		},
																		"nativeSrc": "740:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:18"
																},
																"nativeSrc": "717:38:18",
																"nodeType": "YulFunctionCall",
																"src": "717:38:18"
															},
															"nativeSrc": "714:84:18",
															"nodeType": "YulIf",
															"src": "714:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:18",
														"nodeType": "YulTypedName",
														"src": "519:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:18",
														"nodeType": "YulTypedName",
														"src": "528:6:18",
														"type": ""
													}
												],
												"src": "484:320:18"
											},
											{
												"body": {
													"nativeSrc": "864:87:18",
													"nodeType": "YulBlock",
													"src": "864:87:18",
													"statements": [
														{
															"nativeSrc": "874:11:18",
															"nodeType": "YulAssignment",
															"src": "874:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:18",
																"nodeType": "YulIdentifier",
																"src": "882:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:18",
																		"nodeType": "YulLiteral",
																		"src": "902:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:18"
																},
																"nativeSrc": "895:14:18",
																"nodeType": "YulFunctionCall",
																"src": "895:14:18"
															},
															"nativeSrc": "895:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:18"
														},
														{
															"nativeSrc": "918:26:18",
															"nodeType": "YulAssignment",
															"src": "918:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:18",
																		"nodeType": "YulLiteral",
																		"src": "936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:18",
																		"nodeType": "YulLiteral",
																		"src": "939:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:18"
																},
																"nativeSrc": "926:18:18",
																"nodeType": "YulFunctionCall",
																"src": "926:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:18",
														"nodeType": "YulTypedName",
														"src": "851:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:18",
														"nodeType": "YulTypedName",
														"src": "859:4:18",
														"type": ""
													}
												],
												"src": "810:141:18"
											},
											{
												"body": {
													"nativeSrc": "1001:49:18",
													"nodeType": "YulBlock",
													"src": "1001:49:18",
													"statements": [
														{
															"nativeSrc": "1011:33:18",
															"nodeType": "YulAssignment",
															"src": "1011:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:18"
																		},
																		"nativeSrc": "1025:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:18"
																},
																"nativeSrc": "1021:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:18",
														"nodeType": "YulTypedName",
														"src": "984:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:18",
														"nodeType": "YulTypedName",
														"src": "994:6:18",
														"type": ""
													}
												],
												"src": "957:93:18"
											},
											{
												"body": {
													"nativeSrc": "1109:54:18",
													"nodeType": "YulBlock",
													"src": "1109:54:18",
													"statements": [
														{
															"nativeSrc": "1119:37:18",
															"nodeType": "YulAssignment",
															"src": "1119:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:18"
																},
																"nativeSrc": "1140:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:18",
														"nodeType": "YulTypedName",
														"src": "1084:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:18",
														"nodeType": "YulTypedName",
														"src": "1090:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:18",
														"nodeType": "YulTypedName",
														"src": "1100:8:18",
														"type": ""
													}
												],
												"src": "1056:107:18"
											},
											{
												"body": {
													"nativeSrc": "1245:317:18",
													"nodeType": "YulBlock",
													"src": "1245:317:18",
													"statements": [
														{
															"nativeSrc": "1255:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:18"
																},
																"nativeSrc": "1272:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:18",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:18",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:18"
																},
																"nativeSrc": "1311:97:18",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:18",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:18",
															"nodeType": "YulAssignment",
															"src": "1417:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:18"
																},
																"nativeSrc": "1429:39:18",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:18"
																}
															]
														},
														{
															"nativeSrc": "1477:30:18",
															"nodeType": "YulAssignment",
															"src": "1477:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:18"
																		},
																		"nativeSrc": "1497:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:18"
																},
																"nativeSrc": "1486:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:18"
																}
															]
														},
														{
															"nativeSrc": "1516:40:18",
															"nodeType": "YulAssignment",
															"src": "1516:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:18"
																		},
																		"nativeSrc": "1536:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:18"
																},
																"nativeSrc": "1526:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:18",
														"nodeType": "YulTypedName",
														"src": "1206:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:18",
														"nodeType": "YulTypedName",
														"src": "1213:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:18",
														"nodeType": "YulTypedName",
														"src": "1225:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:18",
														"nodeType": "YulTypedName",
														"src": "1238:6:18",
														"type": ""
													}
												],
												"src": "1169:393:18"
											},
											{
												"body": {
													"nativeSrc": "1613:32:18",
													"nodeType": "YulBlock",
													"src": "1613:32:18",
													"statements": [
														{
															"nativeSrc": "1623:16:18",
															"nodeType": "YulAssignment",
															"src": "1623:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:18",
																"nodeType": "YulIdentifier",
																"src": "1634:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:18",
														"nodeType": "YulTypedName",
														"src": "1595:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:18",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"src": "1568:77:18"
											},
											{
												"body": {
													"nativeSrc": "1683:28:18",
													"nodeType": "YulBlock",
													"src": "1683:28:18",
													"statements": [
														{
															"nativeSrc": "1693:12:18",
															"nodeType": "YulAssignment",
															"src": "1693:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:18",
																"nodeType": "YulIdentifier",
																"src": "1700:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:18",
														"nodeType": "YulTypedName",
														"src": "1669:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:18",
														"nodeType": "YulTypedName",
														"src": "1679:3:18",
														"type": ""
													}
												],
												"src": "1651:60:18"
											},
											{
												"body": {
													"nativeSrc": "1777:82:18",
													"nodeType": "YulBlock",
													"src": "1777:82:18",
													"statements": [
														{
															"nativeSrc": "1787:66:18",
															"nodeType": "YulAssignment",
															"src": "1787:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:18"
																				},
																				"nativeSrc": "1827:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:18"
																		},
																		"nativeSrc": "1818:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:18"
																},
																"nativeSrc": "1800:53:18",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:18",
														"nodeType": "YulTypedName",
														"src": "1757:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:18",
														"nodeType": "YulTypedName",
														"src": "1767:9:18",
														"type": ""
													}
												],
												"src": "1717:142:18"
											},
											{
												"body": {
													"nativeSrc": "1912:28:18",
													"nodeType": "YulBlock",
													"src": "1912:28:18",
													"statements": [
														{
															"nativeSrc": "1922:12:18",
															"nodeType": "YulAssignment",
															"src": "1922:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:18",
																"nodeType": "YulIdentifier",
																"src": "1929:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:18",
														"nodeType": "YulTypedName",
														"src": "1898:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:18",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"src": "1865:75:18"
											},
											{
												"body": {
													"nativeSrc": "2022:193:18",
													"nodeType": "YulBlock",
													"src": "2022:193:18",
													"statements": [
														{
															"nativeSrc": "2032:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:18"
																},
																"nativeSrc": "2056:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:18",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:18"
																				},
																				"nativeSrc": "2145:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:18"
																				},
																				"nativeSrc": "2166:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:18"
																		},
																		"nativeSrc": "2117:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																},
																"nativeSrc": "2104:105:18",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:18"
															},
															"nativeSrc": "2104:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:18",
														"nodeType": "YulTypedName",
														"src": "1999:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:18",
														"nodeType": "YulTypedName",
														"src": "2005:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:18",
														"nodeType": "YulTypedName",
														"src": "2013:7:18",
														"type": ""
													}
												],
												"src": "1946:269:18"
											},
											{
												"body": {
													"nativeSrc": "2270:24:18",
													"nodeType": "YulBlock",
													"src": "2270:24:18",
													"statements": [
														{
															"nativeSrc": "2280:8:18",
															"nodeType": "YulAssignment",
															"src": "2280:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:18",
																"nodeType": "YulLiteral",
																"src": "2287:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:18",
														"nodeType": "YulTypedName",
														"src": "2266:3:18",
														"type": ""
													}
												],
												"src": "2221:73:18"
											},
											{
												"body": {
													"nativeSrc": "2353:136:18",
													"nodeType": "YulBlock",
													"src": "2353:136:18",
													"statements": [
														{
															"nativeSrc": "2363:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:18"
																},
																"nativeSrc": "2377:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:18"
																},
																"nativeSrc": "2418:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:18"
															},
															"nativeSrc": "2418:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:18",
														"nodeType": "YulTypedName",
														"src": "2339:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:18",
														"nodeType": "YulTypedName",
														"src": "2345:6:18",
														"type": ""
													}
												],
												"src": "2300:189:18"
											},
											{
												"body": {
													"nativeSrc": "2545:136:18",
													"nodeType": "YulBlock",
													"src": "2545:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:18",
																"nodeType": "YulBlock",
																"src": "2612:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:18"
																			},
																			"nativeSrc": "2626:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:18"
																		},
																		"nativeSrc": "2626:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:18"
																},
																"nativeSrc": "2562:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:18"
															},
															"nativeSrc": "2555:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:18",
																"nodeType": "YulBlock",
																"src": "2577:26:18",
																"statements": [
																	{
																		"nativeSrc": "2579:22:18",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:18"
																			},
																			"nativeSrc": "2588:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:18",
																"nodeType": "YulBlock",
																"src": "2559:2:18",
																"statements": []
															},
															"src": "2555:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:18",
														"nodeType": "YulTypedName",
														"src": "2533:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:18",
														"nodeType": "YulTypedName",
														"src": "2540:3:18",
														"type": ""
													}
												],
												"src": "2495:186:18"
											},
											{
												"body": {
													"nativeSrc": "2766:464:18",
													"nodeType": "YulBlock",
													"src": "2766:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:18",
																"nodeType": "YulBlock",
																"src": "2792:431:18",
																"statements": [
																	{
																		"nativeSrc": "2806:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:18"
																			},
																			"nativeSrc": "2822:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:18",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:18"
																					},
																					"nativeSrc": "2906:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:18"
																			},
																			"nativeSrc": "2892:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:18",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:18",
																			"nodeType": "YulBlock",
																			"src": "3093:27:18",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:18",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:18",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:18"
																			},
																			"nativeSrc": "3074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:18"
																		},
																		"nativeSrc": "3071:49:18",
																		"nodeType": "YulIf",
																		"src": "3071:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:18"
																							},
																							"nativeSrc": "3189:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:18"
																					},
																					"nativeSrc": "3175:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:18"
																			},
																			"nativeSrc": "3133:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:18"
																		},
																		"nativeSrc": "3133:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:18"
																},
																"nativeSrc": "2780:11:18",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:18"
															},
															"nativeSrc": "2777:446:18",
															"nodeType": "YulIf",
															"src": "2777:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:18",
														"nodeType": "YulTypedName",
														"src": "2742:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:18",
														"nodeType": "YulTypedName",
														"src": "2749:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:18",
														"nodeType": "YulTypedName",
														"src": "2754:10:18",
														"type": ""
													}
												],
												"src": "2687:543:18"
											},
											{
												"body": {
													"nativeSrc": "3299:54:18",
													"nodeType": "YulBlock",
													"src": "3299:54:18",
													"statements": [
														{
															"nativeSrc": "3309:37:18",
															"nodeType": "YulAssignment",
															"src": "3309:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:18"
																},
																"nativeSrc": "3330:16:18",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:18",
														"nodeType": "YulTypedName",
														"src": "3274:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:18",
														"nodeType": "YulTypedName",
														"src": "3280:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:18",
														"nodeType": "YulTypedName",
														"src": "3290:8:18",
														"type": ""
													}
												],
												"src": "3236:117:18"
											},
											{
												"body": {
													"nativeSrc": "3410:118:18",
													"nodeType": "YulBlock",
													"src": "3410:118:18",
													"statements": [
														{
															"nativeSrc": "3420:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:18"
																				},
																				"nativeSrc": "3465:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:18"
																				},
																				"nativeSrc": "3480:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:18"
																		},
																		"nativeSrc": "3436:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:18"
																},
																"nativeSrc": "3432:56:18",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:18",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:18",
															"nodeType": "YulAssignment",
															"src": "3497:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:18"
																},
																"nativeSrc": "3507:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:18",
														"nodeType": "YulTypedName",
														"src": "3387:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:18",
														"nodeType": "YulTypedName",
														"src": "3393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:18",
														"nodeType": "YulTypedName",
														"src": "3403:6:18",
														"type": ""
													}
												],
												"src": "3359:169:18"
											},
											{
												"body": {
													"nativeSrc": "3614:214:18",
													"nodeType": "YulBlock",
													"src": "3614:214:18",
													"statements": [
														{
															"nativeSrc": "3747:37:18",
															"nodeType": "YulAssignment",
															"src": "3747:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:18"
																},
																"nativeSrc": "3755:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:18"
																}
															]
														},
														{
															"nativeSrc": "3793:29:18",
															"nodeType": "YulAssignment",
															"src": "3793:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:18"
																		},
																		"nativeSrc": "3810:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:18"
																},
																"nativeSrc": "3801:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:18",
														"nodeType": "YulTypedName",
														"src": "3595:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:18",
														"nodeType": "YulTypedName",
														"src": "3601:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:18",
														"nodeType": "YulTypedName",
														"src": "3609:4:18",
														"type": ""
													}
												],
												"src": "3533:295:18"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:18",
													"nodeType": "YulBlock",
													"src": "3925:1303:18",
													"statements": [
														{
															"nativeSrc": "3936:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:18"
																},
																"nativeSrc": "3950:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:18",
																"nodeType": "YulBlock",
																"src": "4072:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:18"
																			},
																			"nativeSrc": "4074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:18"
																		},
																		"nativeSrc": "4074:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:18"
																},
																"nativeSrc": "4041:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:18"
															},
															"nativeSrc": "4038:56:18",
															"nodeType": "YulIf",
															"src": "4038:56:18"
														},
														{
															"nativeSrc": "4104:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:18"
																		},
																		"nativeSrc": "4144:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:18"
																},
																"nativeSrc": "4118:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:18"
																},
																"nativeSrc": "4203:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:18"
															},
															"nativeSrc": "4203:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:18"
														},
														{
															"nativeSrc": "4280:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:18",
																"nodeType": "YulLiteral",
																"src": "4297:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:18",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:18",
															"nodeType": "YulAssignment",
															"src": "4308:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:18",
																"nodeType": "YulLiteral",
																"src": "4321:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:18",
																		"nodeType": "YulBlock",
																		"src": "4372:611:18",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:18",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:18"
																							},
																							"nativeSrc": "4413:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:18"
																					},
																					"nativeSrc": "4401:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:18",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:18"
																					},
																					"nativeSrc": "4451:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:18",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:18",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:18",
																					"nodeType": "YulBlock",
																					"src": "4569:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:18"
																												},
																												"nativeSrc": "4608:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:18"
																										},
																										"nativeSrc": "4602:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:18"
																								},
																								"nativeSrc": "4587:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:18"
																							},
																							"nativeSrc": "4587:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:18"
																						},
																						{
																							"nativeSrc": "4646:24:18",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:18",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:18"
																								},
																								"nativeSrc": "4656:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:18",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:18",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:18"
																								},
																								"nativeSrc": "4700:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:18"
																					},
																					"nativeSrc": "4532:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:18"
																				},
																				"nativeSrc": "4524:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:18",
																					"nodeType": "YulBlock",
																					"src": "4547:21:18",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:18",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:18",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:18"
																								},
																								"nativeSrc": "4554:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:18",
																					"nodeType": "YulBlock",
																					"src": "4528:3:18",
																					"statements": []
																				},
																				"src": "4524:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:18",
																					"nodeType": "YulBlock",
																					"src": "4768:156:18",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:18"
																										},
																										"nativeSrc": "4809:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:18"
																								},
																								"nativeSrc": "4803:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:18",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:18",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:18"
																												},
																												"nativeSrc": "4891:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:18"
																										},
																										"nativeSrc": "4861:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:18"
																								},
																								"nativeSrc": "4846:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:18"
																							},
																							"nativeSrc": "4846:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:18"
																					},
																					"nativeSrc": "4748:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:18"
																				},
																				"nativeSrc": "4745:179:18",
																				"nodeType": "YulIf",
																				"src": "4745:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:18",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:18"
																									},
																									"nativeSrc": "4954:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:18",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:18"
																							},
																							"nativeSrc": "4950:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:18"
																					},
																					"nativeSrc": "4937:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:18"
																				},
																				"nativeSrc": "4937:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:18"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:18",
																	"nodeType": "YulCase",
																	"src": "4365:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:18",
																		"nodeType": "YulBlock",
																		"src": "5000:222:18",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:18",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:18",
																					"nodeType": "YulBlock",
																					"src": "5051:67:18",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:18",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:18"
																										},
																										"nativeSrc": "5084:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:18"
																								},
																								"nativeSrc": "5078:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:18"
																				},
																				"nativeSrc": "5041:77:18",
																				"nodeType": "YulIf",
																				"src": "5041:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:18"
																							},
																							"nativeSrc": "5144:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:18"
																					},
																					"nativeSrc": "5131:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:18"
																				},
																				"nativeSrc": "5131:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:18"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:18",
																	"nodeType": "YulCase",
																	"src": "4992:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:18"
																},
																"nativeSrc": "4342:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:18"
															},
															"nativeSrc": "4335:887:18",
															"nodeType": "YulSwitch",
															"src": "4335:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:18",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:18",
														"nodeType": "YulTypedName",
														"src": "3920:3:18",
														"type": ""
													}
												],
												"src": "3833:1395:18"
											},
											{
												"body": {
													"nativeSrc": "5262:152:18",
													"nodeType": "YulBlock",
													"src": "5262:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:18",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:18"
																},
																"nativeSrc": "5272:88:18",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:18"
															},
															"nativeSrc": "5272:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:18"
																},
																"nativeSrc": "5369:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:18"
															},
															"nativeSrc": "5369:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:18"
																},
																"nativeSrc": "5393:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:18"
															},
															"nativeSrc": "5393:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:18"
											},
											{
												"body": {
													"nativeSrc": "5471:51:18",
													"nodeType": "YulBlock",
													"src": "5471:51:18",
													"statements": [
														{
															"nativeSrc": "5481:34:18",
															"nodeType": "YulAssignment",
															"src": "5481:34:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:18"
																},
																"nativeSrc": "5502:13:18",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:18",
														"nodeType": "YulTypedName",
														"src": "5452:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:18",
														"nodeType": "YulTypedName",
														"src": "5462:8:18",
														"type": ""
													}
												],
												"src": "5420:102:18"
											},
											{
												"body": {
													"nativeSrc": "5601:775:18",
													"nodeType": "YulBlock",
													"src": "5601:775:18",
													"statements": [
														{
															"nativeSrc": "5611:15:18",
															"nodeType": "YulAssignment",
															"src": "5611:15:18",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:18",
																"nodeType": "YulIdentifier",
																"src": "5620:6:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:18"
																}
															]
														},
														{
															"nativeSrc": "5635:14:18",
															"nodeType": "YulAssignment",
															"src": "5635:14:18",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:18",
																"nodeType": "YulIdentifier",
																"src": "5644:5:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:18",
																"nodeType": "YulBlock",
																"src": "5693:677:18",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:18",
																			"nodeType": "YulBlock",
																			"src": "5781:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:18"
																						},
																						"nativeSrc": "5783:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:18"
																					},
																					"nativeSrc": "5783:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:18"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:18"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:18"
																					},
																					"nativeSrc": "5765:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:18"
																			},
																			"nativeSrc": "5756:24:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:18"
																		},
																		"nativeSrc": "5753:50:18",
																		"nodeType": "YulIf",
																		"src": "5753:50:18"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:18",
																			"nodeType": "YulBlock",
																			"src": "5848:419:18",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:18",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:18"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:18"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:18"
																						},
																						"nativeSrc": "6237:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:18"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:18"
																			},
																			"nativeSrc": "5819:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:18"
																		},
																		"nativeSrc": "5816:451:18",
																		"nodeType": "YulIf",
																		"src": "5816:451:18"
																	},
																	{
																		"nativeSrc": "6280:23:18",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:18"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:18"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:18"
																			},
																			"nativeSrc": "6288:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:18"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:18",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:18"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:18",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:18"
																			},
																			"nativeSrc": "6328:32:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:18"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:18"
																},
																"nativeSrc": "5666:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:18"
															},
															"nativeSrc": "5658:712:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:18",
																"nodeType": "YulBlock",
																"src": "5682:2:18",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:18",
																"nodeType": "YulBlock",
																"src": "5662:3:18",
																"statements": []
															},
															"src": "5658:712:18"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:18",
														"nodeType": "YulTypedName",
														"src": "5556:6:18",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:18",
														"nodeType": "YulTypedName",
														"src": "5564:5:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:18",
														"nodeType": "YulTypedName",
														"src": "5571:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:18",
														"nodeType": "YulTypedName",
														"src": "5581:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:18",
														"nodeType": "YulTypedName",
														"src": "5589:5:18",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:18",
														"nodeType": "YulTypedName",
														"src": "5596:4:18",
														"type": ""
													}
												],
												"src": "5528:848:18"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:18",
													"nodeType": "YulBlock",
													"src": "6442:1013:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:18",
																"nodeType": "YulBlock",
																"src": "6637:20:18",
																"statements": [
																	{
																		"nativeSrc": "6639:10:18",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:18",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:18",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:18",
																		"nodeType": "YulLeave",
																		"src": "6650:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:18"
																},
																"nativeSrc": "6620:16:18",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:18"
															},
															"nativeSrc": "6617:40:18",
															"nodeType": "YulIf",
															"src": "6617:40:18"
														},
														{
															"body": {
																"nativeSrc": "6682:20:18",
																"nodeType": "YulBlock",
																"src": "6682:20:18",
																"statements": [
																	{
																		"nativeSrc": "6684:10:18",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:18",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:18",
																		"nodeType": "YulLeave",
																		"src": "6695:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:18"
																},
																"nativeSrc": "6669:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:18"
															},
															"nativeSrc": "6666:36:18",
															"nodeType": "YulIf",
															"src": "6666:36:18"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:18",
																		"nodeType": "YulBlock",
																		"src": "6812:20:18",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:18",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:18",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:18"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:18",
																				"nodeType": "YulLeave",
																				"src": "6825:5:18"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:18",
																	"nodeType": "YulCase",
																	"src": "6805:27:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:18",
																		"nodeType": "YulBlock",
																		"src": "6856:176:18",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:18",
																					"nodeType": "YulBlock",
																					"src": "6891:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:18"
																								},
																								"nativeSrc": "6893:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:18"
																							},
																							"nativeSrc": "6893:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:18",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:18",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:18"
																					},
																					"nativeSrc": "6873:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:18"
																				},
																				"nativeSrc": "6870:43:18",
																				"nodeType": "YulIf",
																				"src": "6870:43:18"
																			},
																			{
																				"nativeSrc": "6926:25:18",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:18",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:18",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:18",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:18"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:18"
																					},
																					"nativeSrc": "6935:16:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:18"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:18",
																					"nodeType": "YulBlock",
																					"src": "6982:22:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:18",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:18"
																								},
																								"nativeSrc": "6984:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:18"
																							},
																							"nativeSrc": "6984:18:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:18"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:18"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:18"
																					},
																					"nativeSrc": "6967:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:18"
																				},
																				"nativeSrc": "6964:40:18",
																				"nodeType": "YulIf",
																				"src": "6964:40:18"
																			},
																			{
																				"nativeSrc": "7017:5:18",
																				"nodeType": "YulLeave",
																				"src": "7017:5:18"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:18",
																	"nodeType": "YulCase",
																	"src": "6841:191:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:18",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:18",
																"nodeType": "YulIdentifier",
																"src": "6762:4:18"
															},
															"nativeSrc": "6755:277:18",
															"nodeType": "YulSwitch",
															"src": "6755:277:18"
														},
														{
															"body": {
																"nativeSrc": "7164:123:18",
																"nodeType": "YulBlock",
																"src": "7164:123:18",
																"statements": [
																	{
																		"nativeSrc": "7178:28:18",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:18"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:18"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:18"
																			},
																			"nativeSrc": "7187:19:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:18"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:18"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:18",
																			"nodeType": "YulBlock",
																			"src": "7237:22:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:18",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:18"
																						},
																						"nativeSrc": "7239:18:18",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:18"
																					},
																					"nativeSrc": "7239:18:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:18"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:18"
																			},
																			"nativeSrc": "7222:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:18"
																		},
																		"nativeSrc": "7219:40:18",
																		"nodeType": "YulIf",
																		"src": "7219:40:18"
																	},
																	{
																		"nativeSrc": "7272:5:18",
																		"nodeType": "YulLeave",
																		"src": "7272:5:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:18",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:18",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:18"
																				},
																				"nativeSrc": "7064:12:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:18",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:18",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:18"
																				},
																				"nativeSrc": "7078:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:18"
																		},
																		"nativeSrc": "7060:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:18",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:18",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:18"
																				},
																				"nativeSrc": "7113:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:18",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:18"
																				},
																				"nativeSrc": "7128:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:18"
																		},
																		"nativeSrc": "7109:36:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:18"
																},
																"nativeSrc": "7044:111:18",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:18"
															},
															"nativeSrc": "7041:246:18",
															"nodeType": "YulIf",
															"src": "7041:246:18"
														},
														{
															"nativeSrc": "7297:57:18",
															"nodeType": "YulAssignment",
															"src": "7297:57:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:18"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:18"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:18"
																},
																"nativeSrc": "7312:42:18",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:18"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:18",
																"nodeType": "YulBlock",
																"src": "7393:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:18"
																			},
																			"nativeSrc": "7395:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:18"
																		},
																		"nativeSrc": "7395:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:18"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:18"
																		},
																		"nativeSrc": "7377:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:18"
																},
																"nativeSrc": "7367:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:18"
															},
															"nativeSrc": "7364:51:18",
															"nodeType": "YulIf",
															"src": "7364:51:18"
														},
														{
															"nativeSrc": "7424:25:18",
															"nodeType": "YulAssignment",
															"src": "7424:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:18"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:18"
																},
																"nativeSrc": "7433:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:18",
														"nodeType": "YulTypedName",
														"src": "6412:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:18",
														"nodeType": "YulTypedName",
														"src": "6418:8:18",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:18",
														"nodeType": "YulTypedName",
														"src": "6428:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:18",
														"nodeType": "YulTypedName",
														"src": "6436:5:18",
														"type": ""
													}
												],
												"src": "6382:1073:18"
											},
											{
												"body": {
													"nativeSrc": "7504:43:18",
													"nodeType": "YulBlock",
													"src": "7504:43:18",
													"statements": [
														{
															"nativeSrc": "7514:27:18",
															"nodeType": "YulAssignment",
															"src": "7514:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7529:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7529:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7536:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7525:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7525:3:18"
																},
																"nativeSrc": "7525:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7525:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7514:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "7514:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7461:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7486:5:18",
														"nodeType": "YulTypedName",
														"src": "7486:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7496:7:18",
														"nodeType": "YulTypedName",
														"src": "7496:7:18",
														"type": ""
													}
												],
												"src": "7461:86:18"
											},
											{
												"body": {
													"nativeSrc": "7617:217:18",
													"nodeType": "YulBlock",
													"src": "7617:217:18",
													"statements": [
														{
															"nativeSrc": "7627:31:18",
															"nodeType": "YulAssignment",
															"src": "7627:31:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7653:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7653:4:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7635:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "7635:17:18"
																},
																"nativeSrc": "7635:23:18",
																"nodeType": "YulFunctionCall",
																"src": "7635:23:18"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7627:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:18"
																}
															]
														},
														{
															"nativeSrc": "7667:37:18",
															"nodeType": "YulAssignment",
															"src": "7667:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7695:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "7695:8:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "7679:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "7679:15:18"
																},
																"nativeSrc": "7679:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7679:25:18"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:18"
																}
															]
														},
														{
															"nativeSrc": "7714:113:18",
															"nodeType": "YulAssignment",
															"src": "7714:113:18",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7744:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7744:4:18"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7750:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "7750:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7760:66:18",
																		"nodeType": "YulLiteral",
																		"src": "7760:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7723:20:18",
																	"nodeType": "YulIdentifier",
																	"src": "7723:20:18"
																},
																"nativeSrc": "7723:104:18",
																"nodeType": "YulFunctionCall",
																"src": "7723:104:18"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7714:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7714:5:18"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7553:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7592:4:18",
														"nodeType": "YulTypedName",
														"src": "7592:4:18",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7598:8:18",
														"nodeType": "YulTypedName",
														"src": "7598:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7611:5:18",
														"nodeType": "YulTypedName",
														"src": "7611:5:18",
														"type": ""
													}
												],
												"src": "7553:281:18"
											},
											{
												"body": {
													"nativeSrc": "7888:362:18",
													"nodeType": "YulBlock",
													"src": "7888:362:18",
													"statements": [
														{
															"nativeSrc": "7898:25:18",
															"nodeType": "YulAssignment",
															"src": "7898:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7921:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:18"
																},
																"nativeSrc": "7903:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7898:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:18"
																}
															]
														},
														{
															"nativeSrc": "7932:25:18",
															"nodeType": "YulAssignment",
															"src": "7932:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7955:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7955:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7937:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "7937:17:18"
																},
																"nativeSrc": "7937:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7937:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7932:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "7932:1:18"
																}
															]
														},
														{
															"nativeSrc": "7966:28:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7966:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:18"
																},
																"nativeSrc": "7985:9:18",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:18"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7970:11:18",
																	"nodeType": "YulTypedName",
																	"src": "7970:11:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8003:41:18",
															"nodeType": "YulAssignment",
															"src": "8003:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8032:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "8032:11:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8014:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "8014:17:18"
																},
																"nativeSrc": "8014:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8014:30:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8003:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8003:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8221:22:18",
																"nodeType": "YulBlock",
																"src": "8221:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8223:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "8223:16:18"
																			},
																			"nativeSrc": "8223:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8223:18:18"
																		},
																		"nativeSrc": "8223:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8223:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8154:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "8154:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8147:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "8147:6:18"
																				},
																				"nativeSrc": "8147:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8147:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8177:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "8177:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8184:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "8184:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8193:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "8193:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8180:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8180:3:18"
																						},
																						"nativeSrc": "8180:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8180:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8174:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "8174:2:18"
																				},
																				"nativeSrc": "8174:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8174:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8127:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8127:2:18"
																		},
																		"nativeSrc": "8127:83:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8127:83:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8107:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:18"
																},
																"nativeSrc": "8107:113:18",
																"nodeType": "YulFunctionCall",
																"src": "8107:113:18"
															},
															"nativeSrc": "8104:139:18",
															"nodeType": "YulIf",
															"src": "8104:139:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7840:410:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7871:1:18",
														"nodeType": "YulTypedName",
														"src": "7871:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7874:1:18",
														"nodeType": "YulTypedName",
														"src": "7874:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7880:7:18",
														"nodeType": "YulTypedName",
														"src": "7880:7:18",
														"type": ""
													}
												],
												"src": "7840:410:18"
											},
											{
												"body": {
													"nativeSrc": "8301:32:18",
													"nodeType": "YulBlock",
													"src": "8301:32:18",
													"statements": [
														{
															"nativeSrc": "8311:16:18",
															"nodeType": "YulAssignment",
															"src": "8311:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "8322:5:18",
																"nodeType": "YulIdentifier",
																"src": "8322:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8311:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8311:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8256:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8283:5:18",
														"nodeType": "YulTypedName",
														"src": "8283:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8293:7:18",
														"nodeType": "YulTypedName",
														"src": "8293:7:18",
														"type": ""
													}
												],
												"src": "8256:77:18"
											},
											{
												"body": {
													"nativeSrc": "8404:53:18",
													"nodeType": "YulBlock",
													"src": "8404:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8421:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8421:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8444:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8444:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8426:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8426:17:18"
																		},
																		"nativeSrc": "8426:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8426:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8414:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:18"
																},
																"nativeSrc": "8414:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8414:37:18"
															},
															"nativeSrc": "8414:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "8414:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8339:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8392:5:18",
														"nodeType": "YulTypedName",
														"src": "8392:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8399:3:18",
														"nodeType": "YulTypedName",
														"src": "8399:3:18",
														"type": ""
													}
												],
												"src": "8339:118:18"
											},
											{
												"body": {
													"nativeSrc": "8528:53:18",
													"nodeType": "YulBlock",
													"src": "8528:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8545:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8568:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8568:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8550:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8550:17:18"
																		},
																		"nativeSrc": "8550:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8550:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8538:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8538:6:18"
																},
																"nativeSrc": "8538:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8538:37:18"
															},
															"nativeSrc": "8538:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "8538:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8463:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8516:5:18",
														"nodeType": "YulTypedName",
														"src": "8516:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8523:3:18",
														"nodeType": "YulTypedName",
														"src": "8523:3:18",
														"type": ""
													}
												],
												"src": "8463:118:18"
											},
											{
												"body": {
													"nativeSrc": "8632:81:18",
													"nodeType": "YulBlock",
													"src": "8632:81:18",
													"statements": [
														{
															"nativeSrc": "8642:65:18",
															"nodeType": "YulAssignment",
															"src": "8642:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8657:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8657:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:42:18",
																		"nodeType": "YulLiteral",
																		"src": "8664:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8653:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8653:3:18"
																},
																"nativeSrc": "8653:54:18",
																"nodeType": "YulFunctionCall",
																"src": "8653:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8642:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8642:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8587:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8614:5:18",
														"nodeType": "YulTypedName",
														"src": "8614:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8624:7:18",
														"nodeType": "YulTypedName",
														"src": "8624:7:18",
														"type": ""
													}
												],
												"src": "8587:126:18"
											},
											{
												"body": {
													"nativeSrc": "8764:51:18",
													"nodeType": "YulBlock",
													"src": "8764:51:18",
													"statements": [
														{
															"nativeSrc": "8774:35:18",
															"nodeType": "YulAssignment",
															"src": "8774:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8803:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8803:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8785:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "8785:17:18"
																},
																"nativeSrc": "8785:24:18",
																"nodeType": "YulFunctionCall",
																"src": "8785:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8774:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8774:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8719:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8746:5:18",
														"nodeType": "YulTypedName",
														"src": "8746:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8756:7:18",
														"nodeType": "YulTypedName",
														"src": "8756:7:18",
														"type": ""
													}
												],
												"src": "8719:96:18"
											},
											{
												"body": {
													"nativeSrc": "8886:53:18",
													"nodeType": "YulBlock",
													"src": "8886:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8903:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8903:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8926:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8926:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8908:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8908:17:18"
																		},
																		"nativeSrc": "8908:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8908:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8896:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8896:6:18"
																},
																"nativeSrc": "8896:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8896:37:18"
															},
															"nativeSrc": "8896:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "8896:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8821:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8874:5:18",
														"nodeType": "YulTypedName",
														"src": "8874:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8881:3:18",
														"nodeType": "YulTypedName",
														"src": "8881:3:18",
														"type": ""
													}
												],
												"src": "8821:118:18"
											},
											{
												"body": {
													"nativeSrc": "9155:454:18",
													"nodeType": "YulBlock",
													"src": "9155:454:18",
													"statements": [
														{
															"nativeSrc": "9165:27:18",
															"nodeType": "YulAssignment",
															"src": "9165:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9177:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9177:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9188:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9173:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:18"
																},
																"nativeSrc": "9173:19:18",
																"nodeType": "YulFunctionCall",
																"src": "9173:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9165:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9246:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9259:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9270:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9255:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:18"
																		},
																		"nativeSrc": "9255:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9202:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:18"
																},
																"nativeSrc": "9202:71:18",
																"nodeType": "YulFunctionCall",
																"src": "9202:71:18"
															},
															"nativeSrc": "9202:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9327:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9327:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9340:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9340:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9351:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9351:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9336:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:18"
																		},
																		"nativeSrc": "9336:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9283:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9283:43:18"
																},
																"nativeSrc": "9283:72:18",
																"nodeType": "YulFunctionCall",
																"src": "9283:72:18"
															},
															"nativeSrc": "9283:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "9283:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9409:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9409:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9422:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9433:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9433:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9418:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:18"
																		},
																		"nativeSrc": "9418:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9418:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9365:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9365:43:18"
																},
																"nativeSrc": "9365:72:18",
																"nodeType": "YulFunctionCall",
																"src": "9365:72:18"
															},
															"nativeSrc": "9365:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "9365:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9491:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9491:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9504:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9504:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9515:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9515:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9500:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9500:3:18"
																		},
																		"nativeSrc": "9500:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9500:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9447:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9447:43:18"
																},
																"nativeSrc": "9447:72:18",
																"nodeType": "YulFunctionCall",
																"src": "9447:72:18"
															},
															"nativeSrc": "9447:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "9447:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9573:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9573:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9586:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9586:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9597:3:18",
																				"nodeType": "YulLiteral",
																				"src": "9597:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9582:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9582:3:18"
																		},
																		"nativeSrc": "9582:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9582:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9529:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9529:43:18"
																},
																"nativeSrc": "9529:73:18",
																"nodeType": "YulFunctionCall",
																"src": "9529:73:18"
															},
															"nativeSrc": "9529:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "9529:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8945:664:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9095:9:18",
														"nodeType": "YulTypedName",
														"src": "9095:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9107:6:18",
														"nodeType": "YulTypedName",
														"src": "9107:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9115:6:18",
														"nodeType": "YulTypedName",
														"src": "9115:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9123:6:18",
														"nodeType": "YulTypedName",
														"src": "9123:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9131:6:18",
														"nodeType": "YulTypedName",
														"src": "9131:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9139:6:18",
														"nodeType": "YulTypedName",
														"src": "9139:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9150:4:18",
														"nodeType": "YulTypedName",
														"src": "9150:4:18",
														"type": ""
													}
												],
												"src": "8945:664:18"
											},
											{
												"body": {
													"nativeSrc": "9713:124:18",
													"nodeType": "YulBlock",
													"src": "9713:124:18",
													"statements": [
														{
															"nativeSrc": "9723:26:18",
															"nodeType": "YulAssignment",
															"src": "9723:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9735:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9735:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9746:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9746:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9731:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9731:3:18"
																},
																"nativeSrc": "9731:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9731:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9723:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9723:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9803:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9803:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9816:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9816:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9827:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9827:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9812:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:18"
																		},
																		"nativeSrc": "9812:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9812:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9759:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9759:43:18"
																},
																"nativeSrc": "9759:71:18",
																"nodeType": "YulFunctionCall",
																"src": "9759:71:18"
															},
															"nativeSrc": "9759:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "9759:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9615:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9685:9:18",
														"nodeType": "YulTypedName",
														"src": "9685:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9697:6:18",
														"nodeType": "YulTypedName",
														"src": "9697:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9708:4:18",
														"nodeType": "YulTypedName",
														"src": "9708:4:18",
														"type": ""
													}
												],
												"src": "9615:222:18"
											},
											{
												"body": {
													"nativeSrc": "9939:73:18",
													"nodeType": "YulBlock",
													"src": "9939:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9956:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9956:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9961:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9949:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9949:6:18"
																},
																"nativeSrc": "9949:19:18",
																"nodeType": "YulFunctionCall",
																"src": "9949:19:18"
															},
															"nativeSrc": "9949:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "9949:19:18"
														},
														{
															"nativeSrc": "9977:29:18",
															"nodeType": "YulAssignment",
															"src": "9977:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9996:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9996:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10001:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10001:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9992:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:18"
																},
																"nativeSrc": "9992:14:18",
																"nodeType": "YulFunctionCall",
																"src": "9992:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9977:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "9977:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9843:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9911:3:18",
														"nodeType": "YulTypedName",
														"src": "9911:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9916:6:18",
														"nodeType": "YulTypedName",
														"src": "9916:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9927:11:18",
														"nodeType": "YulTypedName",
														"src": "9927:11:18",
														"type": ""
													}
												],
												"src": "9843:169:18"
											},
											{
												"body": {
													"nativeSrc": "10080:184:18",
													"nodeType": "YulBlock",
													"src": "10080:184:18",
													"statements": [
														{
															"nativeSrc": "10090:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10090:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "10099:1:18",
																"nodeType": "YulLiteral",
																"src": "10099:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10094:1:18",
																	"nodeType": "YulTypedName",
																	"src": "10094:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10159:63:18",
																"nodeType": "YulBlock",
																"src": "10159:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "10184:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10184:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "10189:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "10189:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10180:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "10180:3:18"
																					},
																					"nativeSrc": "10180:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10180:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "10203:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "10203:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "10208:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "10208:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10199:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "10199:3:18"
																							},
																							"nativeSrc": "10199:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "10199:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10193:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "10193:5:18"
																					},
																					"nativeSrc": "10193:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10193:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10173:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10173:6:18"
																			},
																			"nativeSrc": "10173:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10173:39:18"
																		},
																		"nativeSrc": "10173:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10173:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10120:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "10120:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10123:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10123:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10117:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10117:2:18"
																},
																"nativeSrc": "10117:13:18",
																"nodeType": "YulFunctionCall",
																"src": "10117:13:18"
															},
															"nativeSrc": "10109:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10131:19:18",
																"nodeType": "YulBlock",
																"src": "10131:19:18",
																"statements": [
																	{
																		"nativeSrc": "10133:15:18",
																		"nodeType": "YulAssignment",
																		"src": "10133:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10142:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "10142:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10145:2:18",
																					"nodeType": "YulLiteral",
																					"src": "10145:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10138:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10138:3:18"
																			},
																			"nativeSrc": "10138:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10138:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10133:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "10133:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10113:3:18",
																"nodeType": "YulBlock",
																"src": "10113:3:18",
																"statements": []
															},
															"src": "10109:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10242:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10242:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10247:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10247:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10238:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10238:3:18"
																		},
																		"nativeSrc": "10238:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10238:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10256:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10256:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:18"
																},
																"nativeSrc": "10231:27:18",
																"nodeType": "YulFunctionCall",
																"src": "10231:27:18"
															},
															"nativeSrc": "10231:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "10231:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10018:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10062:3:18",
														"nodeType": "YulTypedName",
														"src": "10062:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10067:3:18",
														"nodeType": "YulTypedName",
														"src": "10067:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10072:6:18",
														"nodeType": "YulTypedName",
														"src": "10072:6:18",
														"type": ""
													}
												],
												"src": "10018:246:18"
											},
											{
												"body": {
													"nativeSrc": "10318:54:18",
													"nodeType": "YulBlock",
													"src": "10318:54:18",
													"statements": [
														{
															"nativeSrc": "10328:38:18",
															"nodeType": "YulAssignment",
															"src": "10328:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10346:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "10346:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10353:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10353:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10342:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10342:3:18"
																		},
																		"nativeSrc": "10342:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10342:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10362:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10362:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10358:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10358:3:18"
																		},
																		"nativeSrc": "10358:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10358:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10338:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10338:3:18"
																},
																"nativeSrc": "10338:28:18",
																"nodeType": "YulFunctionCall",
																"src": "10338:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10328:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10328:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10270:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10301:5:18",
														"nodeType": "YulTypedName",
														"src": "10301:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10311:6:18",
														"nodeType": "YulTypedName",
														"src": "10311:6:18",
														"type": ""
													}
												],
												"src": "10270:102:18"
											},
											{
												"body": {
													"nativeSrc": "10470:285:18",
													"nodeType": "YulBlock",
													"src": "10470:285:18",
													"statements": [
														{
															"nativeSrc": "10480:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10480:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10527:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10527:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10494:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "10494:32:18"
																},
																"nativeSrc": "10494:39:18",
																"nodeType": "YulFunctionCall",
																"src": "10494:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10484:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10484:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10542:78:18",
															"nodeType": "YulAssignment",
															"src": "10542:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10608:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10608:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10613:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10613:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10549:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "10549:58:18"
																},
																"nativeSrc": "10549:71:18",
																"nodeType": "YulFunctionCall",
																"src": "10549:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10542:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10542:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10668:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "10668:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10675:4:18",
																				"nodeType": "YulLiteral",
																				"src": "10675:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10664:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10664:3:18"
																		},
																		"nativeSrc": "10664:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10664:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10682:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10682:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10687:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10629:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "10629:34:18"
																},
																"nativeSrc": "10629:65:18",
																"nodeType": "YulFunctionCall",
																"src": "10629:65:18"
															},
															"nativeSrc": "10629:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "10629:65:18"
														},
														{
															"nativeSrc": "10703:46:18",
															"nodeType": "YulAssignment",
															"src": "10703:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10714:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10714:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10741:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10741:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10719:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "10719:21:18"
																		},
																		"nativeSrc": "10719:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10719:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10710:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:18"
																},
																"nativeSrc": "10710:39:18",
																"nodeType": "YulFunctionCall",
																"src": "10710:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10703:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10378:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10451:5:18",
														"nodeType": "YulTypedName",
														"src": "10451:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10458:3:18",
														"nodeType": "YulTypedName",
														"src": "10458:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10466:3:18",
														"nodeType": "YulTypedName",
														"src": "10466:3:18",
														"type": ""
													}
												],
												"src": "10378:377:18"
											},
											{
												"body": {
													"nativeSrc": "10879:195:18",
													"nodeType": "YulBlock",
													"src": "10879:195:18",
													"statements": [
														{
															"nativeSrc": "10889:26:18",
															"nodeType": "YulAssignment",
															"src": "10889:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10901:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10901:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10912:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10912:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10897:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10897:3:18"
																},
																"nativeSrc": "10897:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10897:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10889:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10889:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10936:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10947:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10947:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10932:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10932:3:18"
																		},
																		"nativeSrc": "10932:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10932:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10955:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "10955:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10961:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10961:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10951:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10951:3:18"
																		},
																		"nativeSrc": "10951:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10951:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10925:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10925:6:18"
																},
																"nativeSrc": "10925:47:18",
																"nodeType": "YulFunctionCall",
																"src": "10925:47:18"
															},
															"nativeSrc": "10925:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "10925:47:18"
														},
														{
															"nativeSrc": "10981:86:18",
															"nodeType": "YulAssignment",
															"src": "10981:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11053:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11062:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11062:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10989:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "10989:63:18"
																},
																"nativeSrc": "10989:78:18",
																"nodeType": "YulFunctionCall",
																"src": "10989:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10981:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10981:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10761:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10851:9:18",
														"nodeType": "YulTypedName",
														"src": "10851:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10863:6:18",
														"nodeType": "YulTypedName",
														"src": "10863:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10874:4:18",
														"nodeType": "YulTypedName",
														"src": "10874:4:18",
														"type": ""
													}
												],
												"src": "10761:313:18"
											},
											{
												"body": {
													"nativeSrc": "11138:40:18",
													"nodeType": "YulBlock",
													"src": "11138:40:18",
													"statements": [
														{
															"nativeSrc": "11149:22:18",
															"nodeType": "YulAssignment",
															"src": "11149:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11165:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11165:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11159:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11159:5:18"
																},
																"nativeSrc": "11159:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11159:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11080:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11121:5:18",
														"nodeType": "YulTypedName",
														"src": "11121:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11131:6:18",
														"nodeType": "YulTypedName",
														"src": "11131:6:18",
														"type": ""
													}
												],
												"src": "11080:98:18"
											},
											{
												"body": {
													"nativeSrc": "11240:60:18",
													"nodeType": "YulBlock",
													"src": "11240:60:18",
													"statements": [
														{
															"nativeSrc": "11250:11:18",
															"nodeType": "YulAssignment",
															"src": "11250:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "11258:3:18",
																"nodeType": "YulIdentifier",
																"src": "11258:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11250:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11250:4:18"
																}
															]
														},
														{
															"nativeSrc": "11271:22:18",
															"nodeType": "YulAssignment",
															"src": "11271:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11283:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11283:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11288:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11279:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11279:3:18"
																},
																"nativeSrc": "11279:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11279:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11271:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11271:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "11184:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11227:3:18",
														"nodeType": "YulTypedName",
														"src": "11227:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11235:4:18",
														"nodeType": "YulTypedName",
														"src": "11235:4:18",
														"type": ""
													}
												],
												"src": "11184:116:18"
											},
											{
												"body": {
													"nativeSrc": "11361:99:18",
													"nodeType": "YulBlock",
													"src": "11361:99:18",
													"statements": [
														{
															"nativeSrc": "11372:42:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11372:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "11409:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11409:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11403:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "11403:5:18"
																		},
																		"nativeSrc": "11403:10:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11403:10:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "11385:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "11385:17:18"
																},
																"nativeSrc": "11385:29:18",
																"nodeType": "YulFunctionCall",
																"src": "11385:29:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11376:5:18",
																	"nodeType": "YulTypedName",
																	"src": "11376:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11424:29:18",
															"nodeType": "YulAssignment",
															"src": "11424:29:18",
															"value": {
																"name": "value",
																"nativeSrc": "11448:5:18",
																"nodeType": "YulIdentifier",
																"src": "11448:5:18"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "11424:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "11424:11:18"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "11306:154:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11341:3:18",
														"nodeType": "YulTypedName",
														"src": "11341:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "11349:11:18",
														"nodeType": "YulTypedName",
														"src": "11349:11:18",
														"type": ""
													}
												],
												"src": "11306:154:18"
											},
											{
												"body": {
													"nativeSrc": "11556:504:18",
													"nodeType": "YulBlock",
													"src": "11556:504:18",
													"statements": [
														{
															"nativeSrc": "11567:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11567:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11613:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11613:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11581:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "11581:31:18"
																},
																"nativeSrc": "11581:38:18",
																"nodeType": "YulFunctionCall",
																"src": "11581:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11571:6:18",
																	"nodeType": "YulTypedName",
																	"src": "11571:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11628:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11628:21:18",
															"value": {
																"name": "array",
																"nativeSrc": "11644:5:18",
																"nodeType": "YulIdentifier",
																"src": "11644:5:18"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11632:8:18",
																	"nodeType": "YulTypedName",
																	"src": "11632:8:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11659:52:18",
															"nodeType": "YulAssignment",
															"src": "11659:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11705:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11705:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "11671:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "11671:33:18"
																},
																"nativeSrc": "11671:40:18",
																"nodeType": "YulFunctionCall",
																"src": "11671:40:18"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11659:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "11659:8:18"
																}
															]
														},
														{
															"nativeSrc": "11721:44:18",
															"nodeType": "YulAssignment",
															"src": "11721:44:18",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "11756:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "11756:8:18"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "11730:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "11730:25:18"
																},
																"nativeSrc": "11730:35:18",
																"nodeType": "YulFunctionCall",
																"src": "11730:35:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11721:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11721:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11793:260:18",
																"nodeType": "YulBlock",
																"src": "11793:260:18",
																"statements": [
																	{
																		"nativeSrc": "11807:236:18",
																		"nodeType": "YulAssignment",
																		"src": "11807:236:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11837:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "11837:5:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11904:1:18",
																									"nodeType": "YulLiteral",
																									"src": "11904:1:18",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11911:2:18",
																											"nodeType": "YulLiteral",
																											"src": "11911:2:18",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11915:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "11915:6:18"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11907:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "11907:3:18"
																									},
																									"nativeSrc": "11907:15:18",
																									"nodeType": "YulFunctionCall",
																									"src": "11907:15:18"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11900:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "11900:3:18"
																							},
																							"nativeSrc": "11900:23:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11900:23:18"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11945:66:18",
																							"nodeType": "YulLiteral",
																							"src": "11945:66:18",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11860:18:18",
																						"nodeType": "YulIdentifier",
																						"src": "11860:18:18"
																					},
																					"nativeSrc": "11860:169:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11860:169:18"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11816:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11816:3:18"
																			},
																			"nativeSrc": "11816:227:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11816:227:18"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11807:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11807:5:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11781:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11781:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11789:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11789:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11778:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11778:2:18"
																},
																"nativeSrc": "11778:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11778:14:18"
															},
															"nativeSrc": "11775:278:18",
															"nodeType": "YulIf",
															"src": "11775:278:18"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "11466:594:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11540:5:18",
														"nodeType": "YulTypedName",
														"src": "11540:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11550:5:18",
														"nodeType": "YulTypedName",
														"src": "11550:5:18",
														"type": ""
													}
												],
												"src": "11466:594:18"
											},
											{
												"body": {
													"nativeSrc": "12110:147:18",
													"nodeType": "YulBlock",
													"src": "12110:147:18",
													"statements": [
														{
															"nativeSrc": "12120:25:18",
															"nodeType": "YulAssignment",
															"src": "12120:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12143:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12143:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12125:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "12125:17:18"
																},
																"nativeSrc": "12125:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12125:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12120:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "12120:1:18"
																}
															]
														},
														{
															"nativeSrc": "12154:25:18",
															"nodeType": "YulAssignment",
															"src": "12154:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12177:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12177:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12159:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "12159:17:18"
																},
																"nativeSrc": "12159:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12159:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12154:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "12154:1:18"
																}
															]
														},
														{
															"nativeSrc": "12188:16:18",
															"nodeType": "YulAssignment",
															"src": "12188:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12199:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12199:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12202:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12202:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12195:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12195:3:18"
																},
																"nativeSrc": "12195:9:18",
																"nodeType": "YulFunctionCall",
																"src": "12195:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12188:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12188:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12228:22:18",
																"nodeType": "YulBlock",
																"src": "12228:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12230:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12230:16:18"
																			},
																			"nativeSrc": "12230:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12230:18:18"
																		},
																		"nativeSrc": "12230:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12230:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12220:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12220:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12223:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12223:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12217:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12217:2:18"
																},
																"nativeSrc": "12217:10:18",
																"nodeType": "YulFunctionCall",
																"src": "12217:10:18"
															},
															"nativeSrc": "12214:36:18",
															"nodeType": "YulIf",
															"src": "12214:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12066:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12097:1:18",
														"nodeType": "YulTypedName",
														"src": "12097:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12100:1:18",
														"nodeType": "YulTypedName",
														"src": "12100:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12106:3:18",
														"nodeType": "YulTypedName",
														"src": "12106:3:18",
														"type": ""
													}
												],
												"src": "12066:191:18"
											},
											{
												"body": {
													"nativeSrc": "12417:288:18",
													"nodeType": "YulBlock",
													"src": "12417:288:18",
													"statements": [
														{
															"nativeSrc": "12427:26:18",
															"nodeType": "YulAssignment",
															"src": "12427:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12439:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12439:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12450:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12450:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12435:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12435:3:18"
																},
																"nativeSrc": "12435:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12435:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12427:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12427:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12507:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12507:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12520:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12520:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12531:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12531:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12516:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12516:3:18"
																		},
																		"nativeSrc": "12516:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12516:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12463:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12463:43:18"
																},
																"nativeSrc": "12463:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12463:71:18"
															},
															"nativeSrc": "12463:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12463:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12588:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12588:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12601:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12601:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12612:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12612:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12597:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12597:3:18"
																		},
																		"nativeSrc": "12597:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12597:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12544:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12544:43:18"
																},
																"nativeSrc": "12544:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12544:72:18"
															},
															"nativeSrc": "12544:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12544:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12670:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12670:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12683:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12683:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12694:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12694:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12679:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:18"
																		},
																		"nativeSrc": "12679:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12679:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12626:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12626:43:18"
																},
																"nativeSrc": "12626:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12626:72:18"
															},
															"nativeSrc": "12626:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12626:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12263:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12373:9:18",
														"nodeType": "YulTypedName",
														"src": "12373:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12385:6:18",
														"nodeType": "YulTypedName",
														"src": "12385:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12393:6:18",
														"nodeType": "YulTypedName",
														"src": "12393:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12401:6:18",
														"nodeType": "YulTypedName",
														"src": "12401:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12412:4:18",
														"nodeType": "YulTypedName",
														"src": "12412:4:18",
														"type": ""
													}
												],
												"src": "12263:442:18"
											},
											{
												"body": {
													"nativeSrc": "12809:124:18",
													"nodeType": "YulBlock",
													"src": "12809:124:18",
													"statements": [
														{
															"nativeSrc": "12819:26:18",
															"nodeType": "YulAssignment",
															"src": "12819:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12831:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12831:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12842:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12842:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12827:3:18"
																},
																"nativeSrc": "12827:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12827:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12819:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12819:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12899:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12899:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12912:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12923:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12923:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12908:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:18"
																		},
																		"nativeSrc": "12908:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12908:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12855:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12855:43:18"
																},
																"nativeSrc": "12855:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12855:71:18"
															},
															"nativeSrc": "12855:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12855:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12711:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12781:9:18",
														"nodeType": "YulTypedName",
														"src": "12781:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12793:6:18",
														"nodeType": "YulTypedName",
														"src": "12793:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12804:4:18",
														"nodeType": "YulTypedName",
														"src": "12804:4:18",
														"type": ""
													}
												],
												"src": "12711:222:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b506040518060400160405280600e81526020017f4b6e6f774c65646765546f6b656e000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600e81526020017f4b6e6f774c65646765546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f4b544b00000000000000000000000000000000000000000000000000000000008152508160039081620000fc919062000844565b5080600490816200010e919062000844565b505050620001276005836200020660201b90919060201c565b6101208181525050620001456006826200020660201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620001846200025b60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050506200020033620001d7620002b760201b60201c565b600a620001e5919062000ab1565b612710620001f4919062000b01565b620002bf60201b60201c565b62000e09565b5f6020835110156200022b5762000223836200034960201b60201c565b905062000255565b826200023d83620003b360201b60201c565b5f0190816200024d919062000844565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200029c95949392919062000bb9565b60405160208183030381529060405280519060200120905090565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000332575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000329919062000c14565b60405180910390fd5b620003455f8383620003bc60201b60201c565b5050565b5f80829050601f815111156200039857826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200038f919062000cb9565b60405180910390fd5b805181620003a69062000d0a565b5f1c175f1b915050919050565b5f819050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000410578060025f82825462000403919062000d79565b92505081905550620004e1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200049c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004939392919062000db3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200052a578060025f828254039250508190555062000574565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005d3919062000dee565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200065c57607f821691505b60208210810362000672576200067162000617565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006d67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000699565b620006e2868362000699565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200072c620007266200072084620006fa565b62000703565b620006fa565b9050919050565b5f819050919050565b62000747836200070c565b6200075f620007568262000733565b848454620006a5565b825550505050565b5f90565b6200077562000767565b620007828184846200073c565b505050565b5b81811015620007a9576200079d5f826200076b565b60018101905062000788565b5050565b601f821115620007f857620007c28162000678565b620007cd846200068a565b81016020851015620007dd578190505b620007f5620007ec856200068a565b83018262000787565b50505b505050565b5f82821c905092915050565b5f6200081a5f1984600802620007fd565b1980831691505092915050565b5f62000834838362000809565b9150826002028217905092915050565b6200084f82620005e0565b67ffffffffffffffff8111156200086b576200086a620005ea565b5b62000877825462000644565b62000884828285620007ad565b5f60209050601f831160018114620008ba575f8415620008a5578287015190505b620008b1858262000827565b86555062000920565b601f198416620008ca8662000678565b5f5b82811015620008f357848901518255600182019150602085019450602081019050620008cc565b868310156200091357848901516200090f601f89168262000809565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620009b2578086048111156200098a576200098962000928565b5b60018516156200099a5780820291505b8081029050620009aa8562000955565b94506200096a565b94509492505050565b5f82620009cc576001905062000a9e565b81620009db575f905062000a9e565b8160018114620009f45760028114620009ff5762000a35565b600191505062000a9e565b60ff84111562000a145762000a1362000928565b5b8360020a91508482111562000a2e5762000a2d62000928565b5b5062000a9e565b5060208310610133831016604e8410600b841016171562000a6f5782820a90508381111562000a695762000a6862000928565b5b62000a9e565b62000a7e848484600162000961565b9250905081840481111562000a985762000a9762000928565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000abd82620006fa565b915062000aca8362000aa5565b925062000af97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009bb565b905092915050565b5f62000b0d82620006fa565b915062000b1a83620006fa565b925082820262000b2a81620006fa565b9150828204841483151762000b445762000b4362000928565b5b5092915050565b5f819050919050565b62000b5f8162000b4b565b82525050565b62000b7081620006fa565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000ba18262000b76565b9050919050565b62000bb38162000b95565b82525050565b5f60a08201905062000bce5f83018862000b54565b62000bdd602083018762000b54565b62000bec604083018662000b54565b62000bfb606083018562000b65565b62000c0a608083018462000ba8565b9695505050505050565b5f60208201905062000c295f83018462000ba8565b92915050565b5f82825260208201905092915050565b5f5b8381101562000c5e57808201518184015260208101905062000c41565b5f8484015250505050565b5f601f19601f8301169050919050565b5f62000c8582620005e0565b62000c91818562000c2f565b935062000ca381856020860162000c3f565b62000cae8162000c69565b840191505092915050565b5f6020820190508181035f83015262000cd3818462000c79565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f62000d01825162000b4b565b80915050919050565b5f62000d168262000cdb565b8262000d228462000ce5565b905062000d2f8162000cf4565b9250602082101562000d725762000d6d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360200360080262000699565b831692505b5050919050565b5f62000d8582620006fa565b915062000d9283620006fa565b925082820190508082111562000dad5762000dac62000928565b5b92915050565b5f60608201905062000dc85f83018662000ba8565b62000dd7602083018562000b65565b62000de6604083018462000b65565b949350505050565b5f60208201905062000e035f83018462000b65565b92915050565b60805160a05160c05160e051610100516101205161014051611b6e62000e5b5f395f610a1501525f6109da01525f610f0e01525f610eed01525f6108d801525f61092e01525f6109570152611b6e5ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b411461022d578063a9059cbb1461024b578063d505accf1461027b578063dd62ed3e14610297576100cd565b806370a08231146101a95780637ecebe00146101d957806384b0196e14610209576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d5780633644e5151461018b575b5f80fd5b6100d96102c7565b6040516100e691906113de565b60405180910390f35b6101096004803603810190610104919061148f565b610357565b60405161011691906114e7565b60405180910390f35b610127610379565b604051610134919061150f565b60405180910390f35b61015760048036038101906101529190611528565b610382565b60405161016491906114e7565b60405180910390f35b6101756103b0565b6040516101829190611593565b60405180910390f35b6101936103b8565b6040516101a091906115c4565b60405180910390f35b6101c360048036038101906101be91906115dd565b6103c6565b6040516101d0919061150f565b60405180910390f35b6101f360048036038101906101ee91906115dd565b61040b565b604051610200919061150f565b60405180910390f35b61021161041c565b6040516102249796959493929190611708565b60405180910390f35b6102356104c1565b60405161024291906113de565b60405180910390f35b6102656004803603810190610260919061148f565b610551565b60405161027291906114e7565b60405180910390f35b610295600480360381019061029091906117de565b610573565b005b6102b160048036038101906102ac919061187b565b6106b8565b6040516102be919061150f565b60405180910390f35b6060600380546102d6906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610302906118e6565b801561034d5780601f106103245761010080835404028352916020019161034d565b820191905f5260205f20905b81548152906001019060200180831161033057829003601f168201915b5050505050905090565b5f8061036161073a565b905061036e818585610741565b600191505092915050565b5f600254905090565b5f8061038c61073a565b9050610399858285610753565b6103a48585856107e5565b60019150509392505050565b5f6012905090565b5f6103c16108d5565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6104158261098b565b9050919050565b5f6060805f805f606061042d6109d1565b610435610a0c565b46305f801b5f67ffffffffffffffff81111561045457610453611916565b5b6040519080825280602002602001820160405280156104825781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546104d0906118e6565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc906118e6565b80156105475780601f1061051e57610100808354040283529160200191610547565b820191905f5260205f20905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b5f8061055b61073a565b90506105688185856107e5565b600191505092915050565b834211156105b857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016105af919061150f565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105e68c610a47565b896040516020016105fc96959493929190611943565b6040516020818303038152906040528051906020012090505f61061e82610a9a565b90505f61062d82878787610ab3565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016106989291906119a2565b60405180910390fd5b6106ac8a8a8a610741565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61074e8383836001610ae1565b505050565b5f61075e84846106b8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107df57818110156107d0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107c7939291906119c9565b60405180910390fd5b6107de84848484035f610ae1565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610855575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161084c91906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108bc91906119fe565b60405180910390fd5b6108d0838383610cb0565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561095057507f000000000000000000000000000000000000000000000000000000000000000046145b1561097d577f00000000000000000000000000000000000000000000000000000000000000009050610988565b610985610ec9565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610a0760057f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b6060610a4260067f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610aac610aa66108d5565b8361100b565b9050919050565b5f805f80610ac38888888861104b565b925092509250610ad38282611132565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b51575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4891906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bb891906119fe565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610caa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca1919061150f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d00578060025f828254610cf49190611a44565b92505081905550610dce565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d89578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d80939291906119c9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e15578060025f8282540392505081905550610e5f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebc919061150f565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610f43959493929190611a77565b60405160208183030381529060405280519060200120905090565b606060ff5f1b8314610f7a57610f7383611294565b9050611005565b818054610f86906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb2906118e6565b8015610ffd5780601f10610fd457610100808354040283529160200191610ffd565b820191905f5260205f20905b815481529060010190602001808311610fe057829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611087575f600385925092509250611128565b5f6001888888886040515f81526020016040526040516110aa9493929190611ac8565b6020604051602081039080840390855afa1580156110ca573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361111b575f60015f801b93509350935050611128565b805f805f1b935093509350505b9450945094915050565b5f600381111561114557611144611b0b565b5b82600381111561115857611157611b0b565b5b0315611290576001600381111561117257611171611b0b565b5b82600381111561118557611184611b0b565b5b036111bc576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156111d0576111cf611b0b565b5b8260038111156111e3576111e2611b0b565b5b0361122757805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161121e919061150f565b60405180910390fd5b60038081111561123a57611239611b0b565b5b82600381111561124d5761124c611b0b565b5b0361128f57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161128691906115c4565b60405180910390fd5b5b5050565b60605f6112a083611306565b90505f602067ffffffffffffffff8111156112be576112bd611916565b5b6040519080825280601f01601f1916602001820160405280156112f05781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f81111561134b576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561138b578082015181840152602081019050611370565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113b082611354565b6113ba818561135e565b93506113ca81856020860161136e565b6113d381611396565b840191505092915050565b5f6020820190508181035f8301526113f681846113a6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61142b82611402565b9050919050565b61143b81611421565b8114611445575f80fd5b50565b5f8135905061145681611432565b92915050565b5f819050919050565b61146e8161145c565b8114611478575f80fd5b50565b5f8135905061148981611465565b92915050565b5f80604083850312156114a5576114a46113fe565b5b5f6114b285828601611448565b92505060206114c38582860161147b565b9150509250929050565b5f8115159050919050565b6114e1816114cd565b82525050565b5f6020820190506114fa5f8301846114d8565b92915050565b6115098161145c565b82525050565b5f6020820190506115225f830184611500565b92915050565b5f805f6060848603121561153f5761153e6113fe565b5b5f61154c86828701611448565b935050602061155d86828701611448565b925050604061156e8682870161147b565b9150509250925092565b5f60ff82169050919050565b61158d81611578565b82525050565b5f6020820190506115a65f830184611584565b92915050565b5f819050919050565b6115be816115ac565b82525050565b5f6020820190506115d75f8301846115b5565b92915050565b5f602082840312156115f2576115f16113fe565b5b5f6115ff84828501611448565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61163c81611608565b82525050565b61164b81611421565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116838161145c565b82525050565b5f611694838361167a565b60208301905092915050565b5f602082019050919050565b5f6116b682611651565b6116c0818561165b565b93506116cb8361166b565b805f5b838110156116fb5781516116e28882611689565b97506116ed836116a0565b9250506001810190506116ce565b5085935050505092915050565b5f60e08201905061171b5f83018a611633565b818103602083015261172d81896113a6565b9050818103604083015261174181886113a6565b90506117506060830187611500565b61175d6080830186611642565b61176a60a08301856115b5565b81810360c083015261177c81846116ac565b905098975050505050505050565b61179381611578565b811461179d575f80fd5b50565b5f813590506117ae8161178a565b92915050565b6117bd816115ac565b81146117c7575f80fd5b50565b5f813590506117d8816117b4565b92915050565b5f805f805f805f60e0888a0312156117f9576117f86113fe565b5b5f6118068a828b01611448565b97505060206118178a828b01611448565b96505060406118288a828b0161147b565b95505060606118398a828b0161147b565b945050608061184a8a828b016117a0565b93505060a061185b8a828b016117ca565b92505060c061186c8a828b016117ca565b91505092959891949750929550565b5f8060408385031215611891576118906113fe565b5b5f61189e85828601611448565b92505060206118af85828601611448565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118fd57607f821691505b6020821081036119105761190f6118b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c0820190506119565f8301896115b5565b6119636020830188611642565b6119706040830187611642565b61197d6060830186611500565b61198a6080830185611500565b61199760a0830184611500565b979650505050505050565b5f6040820190506119b55f830185611642565b6119c26020830184611642565b9392505050565b5f6060820190506119dc5f830186611642565b6119e96020830185611500565b6119f66040830184611500565b949350505050565b5f602082019050611a115f830184611642565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4e8261145c565b9150611a598361145c565b9250828201905080821115611a7157611a70611a17565b5b92915050565b5f60a082019050611a8a5f8301886115b5565b611a9760208301876115b5565b611aa460408301866115b5565b611ab16060830185611500565b611abe6080830184611642565b9695505050505050565b5f608082019050611adb5f8301876115b5565b611ae86020830186611584565b611af560408301856115b5565b611b0260608301846115b5565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220a3b651deeede408756b2dd895a28adcb1cc2b656366aae713ce89fd739b1b30764736f6c63430008160033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6E6F774C65646765546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B6E6F774C65646765546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4B544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFC SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10E SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP POP POP PUSH3 0x127 PUSH1 0x5 DUP4 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x145 PUSH1 0x6 DUP3 PUSH3 0x206 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x184 PUSH3 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x200 CALLER PUSH3 0x1D7 PUSH3 0x2B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x1E5 SWAP2 SWAP1 PUSH3 0xAB1 JUMP JUMPDEST PUSH2 0x2710 PUSH3 0x1F4 SWAP2 SWAP1 PUSH3 0xB01 JUMP JUMPDEST PUSH3 0x2BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE09 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x22B JUMPI PUSH3 0x223 DUP4 PUSH3 0x349 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x255 JUMP JUMPDEST DUP3 PUSH3 0x23D DUP4 PUSH3 0x3B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x24D SWAP2 SWAP1 PUSH3 0x844 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x29C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x332 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x329 SWAP2 SWAP1 PUSH3 0xC14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x345 PUSH0 DUP4 DUP4 PUSH3 0x3BC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x398 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x38F SWAP2 SWAP1 PUSH3 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3A6 SWAP1 PUSH3 0xD0A JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x410 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x403 SWAP2 SWAP1 PUSH3 0xD79 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4E1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x49C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x493 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x52A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x574 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5D3 SWAP2 SWAP1 PUSH3 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x65C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x672 JUMPI PUSH3 0x671 PUSH3 0x617 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x6D6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x699 JUMP JUMPDEST PUSH3 0x6E2 DUP7 DUP4 PUSH3 0x699 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x72C PUSH3 0x726 PUSH3 0x720 DUP5 PUSH3 0x6FA JUMP JUMPDEST PUSH3 0x703 JUMP JUMPDEST PUSH3 0x6FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x747 DUP4 PUSH3 0x70C JUMP JUMPDEST PUSH3 0x75F PUSH3 0x756 DUP3 PUSH3 0x733 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6A5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x775 PUSH3 0x767 JUMP JUMPDEST PUSH3 0x782 DUP2 DUP5 DUP5 PUSH3 0x73C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7A9 JUMPI PUSH3 0x79D PUSH0 DUP3 PUSH3 0x76B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x788 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x7F8 JUMPI PUSH3 0x7C2 DUP2 PUSH3 0x678 JUMP JUMPDEST PUSH3 0x7CD DUP5 PUSH3 0x68A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x7DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x7F5 PUSH3 0x7EC DUP6 PUSH3 0x68A JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x787 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x81A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x7FD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x834 DUP4 DUP4 PUSH3 0x809 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x84F DUP3 PUSH3 0x5E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x86B JUMPI PUSH3 0x86A PUSH3 0x5EA JUMP JUMPDEST JUMPDEST PUSH3 0x877 DUP3 SLOAD PUSH3 0x644 JUMP JUMPDEST PUSH3 0x884 DUP3 DUP3 DUP6 PUSH3 0x7AD JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x8BA JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8A5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8B1 DUP6 DUP3 PUSH3 0x827 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x920 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8CA DUP7 PUSH3 0x678 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x8F3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8CC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x913 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x90F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x809 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x9B2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x98A JUMPI PUSH3 0x989 PUSH3 0x928 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x99A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x9AA DUP6 PUSH3 0x955 JUMP JUMPDEST SWAP5 POP PUSH3 0x96A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x9CC JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xA9E JUMP JUMPDEST DUP2 PUSH3 0x9DB JUMPI PUSH0 SWAP1 POP PUSH3 0xA9E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x9F4 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x9FF JUMPI PUSH3 0xA35 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xA9E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA14 JUMPI PUSH3 0xA13 PUSH3 0x928 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xA2E JUMPI PUSH3 0xA2D PUSH3 0x928 JUMP JUMPDEST JUMPDEST POP PUSH3 0xA9E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xA6F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xA69 JUMPI PUSH3 0xA68 PUSH3 0x928 JUMP JUMPDEST JUMPDEST PUSH3 0xA9E JUMP JUMPDEST PUSH3 0xA7E DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x961 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xA98 JUMPI PUSH3 0xA97 PUSH3 0x928 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xABD DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xACA DUP4 PUSH3 0xAA5 JUMP JUMPDEST SWAP3 POP PUSH3 0xAF9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x9BB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB0D DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xB1A DUP4 PUSH3 0x6FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB2A DUP2 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xB44 JUMPI PUSH3 0xB43 PUSH3 0x928 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB5F DUP2 PUSH3 0xB4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xB70 DUP2 PUSH3 0x6FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBA1 DUP3 PUSH3 0xB76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBB3 DUP2 PUSH3 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xBCE PUSH0 DUP4 ADD DUP9 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBDD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBEC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xB54 JUMP JUMPDEST PUSH3 0xBFB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xB65 JUMP JUMPDEST PUSH3 0xC0A PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xBA8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC29 PUSH0 DUP4 ADD DUP5 PUSH3 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC5E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC41 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC85 DUP3 PUSH3 0x5E0 JUMP JUMPDEST PUSH3 0xC91 DUP2 DUP6 PUSH3 0xC2F JUMP JUMPDEST SWAP4 POP PUSH3 0xCA3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xC3F JUMP JUMPDEST PUSH3 0xCAE DUP2 PUSH3 0xC69 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xCD3 DUP2 DUP5 PUSH3 0xC79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD01 DUP3 MLOAD PUSH3 0xB4B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD16 DUP3 PUSH3 0xCDB JUMP JUMPDEST DUP3 PUSH3 0xD22 DUP5 PUSH3 0xCE5 JUMP JUMPDEST SWAP1 POP PUSH3 0xD2F DUP2 PUSH3 0xCF4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xD72 JUMPI PUSH3 0xD6D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x699 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD85 DUP3 PUSH3 0x6FA JUMP JUMPDEST SWAP2 POP PUSH3 0xD92 DUP4 PUSH3 0x6FA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xDAD JUMPI PUSH3 0xDAC PUSH3 0x928 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xDC8 PUSH0 DUP4 ADD DUP7 PUSH3 0xBA8 JUMP JUMPDEST PUSH3 0xDD7 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB65 JUMP JUMPDEST PUSH3 0xDE6 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB65 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE03 PUSH0 DUP4 ADD DUP5 PUSH3 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1B6E PUSH3 0xE5B PUSH0 CODECOPY PUSH0 PUSH2 0xA15 ADD MSTORE PUSH0 PUSH2 0x9DA ADD MSTORE PUSH0 PUSH2 0xF0E ADD MSTORE PUSH0 PUSH2 0xEED ADD MSTORE PUSH0 PUSH2 0x8D8 ADD MSTORE PUSH0 PUSH2 0x92E ADD MSTORE PUSH0 PUSH2 0x957 ADD MSTORE PUSH2 0x1B6E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D6 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x324 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x330 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x38C PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3A4 DUP6 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C1 PUSH2 0x8D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x415 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x42D PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA0C JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x482 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55B PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x568 DUP2 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x5B8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5E6 DUP13 PUSH2 0xA47 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x61E DUP3 PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62D DUP3 DUP8 DUP8 DUP8 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP11 DUP11 DUP11 PUSH2 0x741 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x988 JUMP JUMPDEST PUSH2 0x985 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA07 PUSH1 0x5 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA42 PUSH1 0x6 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAC PUSH2 0xAA6 PUSH2 0x8D5 JUMP JUMPDEST DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xAC3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x104B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD3 DUP3 DUP3 PUSH2 0x1132 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD00 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDCE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xF7A JUMPI PUSH2 0xF73 DUP4 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF86 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1087 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1128 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111B JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1128 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1290 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1184 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1227 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x128F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x12A0 DUP4 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B0 DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x135E JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F6 DUP2 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1478 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP5 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1509 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155D DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156E DUP7 DUP3 DUP8 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1683 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP4 DUP4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x16C0 DUP2 DUP6 PUSH2 0x165B JUMP JUMPDEST SWAP4 POP PUSH2 0x16CB DUP4 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16FB JUMPI DUP2 MLOAD PUSH2 0x16E2 DUP9 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP8 POP PUSH2 0x16ED DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP11 PUSH2 0x1633 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x172D DUP2 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 DUP9 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1750 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x175D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x176A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP2 EQ PUSH2 0x17C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D8 DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1806 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1817 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1828 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1839 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x184A DUP11 DUP3 DUP12 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x185B DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x186C DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x18B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1956 PUSH0 DUP4 ADD DUP10 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x197D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x198A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x19F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A59 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A8A PUSH0 DUP4 ADD DUP9 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AB1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1ABE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADB PUSH0 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB6 MLOAD 0xDE 0xEE 0xDE BLOCKHASH DUP8 JUMP 0xB2 0xDD DUP10 GAS 0x28 0xAD 0xCB SHR 0xC2 0xB6 JUMP CALLDATASIZE PUSH11 0xAE713CE89FD739B1B30764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "200:189:17:-:0;;;252:135;;;;;;;;;;1574:52:4;;;;;;;;;;;;;;;;;1613:4;3328:431:13;;;;;;;;;;;;;;;;;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:13;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:4;337:43:17::2;343:10;369;:8;;;:10;;:::i;:::-;363:2;:16;;;;:::i;:::-;355:5;:24;;;;:::i;:::-;337:5;;;:43;;:::i;:::-;200:189:::0;;2914:340:9;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:13:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:9:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:10:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:86::-;7496:7;7536:4;7529:5;7525:16;7514:27;;7461:86;;;:::o;7553:281::-;7611:5;7635:23;7653:4;7635:23;:::i;:::-;7627:31;;7679:25;7695:8;7679:25;:::i;:::-;7667:37;;7723:104;7760:66;7750:8;7744:4;7723:104;:::i;:::-;7714:113;;7553:281;;;;:::o;7840:410::-;7880:7;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7937:20;7955:1;7937:20;:::i;:::-;7932:25;;7992:1;7989;7985:9;8014:30;8032:11;8014:30;:::i;:::-;8003:41;;8193:1;8184:7;8180:15;8177:1;8174:22;8154:1;8147:9;8127:83;8104:139;;8223:18;;:::i;:::-;8104:139;7888:362;7840:410;;;;:::o;8256:77::-;8293:7;8322:5;8311:16;;8256:77;;;:::o;8339:118::-;8426:24;8444:5;8426:24;:::i;:::-;8421:3;8414:37;8339:118;;:::o;8463:::-;8550:24;8568:5;8550:24;:::i;:::-;8545:3;8538:37;8463:118;;:::o;8587:126::-;8624:7;8664:42;8657:5;8653:54;8642:65;;8587:126;;;:::o;8719:96::-;8756:7;8785:24;8803:5;8785:24;:::i;:::-;8774:35;;8719:96;;;:::o;8821:118::-;8908:24;8926:5;8908:24;:::i;:::-;8903:3;8896:37;8821:118;;:::o;8945:664::-;9150:4;9188:3;9177:9;9173:19;9165:27;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9283:72;9351:2;9340:9;9336:18;9327:6;9283:72;:::i;:::-;9365;9433:2;9422:9;9418:18;9409:6;9365:72;:::i;:::-;9447;9515:2;9504:9;9500:18;9491:6;9447:72;:::i;:::-;9529:73;9597:3;9586:9;9582:19;9573:6;9529:73;:::i;:::-;8945:664;;;;;;;;:::o;9615:222::-;9708:4;9746:2;9735:9;9731:18;9723:26;;9759:71;9827:1;9816:9;9812:17;9803:6;9759:71;:::i;:::-;9615:222;;;;:::o;9843:169::-;9927:11;9961:6;9956:3;9949:19;10001:4;9996:3;9992:14;9977:29;;9843:169;;;;:::o;10018:246::-;10099:1;10109:113;10123:6;10120:1;10117:13;10109:113;;;10208:1;10203:3;10199:11;10193:18;10189:1;10184:3;10180:11;10173:39;10145:2;10142:1;10138:10;10133:15;;10109:113;;;10256:1;10247:6;10242:3;10238:16;10231:27;10080:184;10018:246;;;:::o;10270:102::-;10311:6;10362:2;10358:7;10353:2;10346:5;10342:14;10338:28;10328:38;;10270:102;;;:::o;10378:377::-;10466:3;10494:39;10527:5;10494:39;:::i;:::-;10549:71;10613:6;10608:3;10549:71;:::i;:::-;10542:78;;10629:65;10687:6;10682:3;10675:4;10668:5;10664:16;10629:65;:::i;:::-;10719:29;10741:6;10719:29;:::i;:::-;10714:3;10710:39;10703:46;;10470:285;10378:377;;;;:::o;10761:313::-;10874:4;10912:2;10901:9;10897:18;10889:26;;10961:9;10955:4;10951:20;10947:1;10936:9;10932:17;10925:47;10989:78;11062:4;11053:6;10989:78;:::i;:::-;10981:86;;10761:313;;;;:::o;11080:98::-;11131:6;11165:5;11159:12;11149:22;;11080:98;;;:::o;11184:116::-;11235:4;11258:3;11250:11;;11288:4;11283:3;11279:14;11271:22;;11184:116;;;:::o;11306:154::-;11349:11;11385:29;11409:3;11403:10;11385:29;:::i;:::-;11448:5;11424:29;;11361:99;11306:154;;;:::o;11466:594::-;11550:5;11581:38;11613:5;11581:38;:::i;:::-;11644:5;11671:40;11705:5;11671:40;:::i;:::-;11659:52;;11730:35;11756:8;11730:35;:::i;:::-;11721:44;;11789:2;11781:6;11778:14;11775:278;;;11860:169;11945:66;11915:6;11911:2;11907:15;11904:1;11900:23;11860:169;:::i;:::-;11837:5;11816:227;11807:236;;11775:278;11556:504;;11466:594;;;:::o;12066:191::-;12106:3;12125:20;12143:1;12125:20;:::i;:::-;12120:25;;12159:20;12177:1;12159:20;:::i;:::-;12154:25;;12202:1;12199;12195:9;12188:16;;12223:3;12220:1;12217:10;12214:36;;;12230:18;;:::i;:::-;12214:36;12066:191;;;;:::o;12263:442::-;12412:4;12450:2;12439:9;12435:18;12427:26;;12463:71;12531:1;12520:9;12516:17;12507:6;12463:71;:::i;:::-;12544:72;12612:2;12601:9;12597:18;12588:6;12544:72;:::i;:::-;12626;12694:2;12683:9;12679:18;12670:6;12626:72;:::i;:::-;12263:442;;;;;;:::o;12711:222::-;12804:4;12842:2;12831:9;12827:18;12819:26;;12855:71;12923:1;12912:9;12908:17;12899:6;12855:71;:::i;:::-;12711:222;;;;:::o;200:189:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_907": {
									"entryPoint": 952,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2212": {
									"entryPoint": 2513,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2224": {
									"entryPoint": 2572,
									"id": 2224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_567": {
									"entryPoint": 1857,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_627": {
									"entryPoint": 2785,
									"id": 627,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2142": {
									"entryPoint": 3785,
									"id": 2142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_2121": {
									"entryPoint": 2261,
									"id": 2121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2158": {
									"entryPoint": 2714,
									"id": 2158,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_982": {
									"entryPoint": 1850,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_675": {
									"entryPoint": 1875,
									"id": 675,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1997": {
									"entryPoint": 4402,
									"id": 1997,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_406": {
									"entryPoint": 2021,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_483": {
									"entryPoint": 3248,
									"id": 483,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1042": {
									"entryPoint": 2631,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_303": {
									"entryPoint": 1720,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_327": {
									"entryPoint": 855,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": 966,
									"id": 262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_1186": {
									"entryPoint": 4870,
									"id": 1186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_240": {
									"entryPoint": 944,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2200": {
									"entryPoint": 1052,
									"id": 2200,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@name_222": {
									"entryPoint": 711,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1027": {
									"entryPoint": 2443,
									"id": 1027,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_897": {
									"entryPoint": 1035,
									"id": 897,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_880": {
									"entryPoint": 1395,
									"id": 880,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1948": {
									"entryPoint": 2739,
									"id": 1948,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_231": {
									"entryPoint": 1217,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1253": {
									"entryPoint": 3934,
									"id": 1253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1154": {
									"entryPoint": 4756,
									"id": 1154,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2298": {
									"entryPoint": 4107,
									"id": 2298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_249": {
									"entryPoint": 889,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_359": {
									"entryPoint": 898,
									"id": 359,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_286": {
									"entryPoint": 1361,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1912": {
									"entryPoint": 4171,
									"id": 1912,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 5683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5896,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15381:18",
										"nodeType": "YulBlock",
										"src": "0:15381:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "208:73:18",
													"nodeType": "YulBlock",
													"src": "208:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:18"
																},
																"nativeSrc": "218:19:18",
																"nodeType": "YulFunctionCall",
																"src": "218:19:18"
															},
															"nativeSrc": "218:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:18"
														},
														{
															"nativeSrc": "246:29:18",
															"nodeType": "YulAssignment",
															"src": "246:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:18",
																		"nodeType": "YulLiteral",
																		"src": "270:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:18"
																},
																"nativeSrc": "261:14:18",
																"nodeType": "YulFunctionCall",
																"src": "261:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:18",
														"nodeType": "YulTypedName",
														"src": "180:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:18",
														"nodeType": "YulTypedName",
														"src": "185:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:18",
														"nodeType": "YulTypedName",
														"src": "196:11:18",
														"type": ""
													}
												],
												"src": "112:169:18"
											},
											{
												"body": {
													"nativeSrc": "349:184:18",
													"nodeType": "YulBlock",
													"src": "349:184:18",
													"statements": [
														{
															"nativeSrc": "359:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:18",
																"nodeType": "YulLiteral",
																"src": "368:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:18",
																	"nodeType": "YulTypedName",
																	"src": "363:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:18",
																"nodeType": "YulBlock",
																"src": "428:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:18"
																					},
																					"nativeSrc": "449:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:18"
																							},
																							"nativeSrc": "468:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:18"
																					},
																					"nativeSrc": "462:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:18"
																			},
																			"nativeSrc": "442:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:18"
																		},
																		"nativeSrc": "442:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:18"
																},
																"nativeSrc": "386:13:18",
																"nodeType": "YulFunctionCall",
																"src": "386:13:18"
															},
															"nativeSrc": "378:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:18",
																"nodeType": "YulBlock",
																"src": "400:19:18",
																"statements": [
																	{
																		"nativeSrc": "402:15:18",
																		"nodeType": "YulAssignment",
																		"src": "402:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:18",
																					"nodeType": "YulLiteral",
																					"src": "414:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:18"
																			},
																			"nativeSrc": "407:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:18",
																"nodeType": "YulBlock",
																"src": "382:3:18",
																"statements": []
															},
															"src": "378:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:18"
																		},
																		"nativeSrc": "507:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:18",
																		"nodeType": "YulLiteral",
																		"src": "525:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:18"
																},
																"nativeSrc": "500:27:18",
																"nodeType": "YulFunctionCall",
																"src": "500:27:18"
															},
															"nativeSrc": "500:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:18",
														"nodeType": "YulTypedName",
														"src": "331:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:18",
														"nodeType": "YulTypedName",
														"src": "336:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:18",
														"nodeType": "YulTypedName",
														"src": "341:6:18",
														"type": ""
													}
												],
												"src": "287:246:18"
											},
											{
												"body": {
													"nativeSrc": "587:54:18",
													"nodeType": "YulBlock",
													"src": "587:54:18",
													"statements": [
														{
															"nativeSrc": "597:38:18",
															"nodeType": "YulAssignment",
															"src": "597:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:18",
																				"nodeType": "YulLiteral",
																				"src": "622:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:18"
																		},
																		"nativeSrc": "611:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:18",
																				"nodeType": "YulLiteral",
																				"src": "631:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:18"
																		},
																		"nativeSrc": "627:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:18"
																},
																"nativeSrc": "607:28:18",
																"nodeType": "YulFunctionCall",
																"src": "607:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:18",
														"nodeType": "YulTypedName",
														"src": "570:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:18",
														"nodeType": "YulTypedName",
														"src": "580:6:18",
														"type": ""
													}
												],
												"src": "539:102:18"
											},
											{
												"body": {
													"nativeSrc": "739:285:18",
													"nodeType": "YulBlock",
													"src": "739:285:18",
													"statements": [
														{
															"nativeSrc": "749:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:18"
																},
																"nativeSrc": "763:39:18",
																"nodeType": "YulFunctionCall",
																"src": "763:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:18",
																	"nodeType": "YulTypedName",
																	"src": "753:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:18",
															"nodeType": "YulAssignment",
															"src": "811:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:18"
																},
																"nativeSrc": "818:71:18",
																"nodeType": "YulFunctionCall",
																"src": "818:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:18",
																				"nodeType": "YulLiteral",
																				"src": "944:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:18"
																		},
																		"nativeSrc": "933:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:18"
																},
																"nativeSrc": "898:65:18",
																"nodeType": "YulFunctionCall",
																"src": "898:65:18"
															},
															"nativeSrc": "898:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:18"
														},
														{
															"nativeSrc": "972:46:18",
															"nodeType": "YulAssignment",
															"src": "972:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:18"
																		},
																		"nativeSrc": "988:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:18"
																},
																"nativeSrc": "979:39:18",
																"nodeType": "YulFunctionCall",
																"src": "979:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:18",
														"nodeType": "YulTypedName",
														"src": "720:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:18",
														"nodeType": "YulTypedName",
														"src": "727:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:18",
														"nodeType": "YulTypedName",
														"src": "735:3:18",
														"type": ""
													}
												],
												"src": "647:377:18"
											},
											{
												"body": {
													"nativeSrc": "1148:195:18",
													"nodeType": "YulBlock",
													"src": "1148:195:18",
													"statements": [
														{
															"nativeSrc": "1158:26:18",
															"nodeType": "YulAssignment",
															"src": "1158:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:18"
																},
																"nativeSrc": "1166:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:18"
																		},
																		"nativeSrc": "1201:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:18"
																		},
																		"nativeSrc": "1220:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:18"
																},
																"nativeSrc": "1194:47:18",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:18"
															},
															"nativeSrc": "1194:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:18"
														},
														{
															"nativeSrc": "1250:86:18",
															"nodeType": "YulAssignment",
															"src": "1250:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:18"
																},
																"nativeSrc": "1258:78:18",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:18",
														"nodeType": "YulTypedName",
														"src": "1120:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:18",
														"nodeType": "YulTypedName",
														"src": "1132:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:18",
														"nodeType": "YulTypedName",
														"src": "1143:4:18",
														"type": ""
													}
												],
												"src": "1030:313:18"
											},
											{
												"body": {
													"nativeSrc": "1389:35:18",
													"nodeType": "YulBlock",
													"src": "1389:35:18",
													"statements": [
														{
															"nativeSrc": "1399:19:18",
															"nodeType": "YulAssignment",
															"src": "1399:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:18"
																},
																"nativeSrc": "1409:9:18",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:18",
														"nodeType": "YulTypedName",
														"src": "1382:6:18",
														"type": ""
													}
												],
												"src": "1349:75:18"
											},
											{
												"body": {
													"nativeSrc": "1519:28:18",
													"nodeType": "YulBlock",
													"src": "1519:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:18"
																},
																"nativeSrc": "1529:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:18"
															},
															"nativeSrc": "1529:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:18"
											},
											{
												"body": {
													"nativeSrc": "1642:28:18",
													"nodeType": "YulBlock",
													"src": "1642:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:18"
																},
																"nativeSrc": "1652:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:18"
															},
															"nativeSrc": "1652:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:18"
											},
											{
												"body": {
													"nativeSrc": "1721:81:18",
													"nodeType": "YulBlock",
													"src": "1721:81:18",
													"statements": [
														{
															"nativeSrc": "1731:65:18",
															"nodeType": "YulAssignment",
															"src": "1731:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:18",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:18"
																},
																"nativeSrc": "1742:54:18",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:18",
														"nodeType": "YulTypedName",
														"src": "1703:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:18",
														"nodeType": "YulTypedName",
														"src": "1713:7:18",
														"type": ""
													}
												],
												"src": "1676:126:18"
											},
											{
												"body": {
													"nativeSrc": "1853:51:18",
													"nodeType": "YulBlock",
													"src": "1853:51:18",
													"statements": [
														{
															"nativeSrc": "1863:35:18",
															"nodeType": "YulAssignment",
															"src": "1863:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:18"
																},
																"nativeSrc": "1874:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:18",
														"nodeType": "YulTypedName",
														"src": "1835:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:18",
														"nodeType": "YulTypedName",
														"src": "1845:7:18",
														"type": ""
													}
												],
												"src": "1808:96:18"
											},
											{
												"body": {
													"nativeSrc": "1953:79:18",
													"nodeType": "YulBlock",
													"src": "1953:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:18",
																"nodeType": "YulBlock",
																"src": "2010:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:18"
																			},
																			"nativeSrc": "2012:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:18"
																		},
																		"nativeSrc": "2012:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:18"
																				},
																				"nativeSrc": "1983:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:18"
																		},
																		"nativeSrc": "1973:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:18"
																},
																"nativeSrc": "1966:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:18"
															},
															"nativeSrc": "1963:63:18",
															"nodeType": "YulIf",
															"src": "1963:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:18",
														"nodeType": "YulTypedName",
														"src": "1946:5:18",
														"type": ""
													}
												],
												"src": "1910:122:18"
											},
											{
												"body": {
													"nativeSrc": "2090:87:18",
													"nodeType": "YulBlock",
													"src": "2090:87:18",
													"statements": [
														{
															"nativeSrc": "2100:29:18",
															"nodeType": "YulAssignment",
															"src": "2100:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:18"
																},
																"nativeSrc": "2109:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:18"
																},
																"nativeSrc": "2138:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:18"
															},
															"nativeSrc": "2138:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:18",
														"nodeType": "YulTypedName",
														"src": "2068:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:18",
														"nodeType": "YulTypedName",
														"src": "2076:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:18",
														"nodeType": "YulTypedName",
														"src": "2084:5:18",
														"type": ""
													}
												],
												"src": "2038:139:18"
											},
											{
												"body": {
													"nativeSrc": "2228:32:18",
													"nodeType": "YulBlock",
													"src": "2228:32:18",
													"statements": [
														{
															"nativeSrc": "2238:16:18",
															"nodeType": "YulAssignment",
															"src": "2238:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:18",
																"nodeType": "YulIdentifier",
																"src": "2249:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:18",
														"nodeType": "YulTypedName",
														"src": "2210:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:18",
														"nodeType": "YulTypedName",
														"src": "2220:7:18",
														"type": ""
													}
												],
												"src": "2183:77:18"
											},
											{
												"body": {
													"nativeSrc": "2309:79:18",
													"nodeType": "YulBlock",
													"src": "2309:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:18",
																"nodeType": "YulBlock",
																"src": "2366:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:18"
																			},
																			"nativeSrc": "2368:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:18"
																		},
																		"nativeSrc": "2368:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:18"
																				},
																				"nativeSrc": "2339:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:18"
																		},
																		"nativeSrc": "2329:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:18"
																},
																"nativeSrc": "2322:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:18"
															},
															"nativeSrc": "2319:63:18",
															"nodeType": "YulIf",
															"src": "2319:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:18",
														"nodeType": "YulTypedName",
														"src": "2302:5:18",
														"type": ""
													}
												],
												"src": "2266:122:18"
											},
											{
												"body": {
													"nativeSrc": "2446:87:18",
													"nodeType": "YulBlock",
													"src": "2446:87:18",
													"statements": [
														{
															"nativeSrc": "2456:29:18",
															"nodeType": "YulAssignment",
															"src": "2456:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:18"
																},
																"nativeSrc": "2465:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:18"
																},
																"nativeSrc": "2494:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:18"
															},
															"nativeSrc": "2494:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:18",
														"nodeType": "YulTypedName",
														"src": "2424:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:18",
														"nodeType": "YulTypedName",
														"src": "2432:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:18",
														"nodeType": "YulTypedName",
														"src": "2440:5:18",
														"type": ""
													}
												],
												"src": "2394:139:18"
											},
											{
												"body": {
													"nativeSrc": "2622:391:18",
													"nodeType": "YulBlock",
													"src": "2622:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:18",
																"nodeType": "YulBlock",
																"src": "2668:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:18"
																			},
																			"nativeSrc": "2670:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:18"
																		},
																		"nativeSrc": "2670:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:18"
																		},
																		"nativeSrc": "2639:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:18"
																},
																"nativeSrc": "2635:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:18"
															},
															"nativeSrc": "2632:119:18",
															"nodeType": "YulIf",
															"src": "2632:119:18"
														},
														{
															"nativeSrc": "2761:117:18",
															"nodeType": "YulBlock",
															"src": "2761:117:18",
															"statements": [
																{
																	"nativeSrc": "2776:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:18"
																				},
																				"nativeSrc": "2836:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:18"
																		},
																		"nativeSrc": "2815:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:18",
															"nodeType": "YulBlock",
															"src": "2888:118:18",
															"statements": [
																{
																	"nativeSrc": "2903:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:18"
																				},
																				"nativeSrc": "2964:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:18"
																		},
																		"nativeSrc": "2943:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:18",
														"nodeType": "YulTypedName",
														"src": "2584:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:18",
														"nodeType": "YulTypedName",
														"src": "2595:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:18",
														"nodeType": "YulTypedName",
														"src": "2607:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:18",
														"nodeType": "YulTypedName",
														"src": "2615:6:18",
														"type": ""
													}
												],
												"src": "2539:474:18"
											},
											{
												"body": {
													"nativeSrc": "3061:48:18",
													"nodeType": "YulBlock",
													"src": "3061:48:18",
													"statements": [
														{
															"nativeSrc": "3071:32:18",
															"nodeType": "YulAssignment",
															"src": "3071:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:18"
																		},
																		"nativeSrc": "3089:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:18"
																},
																"nativeSrc": "3082:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:18",
														"nodeType": "YulTypedName",
														"src": "3043:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:18",
														"nodeType": "YulTypedName",
														"src": "3053:7:18",
														"type": ""
													}
												],
												"src": "3019:90:18"
											},
											{
												"body": {
													"nativeSrc": "3174:50:18",
													"nodeType": "YulBlock",
													"src": "3174:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:18"
																		},
																		"nativeSrc": "3196:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:18"
																},
																"nativeSrc": "3184:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:18"
															},
															"nativeSrc": "3184:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:18",
														"nodeType": "YulTypedName",
														"src": "3162:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:18",
														"nodeType": "YulTypedName",
														"src": "3169:3:18",
														"type": ""
													}
												],
												"src": "3115:109:18"
											},
											{
												"body": {
													"nativeSrc": "3322:118:18",
													"nodeType": "YulBlock",
													"src": "3322:118:18",
													"statements": [
														{
															"nativeSrc": "3332:26:18",
															"nodeType": "YulAssignment",
															"src": "3332:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:18"
																},
																"nativeSrc": "3340:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:18"
																		},
																		"nativeSrc": "3415:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:18"
																},
																"nativeSrc": "3368:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:18"
															},
															"nativeSrc": "3368:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:18",
														"nodeType": "YulTypedName",
														"src": "3294:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:18",
														"nodeType": "YulTypedName",
														"src": "3306:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:18",
														"nodeType": "YulTypedName",
														"src": "3317:4:18",
														"type": ""
													}
												],
												"src": "3230:210:18"
											},
											{
												"body": {
													"nativeSrc": "3511:53:18",
													"nodeType": "YulBlock",
													"src": "3511:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:18"
																		},
																		"nativeSrc": "3533:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:18"
																},
																"nativeSrc": "3521:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:18"
															},
															"nativeSrc": "3521:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:18",
														"nodeType": "YulTypedName",
														"src": "3499:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:18",
														"nodeType": "YulTypedName",
														"src": "3506:3:18",
														"type": ""
													}
												],
												"src": "3446:118:18"
											},
											{
												"body": {
													"nativeSrc": "3668:124:18",
													"nodeType": "YulBlock",
													"src": "3668:124:18",
													"statements": [
														{
															"nativeSrc": "3678:26:18",
															"nodeType": "YulAssignment",
															"src": "3678:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:18"
																},
																"nativeSrc": "3686:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:18"
																		},
																		"nativeSrc": "3767:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:18"
																},
																"nativeSrc": "3714:71:18",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:18"
															},
															"nativeSrc": "3714:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:18",
														"nodeType": "YulTypedName",
														"src": "3640:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:18",
														"nodeType": "YulTypedName",
														"src": "3652:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:18",
														"nodeType": "YulTypedName",
														"src": "3663:4:18",
														"type": ""
													}
												],
												"src": "3570:222:18"
											},
											{
												"body": {
													"nativeSrc": "3898:519:18",
													"nodeType": "YulBlock",
													"src": "3898:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:18",
																"nodeType": "YulBlock",
																"src": "3944:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:18"
																			},
																			"nativeSrc": "3946:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:18"
																		},
																		"nativeSrc": "3946:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:18"
																		},
																		"nativeSrc": "3915:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:18"
																},
																"nativeSrc": "3911:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:18"
															},
															"nativeSrc": "3908:119:18",
															"nodeType": "YulIf",
															"src": "3908:119:18"
														},
														{
															"nativeSrc": "4037:117:18",
															"nodeType": "YulBlock",
															"src": "4037:117:18",
															"statements": [
																{
																	"nativeSrc": "4052:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:18"
																				},
																				"nativeSrc": "4112:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:18"
																		},
																		"nativeSrc": "4091:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:18",
															"nodeType": "YulBlock",
															"src": "4164:118:18",
															"statements": [
																{
																	"nativeSrc": "4179:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:18"
																				},
																				"nativeSrc": "4240:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:18"
																		},
																		"nativeSrc": "4219:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:18",
															"nodeType": "YulBlock",
															"src": "4292:118:18",
															"statements": [
																{
																	"nativeSrc": "4307:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:18"
																				},
																				"nativeSrc": "4368:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:18"
																		},
																		"nativeSrc": "4347:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:18",
														"nodeType": "YulTypedName",
														"src": "3852:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:18",
														"nodeType": "YulTypedName",
														"src": "3863:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:18",
														"nodeType": "YulTypedName",
														"src": "3875:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:18",
														"nodeType": "YulTypedName",
														"src": "3883:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:18",
														"nodeType": "YulTypedName",
														"src": "3891:6:18",
														"type": ""
													}
												],
												"src": "3798:619:18"
											},
											{
												"body": {
													"nativeSrc": "4466:43:18",
													"nodeType": "YulBlock",
													"src": "4466:43:18",
													"statements": [
														{
															"nativeSrc": "4476:27:18",
															"nodeType": "YulAssignment",
															"src": "4476:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:18"
																},
																"nativeSrc": "4487:16:18",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:18",
														"nodeType": "YulTypedName",
														"src": "4448:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:18",
														"nodeType": "YulTypedName",
														"src": "4458:7:18",
														"type": ""
													}
												],
												"src": "4423:86:18"
											},
											{
												"body": {
													"nativeSrc": "4576:51:18",
													"nodeType": "YulBlock",
													"src": "4576:51:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:18",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:18"
																		},
																		"nativeSrc": "4598:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:18"
																},
																"nativeSrc": "4586:35:18",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:18"
															},
															"nativeSrc": "4586:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:18"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:18",
														"nodeType": "YulTypedName",
														"src": "4564:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:18",
														"nodeType": "YulTypedName",
														"src": "4571:3:18",
														"type": ""
													}
												],
												"src": "4515:112:18"
											},
											{
												"body": {
													"nativeSrc": "4727:120:18",
													"nodeType": "YulBlock",
													"src": "4727:120:18",
													"statements": [
														{
															"nativeSrc": "4737:26:18",
															"nodeType": "YulAssignment",
															"src": "4737:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:18"
																},
																"nativeSrc": "4745:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:18"
																		},
																		"nativeSrc": "4822:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:18",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:18"
																},
																"nativeSrc": "4773:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:18"
															},
															"nativeSrc": "4773:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:18",
														"nodeType": "YulTypedName",
														"src": "4699:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:18",
														"nodeType": "YulTypedName",
														"src": "4711:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:18",
														"nodeType": "YulTypedName",
														"src": "4722:4:18",
														"type": ""
													}
												],
												"src": "4633:214:18"
											},
											{
												"body": {
													"nativeSrc": "4898:32:18",
													"nodeType": "YulBlock",
													"src": "4898:32:18",
													"statements": [
														{
															"nativeSrc": "4908:16:18",
															"nodeType": "YulAssignment",
															"src": "4908:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "4919:5:18",
																"nodeType": "YulIdentifier",
																"src": "4919:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4908:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4853:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:18",
														"nodeType": "YulTypedName",
														"src": "4880:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4890:7:18",
														"nodeType": "YulTypedName",
														"src": "4890:7:18",
														"type": ""
													}
												],
												"src": "4853:77:18"
											},
											{
												"body": {
													"nativeSrc": "5001:53:18",
													"nodeType": "YulBlock",
													"src": "5001:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5018:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5041:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5023:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:18"
																		},
																		"nativeSrc": "5023:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:18"
																},
																"nativeSrc": "5011:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5011:37:18"
															},
															"nativeSrc": "5011:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4936:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4989:5:18",
														"nodeType": "YulTypedName",
														"src": "4989:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4996:3:18",
														"nodeType": "YulTypedName",
														"src": "4996:3:18",
														"type": ""
													}
												],
												"src": "4936:118:18"
											},
											{
												"body": {
													"nativeSrc": "5158:124:18",
													"nodeType": "YulBlock",
													"src": "5158:124:18",
													"statements": [
														{
															"nativeSrc": "5168:26:18",
															"nodeType": "YulAssignment",
															"src": "5168:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5176:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:18"
																},
																"nativeSrc": "5176:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5176:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5168:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5248:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:18"
																		},
																		"nativeSrc": "5257:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5204:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:18"
																},
																"nativeSrc": "5204:71:18",
																"nodeType": "YulFunctionCall",
																"src": "5204:71:18"
															},
															"nativeSrc": "5204:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5060:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:18",
														"nodeType": "YulTypedName",
														"src": "5130:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5142:6:18",
														"nodeType": "YulTypedName",
														"src": "5142:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5153:4:18",
														"nodeType": "YulTypedName",
														"src": "5153:4:18",
														"type": ""
													}
												],
												"src": "5060:222:18"
											},
											{
												"body": {
													"nativeSrc": "5354:263:18",
													"nodeType": "YulBlock",
													"src": "5354:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5400:83:18",
																"nodeType": "YulBlock",
																"src": "5400:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5402:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:18"
																			},
																			"nativeSrc": "5402:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:18"
																		},
																		"nativeSrc": "5402:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5375:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5371:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:18"
																		},
																		"nativeSrc": "5371:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5367:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:18"
																},
																"nativeSrc": "5367:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5367:32:18"
															},
															"nativeSrc": "5364:119:18",
															"nodeType": "YulIf",
															"src": "5364:119:18"
														},
														{
															"nativeSrc": "5493:117:18",
															"nodeType": "YulBlock",
															"src": "5493:117:18",
															"statements": [
																{
																	"nativeSrc": "5508:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5537:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5537:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5572:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5583:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5568:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:18"
																				},
																				"nativeSrc": "5568:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5592:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5547:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:18"
																		},
																		"nativeSrc": "5547:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5537:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5288:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:18",
														"nodeType": "YulTypedName",
														"src": "5324:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5335:7:18",
														"nodeType": "YulTypedName",
														"src": "5335:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5347:6:18",
														"nodeType": "YulTypedName",
														"src": "5347:6:18",
														"type": ""
													}
												],
												"src": "5288:329:18"
											},
											{
												"body": {
													"nativeSrc": "5667:105:18",
													"nodeType": "YulBlock",
													"src": "5667:105:18",
													"statements": [
														{
															"nativeSrc": "5677:89:18",
															"nodeType": "YulAssignment",
															"src": "5677:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:66:18",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:18",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:18"
																},
																"nativeSrc": "5688:78:18",
																"nodeType": "YulFunctionCall",
																"src": "5688:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5623:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:18",
														"nodeType": "YulTypedName",
														"src": "5649:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:18",
														"nodeType": "YulTypedName",
														"src": "5659:7:18",
														"type": ""
													}
												],
												"src": "5623:149:18"
											},
											{
												"body": {
													"nativeSrc": "5841:52:18",
													"nodeType": "YulBlock",
													"src": "5841:52:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5858:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5880:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5863:16:18",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:18"
																		},
																		"nativeSrc": "5863:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5851:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:18"
																},
																"nativeSrc": "5851:36:18",
																"nodeType": "YulFunctionCall",
																"src": "5851:36:18"
															},
															"nativeSrc": "5851:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:18"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5778:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5829:5:18",
														"nodeType": "YulTypedName",
														"src": "5829:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5836:3:18",
														"nodeType": "YulTypedName",
														"src": "5836:3:18",
														"type": ""
													}
												],
												"src": "5778:115:18"
											},
											{
												"body": {
													"nativeSrc": "5964:53:18",
													"nodeType": "YulBlock",
													"src": "5964:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:18"
																		},
																		"nativeSrc": "5986:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:18"
																},
																"nativeSrc": "5974:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:18"
															},
															"nativeSrc": "5974:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:18",
														"nodeType": "YulTypedName",
														"src": "5952:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:18",
														"nodeType": "YulTypedName",
														"src": "5959:3:18",
														"type": ""
													}
												],
												"src": "5899:118:18"
											},
											{
												"body": {
													"nativeSrc": "6097:40:18",
													"nodeType": "YulBlock",
													"src": "6097:40:18",
													"statements": [
														{
															"nativeSrc": "6108:22:18",
															"nodeType": "YulAssignment",
															"src": "6108:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6124:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6118:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:18"
																},
																"nativeSrc": "6118:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6023:114:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:18",
														"nodeType": "YulTypedName",
														"src": "6080:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:18",
														"nodeType": "YulTypedName",
														"src": "6090:6:18",
														"type": ""
													}
												],
												"src": "6023:114:18"
											},
											{
												"body": {
													"nativeSrc": "6254:73:18",
													"nodeType": "YulBlock",
													"src": "6254:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6276:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:18"
																},
																"nativeSrc": "6264:19:18",
																"nodeType": "YulFunctionCall",
																"src": "6264:19:18"
															},
															"nativeSrc": "6264:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:18"
														},
														{
															"nativeSrc": "6292:29:18",
															"nodeType": "YulAssignment",
															"src": "6292:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6311:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:18"
																},
																"nativeSrc": "6307:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6307:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6292:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6143:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6226:3:18",
														"nodeType": "YulTypedName",
														"src": "6226:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6231:6:18",
														"nodeType": "YulTypedName",
														"src": "6231:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6242:11:18",
														"nodeType": "YulTypedName",
														"src": "6242:11:18",
														"type": ""
													}
												],
												"src": "6143:184:18"
											},
											{
												"body": {
													"nativeSrc": "6405:60:18",
													"nodeType": "YulBlock",
													"src": "6405:60:18",
													"statements": [
														{
															"nativeSrc": "6415:11:18",
															"nodeType": "YulAssignment",
															"src": "6415:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "6423:3:18",
																"nodeType": "YulIdentifier",
																"src": "6423:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6415:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:18"
																}
															]
														},
														{
															"nativeSrc": "6436:22:18",
															"nodeType": "YulAssignment",
															"src": "6436:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6448:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:18"
																},
																"nativeSrc": "6444:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6444:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6333:132:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6392:3:18",
														"nodeType": "YulTypedName",
														"src": "6392:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6400:4:18",
														"nodeType": "YulTypedName",
														"src": "6400:4:18",
														"type": ""
													}
												],
												"src": "6333:132:18"
											},
											{
												"body": {
													"nativeSrc": "6526:53:18",
													"nodeType": "YulBlock",
													"src": "6526:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6566:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6548:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:18"
																		},
																		"nativeSrc": "6548:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6536:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:18"
																},
																"nativeSrc": "6536:37:18",
																"nodeType": "YulFunctionCall",
																"src": "6536:37:18"
															},
															"nativeSrc": "6536:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6471:108:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6514:5:18",
														"nodeType": "YulTypedName",
														"src": "6514:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6521:3:18",
														"nodeType": "YulTypedName",
														"src": "6521:3:18",
														"type": ""
													}
												],
												"src": "6471:108:18"
											},
											{
												"body": {
													"nativeSrc": "6665:99:18",
													"nodeType": "YulBlock",
													"src": "6665:99:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6709:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6675:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:18"
																},
																"nativeSrc": "6675:46:18",
																"nodeType": "YulFunctionCall",
																"src": "6675:46:18"
															},
															"nativeSrc": "6675:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:18"
														},
														{
															"nativeSrc": "6730:28:18",
															"nodeType": "YulAssignment",
															"src": "6730:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6748:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6744:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:18"
																},
																"nativeSrc": "6744:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6744:14:18"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6730:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:18"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6585:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6638:6:18",
														"nodeType": "YulTypedName",
														"src": "6638:6:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:18",
														"nodeType": "YulTypedName",
														"src": "6646:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6654:10:18",
														"nodeType": "YulTypedName",
														"src": "6654:10:18",
														"type": ""
													}
												],
												"src": "6585:179:18"
											},
											{
												"body": {
													"nativeSrc": "6845:38:18",
													"nodeType": "YulBlock",
													"src": "6845:38:18",
													"statements": [
														{
															"nativeSrc": "6855:22:18",
															"nodeType": "YulAssignment",
															"src": "6855:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6872:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:18"
																},
																"nativeSrc": "6863:14:18",
																"nodeType": "YulFunctionCall",
																"src": "6863:14:18"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6855:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:18"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6770:113:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6832:3:18",
														"nodeType": "YulTypedName",
														"src": "6832:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6840:4:18",
														"nodeType": "YulTypedName",
														"src": "6840:4:18",
														"type": ""
													}
												],
												"src": "6770:113:18"
											},
											{
												"body": {
													"nativeSrc": "7043:608:18",
													"nodeType": "YulBlock",
													"src": "7043:608:18",
													"statements": [
														{
															"nativeSrc": "7053:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7115:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7067:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:18"
																},
																"nativeSrc": "7067:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7067:54:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7057:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:93:18",
															"nodeType": "YulAssignment",
															"src": "7130:93:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7216:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7137:73:18",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:18"
																},
																"nativeSrc": "7137:86:18",
																"nodeType": "YulFunctionCall",
																"src": "7137:86:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7130:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:18"
																}
															]
														},
														{
															"nativeSrc": "7232:71:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7297:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7247:49:18",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:18"
																},
																"nativeSrc": "7247:56:18",
																"nodeType": "YulFunctionCall",
																"src": "7247:56:18"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7236:7:18",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7312:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:18",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7326:7:18",
																"nodeType": "YulIdentifier",
																"src": "7326:7:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7316:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7402:224:18",
																"nodeType": "YulBlock",
																"src": "7402:224:18",
																"statements": [
																	{
																		"nativeSrc": "7416:34:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7443:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7437:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:18"
																			},
																			"nativeSrc": "7437:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:18"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7420:13:18",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7463:70:18",
																		"nodeType": "YulAssignment",
																		"src": "7463:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7514:13:18",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:18"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7529:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7470:43:18",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:18"
																			},
																			"nativeSrc": "7470:63:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7463:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7546:70:18",
																		"nodeType": "YulAssignment",
																		"src": "7546:70:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7609:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:18"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7556:52:18",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:18"
																			},
																			"nativeSrc": "7556:60:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7546:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7364:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7361:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:18"
																},
																"nativeSrc": "7361:13:18",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:18"
															},
															"nativeSrc": "7342:284:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7375:18:18",
																"nodeType": "YulBlock",
																"src": "7375:18:18",
																"statements": [
																	{
																		"nativeSrc": "7377:14:18",
																		"nodeType": "YulAssignment",
																		"src": "7377:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7386:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7382:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:18"
																			},
																			"nativeSrc": "7382:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7377:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7346:14:18",
																"nodeType": "YulBlock",
																"src": "7346:14:18",
																"statements": [
																	{
																		"nativeSrc": "7348:10:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7357:1:18",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7352:1:18",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:18"
														},
														{
															"nativeSrc": "7635:10:18",
															"nodeType": "YulAssignment",
															"src": "7635:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "7642:3:18",
																"nodeType": "YulIdentifier",
																"src": "7642:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7635:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6919:732:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7022:5:18",
														"nodeType": "YulTypedName",
														"src": "7022:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7029:3:18",
														"nodeType": "YulTypedName",
														"src": "7029:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7038:3:18",
														"nodeType": "YulTypedName",
														"src": "7038:3:18",
														"type": ""
													}
												],
												"src": "6919:732:18"
											},
											{
												"body": {
													"nativeSrc": "8011:861:18",
													"nodeType": "YulBlock",
													"src": "8011:861:18",
													"statements": [
														{
															"nativeSrc": "8021:27:18",
															"nodeType": "YulAssignment",
															"src": "8021:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8033:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:3:18",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:18",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:18"
																},
																"nativeSrc": "8029:19:18",
																"nodeType": "YulFunctionCall",
																"src": "8029:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8021:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8100:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8113:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8124:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8109:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:18"
																		},
																		"nativeSrc": "8109:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8058:41:18",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:18"
																},
																"nativeSrc": "8058:69:18",
																"nodeType": "YulFunctionCall",
																"src": "8058:69:18"
															},
															"nativeSrc": "8058:69:18",
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8148:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8159:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:18"
																		},
																		"nativeSrc": "8144:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:18"
																		},
																		"nativeSrc": "8164:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:18"
																},
																"nativeSrc": "8137:48:18",
																"nodeType": "YulFunctionCall",
																"src": "8137:48:18"
															},
															"nativeSrc": "8137:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:18"
														},
														{
															"nativeSrc": "8194:86:18",
															"nodeType": "YulAssignment",
															"src": "8194:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8266:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8275:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:18"
																},
																"nativeSrc": "8202:78:18",
																"nodeType": "YulFunctionCall",
																"src": "8202:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8301:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:18"
																		},
																		"nativeSrc": "8297:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8321:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8327:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:18"
																		},
																		"nativeSrc": "8317:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:18"
																},
																"nativeSrc": "8290:48:18",
																"nodeType": "YulFunctionCall",
																"src": "8290:48:18"
															},
															"nativeSrc": "8290:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:18"
														},
														{
															"nativeSrc": "8347:86:18",
															"nodeType": "YulAssignment",
															"src": "8347:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8419:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8428:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8355:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:18"
																},
																"nativeSrc": "8355:78:18",
																"nodeType": "YulFunctionCall",
																"src": "8355:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8347:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8487:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:18"
																		},
																		"nativeSrc": "8496:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8443:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:18"
																},
																"nativeSrc": "8443:72:18",
																"nodeType": "YulFunctionCall",
																"src": "8443:72:18"
															},
															"nativeSrc": "8443:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8569:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:18"
																		},
																		"nativeSrc": "8578:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8525:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:18"
																},
																"nativeSrc": "8525:73:18",
																"nodeType": "YulFunctionCall",
																"src": "8525:73:18"
															},
															"nativeSrc": "8525:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8652:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8665:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8661:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:18"
																		},
																		"nativeSrc": "8661:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8608:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:18"
																},
																"nativeSrc": "8608:73:18",
																"nodeType": "YulFunctionCall",
																"src": "8608:73:18"
															},
															"nativeSrc": "8608:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:3:18",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:18",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:18"
																		},
																		"nativeSrc": "8698:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8723:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8719:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:18"
																		},
																		"nativeSrc": "8719:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:18"
																},
																"nativeSrc": "8691:49:18",
																"nodeType": "YulFunctionCall",
																"src": "8691:49:18"
															},
															"nativeSrc": "8691:49:18",
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:18"
														},
														{
															"nativeSrc": "8749:116:18",
															"nodeType": "YulAssignment",
															"src": "8749:116:18",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8851:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8860:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8757:93:18",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:18"
																},
																"nativeSrc": "8757:108:18",
																"nodeType": "YulFunctionCall",
																"src": "8757:108:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8749:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7657:1215:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:18",
														"nodeType": "YulTypedName",
														"src": "7935:9:18",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7947:6:18",
														"nodeType": "YulTypedName",
														"src": "7947:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7955:6:18",
														"nodeType": "YulTypedName",
														"src": "7955:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7963:6:18",
														"nodeType": "YulTypedName",
														"src": "7963:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7971:6:18",
														"nodeType": "YulTypedName",
														"src": "7971:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7979:6:18",
														"nodeType": "YulTypedName",
														"src": "7979:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7987:6:18",
														"nodeType": "YulTypedName",
														"src": "7987:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7995:6:18",
														"nodeType": "YulTypedName",
														"src": "7995:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8006:4:18",
														"nodeType": "YulTypedName",
														"src": "8006:4:18",
														"type": ""
													}
												],
												"src": "7657:1215:18"
											},
											{
												"body": {
													"nativeSrc": "8919:77:18",
													"nodeType": "YulBlock",
													"src": "8919:77:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8974:16:18",
																"nodeType": "YulBlock",
																"src": "8974:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8983:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8983:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8986:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8986:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8976:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8976:6:18"
																			},
																			"nativeSrc": "8976:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8976:12:18"
																		},
																		"nativeSrc": "8976:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8976:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8942:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8942:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8965:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "8965:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "8949:15:18",
																					"nodeType": "YulIdentifier",
																					"src": "8949:15:18"
																				},
																				"nativeSrc": "8949:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8949:22:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8939:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8939:2:18"
																		},
																		"nativeSrc": "8939:33:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8939:33:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8932:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:18"
																},
																"nativeSrc": "8932:41:18",
																"nodeType": "YulFunctionCall",
																"src": "8932:41:18"
															},
															"nativeSrc": "8929:61:18",
															"nodeType": "YulIf",
															"src": "8929:61:18"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8878:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8912:5:18",
														"nodeType": "YulTypedName",
														"src": "8912:5:18",
														"type": ""
													}
												],
												"src": "8878:118:18"
											},
											{
												"body": {
													"nativeSrc": "9052:85:18",
													"nodeType": "YulBlock",
													"src": "9052:85:18",
													"statements": [
														{
															"nativeSrc": "9062:29:18",
															"nodeType": "YulAssignment",
															"src": "9062:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9084:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9084:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9071:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9071:12:18"
																},
																"nativeSrc": "9071:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9071:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9062:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9062:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9125:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9125:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9100:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "9100:24:18"
																},
																"nativeSrc": "9100:31:18",
																"nodeType": "YulFunctionCall",
																"src": "9100:31:18"
															},
															"nativeSrc": "9100:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "9100:31:18"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9002:135:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9030:6:18",
														"nodeType": "YulTypedName",
														"src": "9030:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9038:3:18",
														"nodeType": "YulTypedName",
														"src": "9038:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9046:5:18",
														"nodeType": "YulTypedName",
														"src": "9046:5:18",
														"type": ""
													}
												],
												"src": "9002:135:18"
											},
											{
												"body": {
													"nativeSrc": "9186:79:18",
													"nodeType": "YulBlock",
													"src": "9186:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9243:16:18",
																"nodeType": "YulBlock",
																"src": "9243:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9252:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9252:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9255:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9255:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9245:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9245:6:18"
																			},
																			"nativeSrc": "9245:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9245:12:18"
																		},
																		"nativeSrc": "9245:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9245:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9209:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "9209:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9234:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "9234:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9216:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "9216:17:18"
																				},
																				"nativeSrc": "9216:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9216:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9206:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9206:2:18"
																		},
																		"nativeSrc": "9206:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9206:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9199:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9199:6:18"
																},
																"nativeSrc": "9199:43:18",
																"nodeType": "YulFunctionCall",
																"src": "9199:43:18"
															},
															"nativeSrc": "9196:63:18",
															"nodeType": "YulIf",
															"src": "9196:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9143:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9179:5:18",
														"nodeType": "YulTypedName",
														"src": "9179:5:18",
														"type": ""
													}
												],
												"src": "9143:122:18"
											},
											{
												"body": {
													"nativeSrc": "9323:87:18",
													"nodeType": "YulBlock",
													"src": "9323:87:18",
													"statements": [
														{
															"nativeSrc": "9333:29:18",
															"nodeType": "YulAssignment",
															"src": "9333:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9355:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9355:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9342:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9342:12:18"
																},
																"nativeSrc": "9342:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9342:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9333:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9333:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9398:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9398:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9371:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "9371:26:18"
																},
																"nativeSrc": "9371:33:18",
																"nodeType": "YulFunctionCall",
																"src": "9371:33:18"
															},
															"nativeSrc": "9371:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "9371:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9271:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9301:6:18",
														"nodeType": "YulTypedName",
														"src": "9301:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9309:3:18",
														"nodeType": "YulTypedName",
														"src": "9309:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9317:5:18",
														"nodeType": "YulTypedName",
														"src": "9317:5:18",
														"type": ""
													}
												],
												"src": "9271:139:18"
											},
											{
												"body": {
													"nativeSrc": "9582:1033:18",
													"nodeType": "YulBlock",
													"src": "9582:1033:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9629:83:18",
																"nodeType": "YulBlock",
																"src": "9629:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9631:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9631:77:18"
																			},
																			"nativeSrc": "9631:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9631:79:18"
																		},
																		"nativeSrc": "9631:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9631:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9603:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9603:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9612:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9612:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9599:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:18"
																		},
																		"nativeSrc": "9599:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9599:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9624:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9624:3:18",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9595:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9595:3:18"
																},
																"nativeSrc": "9595:33:18",
																"nodeType": "YulFunctionCall",
																"src": "9595:33:18"
															},
															"nativeSrc": "9592:120:18",
															"nodeType": "YulIf",
															"src": "9592:120:18"
														},
														{
															"nativeSrc": "9722:117:18",
															"nodeType": "YulBlock",
															"src": "9722:117:18",
															"statements": [
																{
																	"nativeSrc": "9737:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9737:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9751:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9751:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9741:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9741:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9766:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9766:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9801:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9801:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9812:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9812:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9797:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9797:3:18"
																				},
																				"nativeSrc": "9797:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9797:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9821:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9821:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9776:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9776:20:18"
																		},
																		"nativeSrc": "9776:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9776:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9766:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9766:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9849:118:18",
															"nodeType": "YulBlock",
															"src": "9849:118:18",
															"statements": [
																{
																	"nativeSrc": "9864:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9864:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9878:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9878:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9868:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9868:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9894:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9894:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9929:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9929:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9940:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9940:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9925:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9925:3:18"
																				},
																				"nativeSrc": "9925:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9925:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9949:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9949:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9904:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9904:20:18"
																		},
																		"nativeSrc": "9904:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9904:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9894:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9894:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9977:118:18",
															"nodeType": "YulBlock",
															"src": "9977:118:18",
															"statements": [
																{
																	"nativeSrc": "9992:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9992:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10006:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9996:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9996:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10022:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10022:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10057:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10057:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10068:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10068:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10053:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10053:3:18"
																				},
																				"nativeSrc": "10053:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10053:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10077:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10077:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10032:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10032:20:18"
																		},
																		"nativeSrc": "10032:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10032:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10022:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10022:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10105:118:18",
															"nodeType": "YulBlock",
															"src": "10105:118:18",
															"statements": [
																{
																	"nativeSrc": "10120:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10120:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10134:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10134:2:18",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10124:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10124:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10150:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10150:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10185:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10185:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10196:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10196:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10181:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10181:3:18"
																				},
																				"nativeSrc": "10181:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10181:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10205:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10205:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10160:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10160:20:18"
																		},
																		"nativeSrc": "10160:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10160:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10150:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10150:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10233:117:18",
															"nodeType": "YulBlock",
															"src": "10233:117:18",
															"statements": [
																{
																	"nativeSrc": "10248:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10248:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10262:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10262:3:18",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10252:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10252:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10279:61:18",
																	"nodeType": "YulAssignment",
																	"src": "10279:61:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10312:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10312:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10323:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10323:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10308:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10308:3:18"
																				},
																				"nativeSrc": "10308:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10308:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10332:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10332:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10289:18:18",
																			"nodeType": "YulIdentifier",
																			"src": "10289:18:18"
																		},
																		"nativeSrc": "10289:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10289:51:18"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10279:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10279:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10360:119:18",
															"nodeType": "YulBlock",
															"src": "10360:119:18",
															"statements": [
																{
																	"nativeSrc": "10375:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10375:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10389:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10389:3:18",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10379:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10379:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10406:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10406:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10441:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10441:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10452:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10452:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10437:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10437:3:18"
																				},
																				"nativeSrc": "10437:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10437:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10461:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10461:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10416:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10416:20:18"
																		},
																		"nativeSrc": "10416:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10416:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10406:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10406:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10489:119:18",
															"nodeType": "YulBlock",
															"src": "10489:119:18",
															"statements": [
																{
																	"nativeSrc": "10504:17:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10504:17:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10518:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10518:3:18",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10508:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10508:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10535:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10535:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10570:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10570:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10581:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10581:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10566:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10566:3:18"
																				},
																				"nativeSrc": "10566:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10566:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10590:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10590:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10545:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10545:20:18"
																		},
																		"nativeSrc": "10545:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10545:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10535:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10535:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9416:1199:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9504:9:18",
														"nodeType": "YulTypedName",
														"src": "9504:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9515:7:18",
														"nodeType": "YulTypedName",
														"src": "9515:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9527:6:18",
														"nodeType": "YulTypedName",
														"src": "9527:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9535:6:18",
														"nodeType": "YulTypedName",
														"src": "9535:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9543:6:18",
														"nodeType": "YulTypedName",
														"src": "9543:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9551:6:18",
														"nodeType": "YulTypedName",
														"src": "9551:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9559:6:18",
														"nodeType": "YulTypedName",
														"src": "9559:6:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9567:6:18",
														"nodeType": "YulTypedName",
														"src": "9567:6:18",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9575:6:18",
														"nodeType": "YulTypedName",
														"src": "9575:6:18",
														"type": ""
													}
												],
												"src": "9416:1199:18"
											},
											{
												"body": {
													"nativeSrc": "10704:391:18",
													"nodeType": "YulBlock",
													"src": "10704:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10750:83:18",
																"nodeType": "YulBlock",
																"src": "10750:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10752:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10752:77:18"
																			},
																			"nativeSrc": "10752:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10752:79:18"
																		},
																		"nativeSrc": "10752:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10752:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10725:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10725:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10734:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10734:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10721:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10721:3:18"
																		},
																		"nativeSrc": "10721:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10721:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10746:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10746:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10717:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10717:3:18"
																},
																"nativeSrc": "10717:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10717:32:18"
															},
															"nativeSrc": "10714:119:18",
															"nodeType": "YulIf",
															"src": "10714:119:18"
														},
														{
															"nativeSrc": "10843:117:18",
															"nodeType": "YulBlock",
															"src": "10843:117:18",
															"statements": [
																{
																	"nativeSrc": "10858:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10858:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10872:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10872:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10862:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10862:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10887:63:18",
																	"nodeType": "YulAssignment",
																	"src": "10887:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10922:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10922:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10933:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10933:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10918:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10918:3:18"
																				},
																				"nativeSrc": "10918:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10918:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10942:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10942:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10897:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "10897:20:18"
																		},
																		"nativeSrc": "10897:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10897:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10887:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10887:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10970:118:18",
															"nodeType": "YulBlock",
															"src": "10970:118:18",
															"statements": [
																{
																	"nativeSrc": "10985:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10985:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10999:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10999:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10989:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10989:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11015:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11015:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11050:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11050:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11061:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11061:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11046:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11046:3:18"
																				},
																				"nativeSrc": "11046:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11046:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11070:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11070:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11025:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11025:20:18"
																		},
																		"nativeSrc": "11025:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11025:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11015:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11015:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10621:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10666:9:18",
														"nodeType": "YulTypedName",
														"src": "10666:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10677:7:18",
														"nodeType": "YulTypedName",
														"src": "10677:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10689:6:18",
														"nodeType": "YulTypedName",
														"src": "10689:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10697:6:18",
														"nodeType": "YulTypedName",
														"src": "10697:6:18",
														"type": ""
													}
												],
												"src": "10621:474:18"
											},
											{
												"body": {
													"nativeSrc": "11129:152:18",
													"nodeType": "YulBlock",
													"src": "11129:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11146:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11146:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11149:77:18",
																		"nodeType": "YulLiteral",
																		"src": "11149:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11139:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11139:6:18"
																},
																"nativeSrc": "11139:88:18",
																"nodeType": "YulFunctionCall",
																"src": "11139:88:18"
															},
															"nativeSrc": "11139:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "11139:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11243:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11243:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11246:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11246:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11236:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11236:6:18"
																},
																"nativeSrc": "11236:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11236:15:18"
															},
															"nativeSrc": "11236:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11236:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11267:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11267:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11270:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11270:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11260:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11260:6:18"
																},
																"nativeSrc": "11260:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11260:15:18"
															},
															"nativeSrc": "11260:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11260:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11101:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "11101:180:18"
											},
											{
												"body": {
													"nativeSrc": "11338:269:18",
													"nodeType": "YulBlock",
													"src": "11338:269:18",
													"statements": [
														{
															"nativeSrc": "11348:22:18",
															"nodeType": "YulAssignment",
															"src": "11348:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11362:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11362:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11368:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11368:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11358:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11358:3:18"
																},
																"nativeSrc": "11358:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11358:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11348:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11348:6:18"
																}
															]
														},
														{
															"nativeSrc": "11379:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11379:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11409:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11409:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11415:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11415:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11405:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11405:3:18"
																},
																"nativeSrc": "11405:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11405:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11383:18:18",
																	"nodeType": "YulTypedName",
																	"src": "11383:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11456:51:18",
																"nodeType": "YulBlock",
																"src": "11456:51:18",
																"statements": [
																	{
																		"nativeSrc": "11470:27:18",
																		"nodeType": "YulAssignment",
																		"src": "11470:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11484:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "11484:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11492:4:18",
																					"nodeType": "YulLiteral",
																					"src": "11492:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11480:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11480:3:18"
																			},
																			"nativeSrc": "11480:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11480:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11470:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11470:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11436:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "11436:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11429:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11429:6:18"
																},
																"nativeSrc": "11429:26:18",
																"nodeType": "YulFunctionCall",
																"src": "11429:26:18"
															},
															"nativeSrc": "11426:81:18",
															"nodeType": "YulIf",
															"src": "11426:81:18"
														},
														{
															"body": {
																"nativeSrc": "11559:42:18",
																"nodeType": "YulBlock",
																"src": "11559:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11573:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11573:16:18"
																			},
																			"nativeSrc": "11573:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11573:18:18"
																		},
																		"nativeSrc": "11573:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11573:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11523:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "11523:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11546:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11546:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11554:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11554:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11543:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11543:2:18"
																		},
																		"nativeSrc": "11543:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11543:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11520:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11520:2:18"
																},
																"nativeSrc": "11520:38:18",
																"nodeType": "YulFunctionCall",
																"src": "11520:38:18"
															},
															"nativeSrc": "11517:84:18",
															"nodeType": "YulIf",
															"src": "11517:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11287:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11322:4:18",
														"nodeType": "YulTypedName",
														"src": "11322:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11331:6:18",
														"nodeType": "YulTypedName",
														"src": "11331:6:18",
														"type": ""
													}
												],
												"src": "11287:320:18"
											},
											{
												"body": {
													"nativeSrc": "11641:152:18",
													"nodeType": "YulBlock",
													"src": "11641:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11658:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11658:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11661:77:18",
																		"nodeType": "YulLiteral",
																		"src": "11661:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11651:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:18"
																},
																"nativeSrc": "11651:88:18",
																"nodeType": "YulFunctionCall",
																"src": "11651:88:18"
															},
															"nativeSrc": "11651:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "11651:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11755:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11755:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11758:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11758:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11748:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11748:6:18"
																},
																"nativeSrc": "11748:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11748:15:18"
															},
															"nativeSrc": "11748:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11748:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11779:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11779:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11782:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11772:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11772:6:18"
																},
																"nativeSrc": "11772:15:18",
																"nodeType": "YulFunctionCall",
																"src": "11772:15:18"
															},
															"nativeSrc": "11772:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "11772:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11613:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "11613:180:18"
											},
											{
												"body": {
													"nativeSrc": "12037:537:18",
													"nodeType": "YulBlock",
													"src": "12037:537:18",
													"statements": [
														{
															"nativeSrc": "12047:27:18",
															"nodeType": "YulAssignment",
															"src": "12047:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12059:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12059:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12070:3:18",
																		"nodeType": "YulLiteral",
																		"src": "12070:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12055:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12055:3:18"
																},
																"nativeSrc": "12055:19:18",
																"nodeType": "YulFunctionCall",
																"src": "12055:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12047:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12047:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12128:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12128:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12141:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12141:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12152:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12152:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12137:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:18"
																		},
																		"nativeSrc": "12137:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12137:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12084:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12084:43:18"
																},
																"nativeSrc": "12084:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12084:71:18"
															},
															"nativeSrc": "12084:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12084:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12209:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12209:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12222:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12222:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12233:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12233:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12218:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12218:3:18"
																		},
																		"nativeSrc": "12218:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12218:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12165:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12165:43:18"
																},
																"nativeSrc": "12165:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12165:72:18"
															},
															"nativeSrc": "12165:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12165:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12291:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12291:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12304:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12304:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12315:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12315:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12300:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12300:3:18"
																		},
																		"nativeSrc": "12300:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12300:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12247:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12247:43:18"
																},
																"nativeSrc": "12247:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12247:72:18"
															},
															"nativeSrc": "12247:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12247:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12373:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12373:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12386:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12386:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12397:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12397:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12382:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12382:3:18"
																		},
																		"nativeSrc": "12382:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12382:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12329:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12329:43:18"
																},
																"nativeSrc": "12329:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12329:72:18"
															},
															"nativeSrc": "12329:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12329:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12455:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12455:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12468:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12468:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12479:3:18",
																				"nodeType": "YulLiteral",
																				"src": "12479:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12464:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12464:3:18"
																		},
																		"nativeSrc": "12464:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12464:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12411:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12411:43:18"
																},
																"nativeSrc": "12411:73:18",
																"nodeType": "YulFunctionCall",
																"src": "12411:73:18"
															},
															"nativeSrc": "12411:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "12411:73:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "12538:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12538:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12551:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12551:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12562:3:18",
																				"nodeType": "YulLiteral",
																				"src": "12562:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12547:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12547:3:18"
																		},
																		"nativeSrc": "12547:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12547:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12494:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12494:43:18"
																},
																"nativeSrc": "12494:73:18",
																"nodeType": "YulFunctionCall",
																"src": "12494:73:18"
															},
															"nativeSrc": "12494:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "12494:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11799:775:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11969:9:18",
														"nodeType": "YulTypedName",
														"src": "11969:9:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11981:6:18",
														"nodeType": "YulTypedName",
														"src": "11981:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11989:6:18",
														"nodeType": "YulTypedName",
														"src": "11989:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11997:6:18",
														"nodeType": "YulTypedName",
														"src": "11997:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12005:6:18",
														"nodeType": "YulTypedName",
														"src": "12005:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12013:6:18",
														"nodeType": "YulTypedName",
														"src": "12013:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12021:6:18",
														"nodeType": "YulTypedName",
														"src": "12021:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12032:4:18",
														"nodeType": "YulTypedName",
														"src": "12032:4:18",
														"type": ""
													}
												],
												"src": "11799:775:18"
											},
											{
												"body": {
													"nativeSrc": "12706:206:18",
													"nodeType": "YulBlock",
													"src": "12706:206:18",
													"statements": [
														{
															"nativeSrc": "12716:26:18",
															"nodeType": "YulAssignment",
															"src": "12716:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12728:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12728:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12739:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12739:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12724:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12724:3:18"
																},
																"nativeSrc": "12724:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12724:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12716:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12716:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12796:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12796:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12809:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12809:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12820:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12820:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12805:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12805:3:18"
																		},
																		"nativeSrc": "12805:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12805:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12752:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12752:43:18"
																},
																"nativeSrc": "12752:71:18",
																"nodeType": "YulFunctionCall",
																"src": "12752:71:18"
															},
															"nativeSrc": "12752:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "12752:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12877:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12877:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12890:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12890:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12901:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12901:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12886:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12886:3:18"
																		},
																		"nativeSrc": "12886:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12886:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12833:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "12833:43:18"
																},
																"nativeSrc": "12833:72:18",
																"nodeType": "YulFunctionCall",
																"src": "12833:72:18"
															},
															"nativeSrc": "12833:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "12833:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12580:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12670:9:18",
														"nodeType": "YulTypedName",
														"src": "12670:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12682:6:18",
														"nodeType": "YulTypedName",
														"src": "12682:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12690:6:18",
														"nodeType": "YulTypedName",
														"src": "12690:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12701:4:18",
														"nodeType": "YulTypedName",
														"src": "12701:4:18",
														"type": ""
													}
												],
												"src": "12580:332:18"
											},
											{
												"body": {
													"nativeSrc": "13072:288:18",
													"nodeType": "YulBlock",
													"src": "13072:288:18",
													"statements": [
														{
															"nativeSrc": "13082:26:18",
															"nodeType": "YulAssignment",
															"src": "13082:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13094:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13094:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13105:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13105:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13090:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13090:3:18"
																},
																"nativeSrc": "13090:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13090:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13082:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13082:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13162:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13162:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13175:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13175:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13186:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13186:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13171:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13171:3:18"
																		},
																		"nativeSrc": "13171:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13171:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13118:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13118:43:18"
																},
																"nativeSrc": "13118:71:18",
																"nodeType": "YulFunctionCall",
																"src": "13118:71:18"
															},
															"nativeSrc": "13118:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "13118:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13243:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13243:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13256:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13256:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13267:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13252:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13252:3:18"
																		},
																		"nativeSrc": "13252:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13252:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13199:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13199:43:18"
																},
																"nativeSrc": "13199:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13199:72:18"
															},
															"nativeSrc": "13199:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13199:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13325:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13325:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13338:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13338:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13349:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13349:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13334:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13334:3:18"
																		},
																		"nativeSrc": "13334:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13334:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13281:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13281:43:18"
																},
																"nativeSrc": "13281:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13281:72:18"
															},
															"nativeSrc": "13281:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13281:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12918:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13028:9:18",
														"nodeType": "YulTypedName",
														"src": "13028:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13040:6:18",
														"nodeType": "YulTypedName",
														"src": "13040:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13048:6:18",
														"nodeType": "YulTypedName",
														"src": "13048:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13056:6:18",
														"nodeType": "YulTypedName",
														"src": "13056:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13067:4:18",
														"nodeType": "YulTypedName",
														"src": "13067:4:18",
														"type": ""
													}
												],
												"src": "12918:442:18"
											},
											{
												"body": {
													"nativeSrc": "13464:124:18",
													"nodeType": "YulBlock",
													"src": "13464:124:18",
													"statements": [
														{
															"nativeSrc": "13474:26:18",
															"nodeType": "YulAssignment",
															"src": "13474:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13486:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13486:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13497:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13497:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13482:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13482:3:18"
																},
																"nativeSrc": "13482:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13482:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13474:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13474:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13554:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13554:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13567:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13567:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13578:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13578:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13563:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13563:3:18"
																		},
																		"nativeSrc": "13563:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13563:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13510:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13510:43:18"
																},
																"nativeSrc": "13510:71:18",
																"nodeType": "YulFunctionCall",
																"src": "13510:71:18"
															},
															"nativeSrc": "13510:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "13510:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13366:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13436:9:18",
														"nodeType": "YulTypedName",
														"src": "13436:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13448:6:18",
														"nodeType": "YulTypedName",
														"src": "13448:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13459:4:18",
														"nodeType": "YulTypedName",
														"src": "13459:4:18",
														"type": ""
													}
												],
												"src": "13366:222:18"
											},
											{
												"body": {
													"nativeSrc": "13622:152:18",
													"nodeType": "YulBlock",
													"src": "13622:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13639:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13639:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13642:77:18",
																		"nodeType": "YulLiteral",
																		"src": "13642:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13632:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:18"
																},
																"nativeSrc": "13632:88:18",
																"nodeType": "YulFunctionCall",
																"src": "13632:88:18"
															},
															"nativeSrc": "13632:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "13632:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13736:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13736:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13739:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13739:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:18"
																},
																"nativeSrc": "13729:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13729:15:18"
															},
															"nativeSrc": "13729:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13729:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13760:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13760:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13763:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13763:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13753:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:18"
																},
																"nativeSrc": "13753:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13753:15:18"
															},
															"nativeSrc": "13753:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13753:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13594:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "13594:180:18"
											},
											{
												"body": {
													"nativeSrc": "13824:147:18",
													"nodeType": "YulBlock",
													"src": "13824:147:18",
													"statements": [
														{
															"nativeSrc": "13834:25:18",
															"nodeType": "YulAssignment",
															"src": "13834:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13857:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13857:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13839:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "13839:17:18"
																},
																"nativeSrc": "13839:20:18",
																"nodeType": "YulFunctionCall",
																"src": "13839:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13834:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "13834:1:18"
																}
															]
														},
														{
															"nativeSrc": "13868:25:18",
															"nodeType": "YulAssignment",
															"src": "13868:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13891:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13891:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13873:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "13873:17:18"
																},
																"nativeSrc": "13873:20:18",
																"nodeType": "YulFunctionCall",
																"src": "13873:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13868:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "13868:1:18"
																}
															]
														},
														{
															"nativeSrc": "13902:16:18",
															"nodeType": "YulAssignment",
															"src": "13902:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13913:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13913:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13916:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13916:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13909:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:18"
																},
																"nativeSrc": "13909:9:18",
																"nodeType": "YulFunctionCall",
																"src": "13909:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13902:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13942:22:18",
																"nodeType": "YulBlock",
																"src": "13942:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13944:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "13944:16:18"
																			},
																			"nativeSrc": "13944:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13944:18:18"
																		},
																		"nativeSrc": "13944:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13944:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13934:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13934:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13937:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13937:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13931:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13931:2:18"
																},
																"nativeSrc": "13931:10:18",
																"nodeType": "YulFunctionCall",
																"src": "13931:10:18"
															},
															"nativeSrc": "13928:36:18",
															"nodeType": "YulIf",
															"src": "13928:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13780:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13811:1:18",
														"nodeType": "YulTypedName",
														"src": "13811:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13814:1:18",
														"nodeType": "YulTypedName",
														"src": "13814:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13820:3:18",
														"nodeType": "YulTypedName",
														"src": "13820:3:18",
														"type": ""
													}
												],
												"src": "13780:191:18"
											},
											{
												"body": {
													"nativeSrc": "14187:454:18",
													"nodeType": "YulBlock",
													"src": "14187:454:18",
													"statements": [
														{
															"nativeSrc": "14197:27:18",
															"nodeType": "YulAssignment",
															"src": "14197:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14209:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14220:3:18",
																		"nodeType": "YulLiteral",
																		"src": "14220:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:18"
																},
																"nativeSrc": "14205:19:18",
																"nodeType": "YulFunctionCall",
																"src": "14205:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14197:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14278:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14278:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14291:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14302:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14302:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14287:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:18"
																		},
																		"nativeSrc": "14287:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14287:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14234:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14234:43:18"
																},
																"nativeSrc": "14234:71:18",
																"nodeType": "YulFunctionCall",
																"src": "14234:71:18"
															},
															"nativeSrc": "14234:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "14234:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14359:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14359:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14372:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14372:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14383:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14383:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14368:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:18"
																		},
																		"nativeSrc": "14368:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14368:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14315:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14315:43:18"
																},
																"nativeSrc": "14315:72:18",
																"nodeType": "YulFunctionCall",
																"src": "14315:72:18"
															},
															"nativeSrc": "14315:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "14315:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14441:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14441:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14454:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14465:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14465:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14450:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14450:3:18"
																		},
																		"nativeSrc": "14450:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14450:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14397:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14397:43:18"
																},
																"nativeSrc": "14397:72:18",
																"nodeType": "YulFunctionCall",
																"src": "14397:72:18"
															},
															"nativeSrc": "14397:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "14397:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14523:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14523:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14536:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14536:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14547:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14547:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14532:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14532:3:18"
																		},
																		"nativeSrc": "14532:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14532:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14479:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14479:43:18"
																},
																"nativeSrc": "14479:72:18",
																"nodeType": "YulFunctionCall",
																"src": "14479:72:18"
															},
															"nativeSrc": "14479:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "14479:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14605:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:3:18",
																				"nodeType": "YulLiteral",
																				"src": "14629:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:18"
																		},
																		"nativeSrc": "14614:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14561:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:18"
																},
																"nativeSrc": "14561:73:18",
																"nodeType": "YulFunctionCall",
																"src": "14561:73:18"
															},
															"nativeSrc": "14561:73:18",
															"nodeType": "YulExpressionStatement",
															"src": "14561:73:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13977:664:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14127:9:18",
														"nodeType": "YulTypedName",
														"src": "14127:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14139:6:18",
														"nodeType": "YulTypedName",
														"src": "14139:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14147:6:18",
														"nodeType": "YulTypedName",
														"src": "14147:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14155:6:18",
														"nodeType": "YulTypedName",
														"src": "14155:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14163:6:18",
														"nodeType": "YulTypedName",
														"src": "14163:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14171:6:18",
														"nodeType": "YulTypedName",
														"src": "14171:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14182:4:18",
														"nodeType": "YulTypedName",
														"src": "14182:4:18",
														"type": ""
													}
												],
												"src": "13977:664:18"
											},
											{
												"body": {
													"nativeSrc": "14825:367:18",
													"nodeType": "YulBlock",
													"src": "14825:367:18",
													"statements": [
														{
															"nativeSrc": "14835:27:18",
															"nodeType": "YulAssignment",
															"src": "14835:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14847:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14858:3:18",
																		"nodeType": "YulLiteral",
																		"src": "14858:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14843:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:18"
																},
																"nativeSrc": "14843:19:18",
																"nodeType": "YulFunctionCall",
																"src": "14843:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14835:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14916:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14916:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14929:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14929:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14940:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14940:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14925:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:18"
																		},
																		"nativeSrc": "14925:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14925:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14872:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14872:43:18"
																},
																"nativeSrc": "14872:71:18",
																"nodeType": "YulFunctionCall",
																"src": "14872:71:18"
															},
															"nativeSrc": "14872:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "14872:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14993:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14993:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15006:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15017:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15002:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:18"
																		},
																		"nativeSrc": "15002:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "14953:39:18",
																	"nodeType": "YulIdentifier",
																	"src": "14953:39:18"
																},
																"nativeSrc": "14953:68:18",
																"nodeType": "YulFunctionCall",
																"src": "14953:68:18"
															},
															"nativeSrc": "14953:68:18",
															"nodeType": "YulExpressionStatement",
															"src": "14953:68:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15075:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15075:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15088:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15088:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15099:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15099:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15084:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15084:3:18"
																		},
																		"nativeSrc": "15084:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15084:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15031:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15031:43:18"
																},
																"nativeSrc": "15031:72:18",
																"nodeType": "YulFunctionCall",
																"src": "15031:72:18"
															},
															"nativeSrc": "15031:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "15031:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15157:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15157:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15170:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15170:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15181:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15181:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15166:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15166:3:18"
																		},
																		"nativeSrc": "15166:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15166:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15113:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15113:43:18"
																},
																"nativeSrc": "15113:72:18",
																"nodeType": "YulFunctionCall",
																"src": "15113:72:18"
															},
															"nativeSrc": "15113:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "15113:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "14647:545:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14773:9:18",
														"nodeType": "YulTypedName",
														"src": "14773:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14785:6:18",
														"nodeType": "YulTypedName",
														"src": "14785:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14793:6:18",
														"nodeType": "YulTypedName",
														"src": "14793:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14801:6:18",
														"nodeType": "YulTypedName",
														"src": "14801:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14809:6:18",
														"nodeType": "YulTypedName",
														"src": "14809:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14820:4:18",
														"nodeType": "YulTypedName",
														"src": "14820:4:18",
														"type": ""
													}
												],
												"src": "14647:545:18"
											},
											{
												"body": {
													"nativeSrc": "15226:152:18",
													"nodeType": "YulBlock",
													"src": "15226:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15243:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15243:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:77:18",
																		"nodeType": "YulLiteral",
																		"src": "15246:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15236:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:18"
																},
																"nativeSrc": "15236:88:18",
																"nodeType": "YulFunctionCall",
																"src": "15236:88:18"
															},
															"nativeSrc": "15236:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "15236:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15340:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15340:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15343:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15343:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15333:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15333:6:18"
																},
																"nativeSrc": "15333:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15333:15:18"
															},
															"nativeSrc": "15333:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15333:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15364:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15364:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15367:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15357:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:18"
																},
																"nativeSrc": "15357:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15357:15:18"
															},
															"nativeSrc": "15357:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15357:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15198:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "15198:180:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2019": [
									{
										"length": 32,
										"start": 2391
									}
								],
								"2021": [
									{
										"length": 32,
										"start": 2350
									}
								],
								"2023": [
									{
										"length": 32,
										"start": 2264
									}
								],
								"2025": [
									{
										"length": 32,
										"start": 3821
									}
								],
								"2027": [
									{
										"length": 32,
										"start": 3854
									}
								],
								"2030": [
									{
										"length": 32,
										"start": 2522
									}
								],
								"2033": [
									{
										"length": 32,
										"start": 2581
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b411461022d578063a9059cbb1461024b578063d505accf1461027b578063dd62ed3e14610297576100cd565b806370a08231146101a95780637ecebe00146101d957806384b0196e14610209576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d5780633644e5151461018b575b5f80fd5b6100d96102c7565b6040516100e691906113de565b60405180910390f35b6101096004803603810190610104919061148f565b610357565b60405161011691906114e7565b60405180910390f35b610127610379565b604051610134919061150f565b60405180910390f35b61015760048036038101906101529190611528565b610382565b60405161016491906114e7565b60405180910390f35b6101756103b0565b6040516101829190611593565b60405180910390f35b6101936103b8565b6040516101a091906115c4565b60405180910390f35b6101c360048036038101906101be91906115dd565b6103c6565b6040516101d0919061150f565b60405180910390f35b6101f360048036038101906101ee91906115dd565b61040b565b604051610200919061150f565b60405180910390f35b61021161041c565b6040516102249796959493929190611708565b60405180910390f35b6102356104c1565b60405161024291906113de565b60405180910390f35b6102656004803603810190610260919061148f565b610551565b60405161027291906114e7565b60405180910390f35b610295600480360381019061029091906117de565b610573565b005b6102b160048036038101906102ac919061187b565b6106b8565b6040516102be919061150f565b60405180910390f35b6060600380546102d6906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610302906118e6565b801561034d5780601f106103245761010080835404028352916020019161034d565b820191905f5260205f20905b81548152906001019060200180831161033057829003601f168201915b5050505050905090565b5f8061036161073a565b905061036e818585610741565b600191505092915050565b5f600254905090565b5f8061038c61073a565b9050610399858285610753565b6103a48585856107e5565b60019150509392505050565b5f6012905090565b5f6103c16108d5565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f6104158261098b565b9050919050565b5f6060805f805f606061042d6109d1565b610435610a0c565b46305f801b5f67ffffffffffffffff81111561045457610453611916565b5b6040519080825280602002602001820160405280156104825781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6060600480546104d0906118e6565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc906118e6565b80156105475780601f1061051e57610100808354040283529160200191610547565b820191905f5260205f20905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b5f8061055b61073a565b90506105688185856107e5565b600191505092915050565b834211156105b857836040517f627913020000000000000000000000000000000000000000000000000000000081526004016105af919061150f565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105e68c610a47565b896040516020016105fc96959493929190611943565b6040516020818303038152906040528051906020012090505f61061e82610a9a565b90505f61062d82878787610ab3565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106a157808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016106989291906119a2565b60405180910390fd5b6106ac8a8a8a610741565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61074e8383836001610ae1565b505050565b5f61075e84846106b8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107df57818110156107d0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107c7939291906119c9565b60405180910390fd5b6107de84848484035f610ae1565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610855575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161084c91906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108c5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108bc91906119fe565b60405180910390fd5b6108d0838383610cb0565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561095057507f000000000000000000000000000000000000000000000000000000000000000046145b1561097d577f00000000000000000000000000000000000000000000000000000000000000009050610988565b610985610ec9565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610a0760057f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b6060610a4260067f0000000000000000000000000000000000000000000000000000000000000000610f5e90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610aac610aa66108d5565b8361100b565b9050919050565b5f805f80610ac38888888861104b565b925092509250610ad38282611132565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b51575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4891906119fe565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc1575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bb891906119fe565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610caa578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca1919061150f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d00578060025f828254610cf49190611a44565b92505081905550610dce565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d89578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d80939291906119c9565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e15578060025f8282540392505081905550610e5f565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebc919061150f565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610f43959493929190611a77565b60405160208183030381529060405280519060200120905090565b606060ff5f1b8314610f7a57610f7383611294565b9050611005565b818054610f86906118e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb2906118e6565b8015610ffd5780601f10610fd457610100808354040283529160200191610ffd565b820191905f5260205f20905b815481529060010190602001808311610fe057829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611087575f600385925092509250611128565b5f6001888888886040515f81526020016040526040516110aa9493929190611ac8565b6020604051602081039080840390855afa1580156110ca573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361111b575f60015f801b93509350935050611128565b805f805f1b935093509350505b9450945094915050565b5f600381111561114557611144611b0b565b5b82600381111561115857611157611b0b565b5b0315611290576001600381111561117257611171611b0b565b5b82600381111561118557611184611b0b565b5b036111bc576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156111d0576111cf611b0b565b5b8260038111156111e3576111e2611b0b565b5b0361122757805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161121e919061150f565b60405180910390fd5b60038081111561123a57611239611b0b565b5b82600381111561124d5761124c611b0b565b5b0361128f57806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161128691906115c4565b60405180910390fd5b5b5050565b60605f6112a083611306565b90505f602067ffffffffffffffff8111156112be576112bd611916565b5b6040519080825280601f01601f1916602001820160405280156112f05781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f81111561134b576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561138b578082015181840152602081019050611370565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113b082611354565b6113ba818561135e565b93506113ca81856020860161136e565b6113d381611396565b840191505092915050565b5f6020820190508181035f8301526113f681846113a6565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61142b82611402565b9050919050565b61143b81611421565b8114611445575f80fd5b50565b5f8135905061145681611432565b92915050565b5f819050919050565b61146e8161145c565b8114611478575f80fd5b50565b5f8135905061148981611465565b92915050565b5f80604083850312156114a5576114a46113fe565b5b5f6114b285828601611448565b92505060206114c38582860161147b565b9150509250929050565b5f8115159050919050565b6114e1816114cd565b82525050565b5f6020820190506114fa5f8301846114d8565b92915050565b6115098161145c565b82525050565b5f6020820190506115225f830184611500565b92915050565b5f805f6060848603121561153f5761153e6113fe565b5b5f61154c86828701611448565b935050602061155d86828701611448565b925050604061156e8682870161147b565b9150509250925092565b5f60ff82169050919050565b61158d81611578565b82525050565b5f6020820190506115a65f830184611584565b92915050565b5f819050919050565b6115be816115ac565b82525050565b5f6020820190506115d75f8301846115b5565b92915050565b5f602082840312156115f2576115f16113fe565b5b5f6115ff84828501611448565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61163c81611608565b82525050565b61164b81611421565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116838161145c565b82525050565b5f611694838361167a565b60208301905092915050565b5f602082019050919050565b5f6116b682611651565b6116c0818561165b565b93506116cb8361166b565b805f5b838110156116fb5781516116e28882611689565b97506116ed836116a0565b9250506001810190506116ce565b5085935050505092915050565b5f60e08201905061171b5f83018a611633565b818103602083015261172d81896113a6565b9050818103604083015261174181886113a6565b90506117506060830187611500565b61175d6080830186611642565b61176a60a08301856115b5565b81810360c083015261177c81846116ac565b905098975050505050505050565b61179381611578565b811461179d575f80fd5b50565b5f813590506117ae8161178a565b92915050565b6117bd816115ac565b81146117c7575f80fd5b50565b5f813590506117d8816117b4565b92915050565b5f805f805f805f60e0888a0312156117f9576117f86113fe565b5b5f6118068a828b01611448565b97505060206118178a828b01611448565b96505060406118288a828b0161147b565b95505060606118398a828b0161147b565b945050608061184a8a828b016117a0565b93505060a061185b8a828b016117ca565b92505060c061186c8a828b016117ca565b91505092959891949750929550565b5f8060408385031215611891576118906113fe565b5b5f61189e85828601611448565b92505060206118af85828601611448565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806118fd57607f821691505b6020821081036119105761190f6118b9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c0820190506119565f8301896115b5565b6119636020830188611642565b6119706040830187611642565b61197d6060830186611500565b61198a6080830185611500565b61199760a0830184611500565b979650505050505050565b5f6040820190506119b55f830185611642565b6119c26020830184611642565b9392505050565b5f6060820190506119dc5f830186611642565b6119e96020830185611500565b6119f66040830184611500565b949350505050565b5f602082019050611a115f830184611642565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4e8261145c565b9150611a598361145c565b9250828201905080821115611a7157611a70611a17565b5b92915050565b5f60a082019050611a8a5f8301886115b5565b611a9760208301876115b5565b611aa460408301866115b5565b611ab16060830185611500565b611abe6080830184611642565b9695505050505050565b5f608082019050611adb5f8301876115b5565b611ae86020830186611584565b611af560408301856115b5565b611b0260608301846115b5565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220a3b651deeede408756b2dd895a28adcb1cc2b656366aae713ce89fd739b1b30764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x573 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x187B JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D6 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x302 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x34D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x324 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x34D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x330 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x361 PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x36E DUP2 DUP6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x38C PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP6 DUP3 DUP6 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x3A4 DUP6 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3C1 PUSH2 0x8D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x415 DUP3 PUSH2 0x98B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x42D PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0x435 PUSH2 0xA0C JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x482 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4D0 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FC SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x547 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x547 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55B PUSH2 0x73A JUMP JUMPDEST SWAP1 POP PUSH2 0x568 DUP2 DUP6 DUP6 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x5B8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x5E6 DUP13 PUSH2 0xA47 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5FC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x61E DUP3 PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x62D DUP3 DUP8 DUP8 DUP8 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A1 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AC DUP11 DUP11 DUP11 PUSH2 0x741 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x74E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75E DUP5 DUP5 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7D0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x855 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84C SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D0 DUP4 DUP4 DUP4 PUSH2 0xCB0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x97D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x988 JUMP JUMPDEST PUSH2 0x985 PUSH2 0xEC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA07 PUSH1 0x5 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA42 PUSH1 0x6 PUSH32 0x0 PUSH2 0xF5E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAAC PUSH2 0xAA6 PUSH2 0x8D5 JUMP JUMPDEST DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xAC3 DUP9 DUP9 DUP9 DUP9 PUSH2 0x104B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xAD3 DUP3 DUP3 PUSH2 0x1132 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB51 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x19FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD00 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDCE JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD89 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD80 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE15 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5F JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF43 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xF7A JUMPI PUSH2 0xF73 DUP4 PUSH2 0x1294 JUMP JUMPDEST SWAP1 POP PUSH2 0x1005 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xF86 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFB2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFFD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFD4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFFD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFE0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1087 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1128 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111B JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1128 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1290 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x1184 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x11CF PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11E3 JUMPI PUSH2 0x11E2 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1227 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x150F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x123A JUMPI PUSH2 0x1239 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST SUB PUSH2 0x128F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x12A0 DUP4 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH2 0x12BD PUSH2 0x1916 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x138B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1370 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13B0 DUP3 PUSH2 0x1354 JUMP JUMPDEST PUSH2 0x13BA DUP2 DUP6 PUSH2 0x135E JUMP JUMPDEST SWAP4 POP PUSH2 0x13CA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x136E JUMP JUMPDEST PUSH2 0x13D3 DUP2 PUSH2 0x1396 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F6 DUP2 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x142B DUP3 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x143B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP2 EQ PUSH2 0x1445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1456 DUP2 PUSH2 0x1432 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH2 0x145C JUMP JUMPDEST DUP2 EQ PUSH2 0x1478 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C3 DUP6 DUP3 DUP7 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E1 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14FA PUSH0 DUP4 ADD DUP5 PUSH2 0x14D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1509 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x155D DUP7 DUP3 DUP8 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x156E DUP7 DUP3 DUP8 ADD PUSH2 0x147B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15F2 JUMPI PUSH2 0x15F1 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FF DUP5 DUP3 DUP6 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x163C DUP2 PUSH2 0x1608 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x164B DUP2 PUSH2 0x1421 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1683 DUP2 PUSH2 0x145C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP4 DUP4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B6 DUP3 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x16C0 DUP2 DUP6 PUSH2 0x165B JUMP JUMPDEST SWAP4 POP PUSH2 0x16CB DUP4 PUSH2 0x166B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16FB JUMPI DUP2 MLOAD PUSH2 0x16E2 DUP9 DUP3 PUSH2 0x1689 JUMP JUMPDEST SWAP8 POP PUSH2 0x16ED DUP4 PUSH2 0x16A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x16CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH0 DUP4 ADD DUP11 PUSH2 0x1633 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x172D DUP2 DUP10 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 DUP9 PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1750 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x175D PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x176A PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 DUP5 PUSH2 0x16AC JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1578 JUMP JUMPDEST DUP2 EQ PUSH2 0x179D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AE DUP2 PUSH2 0x178A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x15AC JUMP JUMPDEST DUP2 EQ PUSH2 0x17C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D8 DUP2 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x17F9 JUMPI PUSH2 0x17F8 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1806 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1817 DUP11 DUP3 DUP12 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1828 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1839 DUP11 DUP3 DUP12 ADD PUSH2 0x147B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x184A DUP11 DUP3 DUP12 ADD PUSH2 0x17A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x185B DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x186C DUP11 DUP3 DUP12 ADD PUSH2 0x17CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x189E DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AF DUP6 DUP3 DUP7 ADD PUSH2 0x1448 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1910 JUMPI PUSH2 0x190F PUSH2 0x18B9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1956 PUSH0 DUP4 ADD DUP10 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1963 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x1970 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x197D PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x198A PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1997 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19B5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19C2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP7 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x19E9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x19F6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1500 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH0 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A59 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A70 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1A8A PUSH0 DUP4 ADD DUP9 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AB1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x1ABE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1642 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ADB PUSH0 DUP4 ADD DUP8 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1AE8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1584 JUMP JUMPDEST PUSH2 0x1AF5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB6 MLOAD 0xDE 0xEE 0xDE BLOCKHASH DUP8 JUMP 0xB2 0xDD DUP10 GAS 0x28 0xAD 0xCB SHR 0xC2 0xB6 JUMP CALLDATASIZE PUSH11 0xAE713CE89FD739B1B30764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "200:189:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:13;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:4:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:4:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:13:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:4:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:13:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;538:107:8:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:13:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:8:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:13:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:12:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:13:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:9:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:14:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:12:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:9:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:118::-;8949:22;8965:5;8949:22;:::i;:::-;8942:5;8939:33;8929:61;;8986:1;8983;8976:12;8929:61;8878:118;:::o;9002:135::-;9046:5;9084:6;9071:20;9062:29;;9100:31;9125:5;9100:31;:::i;:::-;9002:135;;;;:::o;9143:122::-;9216:24;9234:5;9216:24;:::i;:::-;9209:5;9206:35;9196:63;;9255:1;9252;9245:12;9196:63;9143:122;:::o;9271:139::-;9317:5;9355:6;9342:20;9333:29;;9371:33;9398:5;9371:33;:::i;:::-;9271:139;;;;:::o;9416:1199::-;9527:6;9535;9543;9551;9559;9567;9575;9624:3;9612:9;9603:7;9599:23;9595:33;9592:120;;;9631:79;;:::i;:::-;9592:120;9751:1;9776:53;9821:7;9812:6;9801:9;9797:22;9776:53;:::i;:::-;9766:63;;9722:117;9878:2;9904:53;9949:7;9940:6;9929:9;9925:22;9904:53;:::i;:::-;9894:63;;9849:118;10006:2;10032:53;10077:7;10068:6;10057:9;10053:22;10032:53;:::i;:::-;10022:63;;9977:118;10134:2;10160:53;10205:7;10196:6;10185:9;10181:22;10160:53;:::i;:::-;10150:63;;10105:118;10262:3;10289:51;10332:7;10323:6;10312:9;10308:22;10289:51;:::i;:::-;10279:61;;10233:117;10389:3;10416:53;10461:7;10452:6;10441:9;10437:22;10416:53;:::i;:::-;10406:63;;10360:119;10518:3;10545:53;10590:7;10581:6;10570:9;10566:22;10545:53;:::i;:::-;10535:63;;10489:119;9416:1199;;;;;;;;;;:::o;10621:474::-;10689:6;10697;10746:2;10734:9;10725:7;10721:23;10717:32;10714:119;;;10752:79;;:::i;:::-;10714:119;10872:1;10897:53;10942:7;10933:6;10922:9;10918:22;10897:53;:::i;:::-;10887:63;;10843:117;10999:2;11025:53;11070:7;11061:6;11050:9;11046:22;11025:53;:::i;:::-;11015:63;;10970:118;10621:474;;;;;:::o;11101:180::-;11149:77;11146:1;11139:88;11246:4;11243:1;11236:15;11270:4;11267:1;11260:15;11287:320;11331:6;11368:1;11362:4;11358:12;11348:22;;11415:1;11409:4;11405:12;11436:18;11426:81;;11492:4;11484:6;11480:17;11470:27;;11426:81;11554:2;11546:6;11543:14;11523:18;11520:38;11517:84;;11573:18;;:::i;:::-;11517:84;11338:269;11287:320;;;:::o;11613:180::-;11661:77;11658:1;11651:88;11758:4;11755:1;11748:15;11782:4;11779:1;11772:15;11799:775;12032:4;12070:3;12059:9;12055:19;12047:27;;12084:71;12152:1;12141:9;12137:17;12128:6;12084:71;:::i;:::-;12165:72;12233:2;12222:9;12218:18;12209:6;12165:72;:::i;:::-;12247;12315:2;12304:9;12300:18;12291:6;12247:72;:::i;:::-;12329;12397:2;12386:9;12382:18;12373:6;12329:72;:::i;:::-;12411:73;12479:3;12468:9;12464:19;12455:6;12411:73;:::i;:::-;12494;12562:3;12551:9;12547:19;12538:6;12494:73;:::i;:::-;11799:775;;;;;;;;;:::o;12580:332::-;12701:4;12739:2;12728:9;12724:18;12716:26;;12752:71;12820:1;12809:9;12805:17;12796:6;12752:71;:::i;:::-;12833:72;12901:2;12890:9;12886:18;12877:6;12833:72;:::i;:::-;12580:332;;;;;:::o;12918:442::-;13067:4;13105:2;13094:9;13090:18;13082:26;;13118:71;13186:1;13175:9;13171:17;13162:6;13118:71;:::i;:::-;13199:72;13267:2;13256:9;13252:18;13243:6;13199:72;:::i;:::-;13281;13349:2;13338:9;13334:18;13325:6;13281:72;:::i;:::-;12918:442;;;;;;:::o;13366:222::-;13459:4;13497:2;13486:9;13482:18;13474:26;;13510:71;13578:1;13567:9;13563:17;13554:6;13510:71;:::i;:::-;13366:222;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1404400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "427",
								"eip712Domain()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "160"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 387,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 387,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 252,
									"end": 387,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "E"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 4,
									"value": "4B6E6F774C65646765546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4B6E6F774C65646765546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4B544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 13
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 337,
									"end": 380,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 343,
									"end": 353,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 369,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 369,
									"end": 377,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 377,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 377,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 369,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 369,
									"end": 379,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 369,
									"end": 379,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 369,
									"end": 379,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 369,
									"end": 379,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 363,
									"end": 365,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "A"
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 363,
									"end": 379,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 363,
									"end": 379,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 355,
									"end": 360,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "2710"
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 355,
									"end": 379,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 337,
									"end": 342,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 337,
									"end": 342,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 342,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 337,
									"end": 380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 337,
									"end": 380,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 337,
									"end": 380,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 337,
									"end": 380,
									"modifierDepth": 2,
									"name": "tag",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 337,
									"end": 380,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 13,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 13
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 9,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "108"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "66"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 18,
									"value": "108"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 18,
									"value": "114"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 18,
									"value": "115"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "120"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "121"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 18,
									"value": "121"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 18,
									"value": "120"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 18,
									"value": "119"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 18,
									"value": "124"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "125"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "126"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "75"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 18,
									"value": "126"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 18,
									"value": "125"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "129"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 18,
									"value": "129"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "130"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 18,
									"value": "130"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "132"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "134"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "135"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 18,
									"value": "135"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "132"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "134"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "137"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "138"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 18,
									"value": "138"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "139"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 18,
									"value": "139"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "140"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "140"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "141"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "142"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 18,
									"value": "142"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 18,
									"value": "141"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 18,
									"value": "137"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "145"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 18,
									"value": "145"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "147"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 18,
									"value": "147"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "149"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 18,
									"value": "149"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "150"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "151"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 18,
									"value": "151"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 18,
									"value": "150"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "152"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "67"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 18,
									"value": "152"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "153"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 18,
									"value": "153"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "155"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "156"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 18,
									"value": "156"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "157"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 18,
									"value": "157"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "154"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 18,
									"value": "155"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "158"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "158"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "159"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "161"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "159"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "161"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "162"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "163"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "82"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 18,
									"value": "163"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 18,
									"value": "162"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 18,
									"value": "154"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 18,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 18,
									"value": "167"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "169"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "170"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "171"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 18,
									"value": "171"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 18,
									"value": "170"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "172"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 18,
									"value": "172"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "173"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "85"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 18,
									"value": "173"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "167"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 18,
									"value": "169"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "175"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 18,
									"value": "175"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "176"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 18,
									"value": "176"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "178"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "179"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "177"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 18,
									"value": "178"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 18,
									"value": "179"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 18,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "180"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "181"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 18,
									"value": "181"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 18,
									"value": "180"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "182"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "183"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 18,
									"value": "183"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 18,
									"value": "182"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 18,
									"value": "177"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 18,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 18,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "184"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "185"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "186"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 18,
									"value": "186"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 18,
									"value": "185"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 18,
									"value": "184"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "187"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 18,
									"value": "187"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "188"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "189"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 18,
									"value": "189"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 18,
									"value": "188"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 18,
									"value": "174"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "tag",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7496,
									"end": 7503,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7536,
									"end": 7540,
									"name": "PUSH",
									"source": 18,
									"value": "FF"
								},
								{
									"begin": 7529,
									"end": 7534,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7525,
									"end": 7541,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7514,
									"end": 7541,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7461,
									"end": 7547,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7461,
									"end": 7547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7611,
									"end": 7616,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "192"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 7635,
									"end": 7658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "tag",
									"source": 18,
									"value": "192"
								},
								{
									"begin": 7635,
									"end": 7658,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7627,
									"end": 7658,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "193"
								},
								{
									"begin": 7695,
									"end": 7703,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 7679,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "tag",
									"source": 18,
									"value": "193"
								},
								{
									"begin": 7679,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7667,
									"end": 7704,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "194"
								},
								{
									"begin": 7760,
									"end": 7826,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7750,
									"end": 7758,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7744,
									"end": 7748,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "87"
								},
								{
									"begin": 7723,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "tag",
									"source": 18,
									"value": "194"
								},
								{
									"begin": 7723,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7714,
									"end": 7827,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7553,
									"end": 7834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7880,
									"end": 7887,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "196"
								},
								{
									"begin": 7921,
									"end": 7922,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 7903,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "tag",
									"source": 18,
									"value": "196"
								},
								{
									"begin": 7903,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7898,
									"end": 7923,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "197"
								},
								{
									"begin": 7955,
									"end": 7956,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 7937,
									"end": 7957,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "tag",
									"source": 18,
									"value": "197"
								},
								{
									"begin": 7937,
									"end": 7957,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7932,
									"end": 7957,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7992,
									"end": 7993,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 7985,
									"end": 7994,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "198"
								},
								{
									"begin": 8032,
									"end": 8043,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 8014,
									"end": 8044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "tag",
									"source": 18,
									"value": "198"
								},
								{
									"begin": 8014,
									"end": 8044,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 8003,
									"end": 8044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8193,
									"end": 8194,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8184,
									"end": 8191,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 8174,
									"end": 8196,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 8154,
									"end": 8155,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 8147,
									"end": 8156,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 8127,
									"end": 8210,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "199"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "200"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 8223,
									"end": 8241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "tag",
									"source": 18,
									"value": "200"
								},
								{
									"begin": 8223,
									"end": 8241,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "tag",
									"source": 18,
									"value": "199"
								},
								{
									"begin": 8104,
									"end": 8243,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 7888,
									"end": 8250,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7840,
									"end": 8250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8293,
									"end": 8300,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 8322,
									"end": 8327,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8311,
									"end": 8327,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8311,
									"end": 8327,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8256,
									"end": 8333,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8256,
									"end": 8333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "203"
								},
								{
									"begin": 8444,
									"end": 8449,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 8426,
									"end": 8450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "tag",
									"source": 18,
									"value": "203"
								},
								{
									"begin": 8426,
									"end": 8450,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8421,
									"end": 8424,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8414,
									"end": 8451,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8339,
									"end": 8457,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8339,
									"end": 8457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "205"
								},
								{
									"begin": 8568,
									"end": 8573,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 8550,
									"end": 8574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "tag",
									"source": 18,
									"value": "205"
								},
								{
									"begin": 8550,
									"end": 8574,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8545,
									"end": 8548,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8538,
									"end": 8575,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8463,
									"end": 8581,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8463,
									"end": 8581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8624,
									"end": 8631,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 8664,
									"end": 8706,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8657,
									"end": 8662,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8653,
									"end": 8707,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 8642,
									"end": 8707,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8642,
									"end": 8707,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8587,
									"end": 8713,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8587,
									"end": 8713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8756,
									"end": 8763,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "208"
								},
								{
									"begin": 8803,
									"end": 8808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 8785,
									"end": 8809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "tag",
									"source": 18,
									"value": "208"
								},
								{
									"begin": 8785,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8774,
									"end": 8809,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8774,
									"end": 8809,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 8719,
									"end": 8815,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8719,
									"end": 8815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "tag",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "210"
								},
								{
									"begin": 8926,
									"end": 8931,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 8908,
									"end": 8932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "tag",
									"source": 18,
									"value": "210"
								},
								{
									"begin": 8908,
									"end": 8932,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8903,
									"end": 8906,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 8896,
									"end": 8933,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8821,
									"end": 8939,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8821,
									"end": 8939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9150,
									"end": 9154,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9188,
									"end": 9191,
									"name": "PUSH",
									"source": 18,
									"value": "A0"
								},
								{
									"begin": 9177,
									"end": 9186,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9173,
									"end": 9192,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9165,
									"end": 9192,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 9165,
									"end": 9192,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "212"
								},
								{
									"begin": 9270,
									"end": 9271,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9259,
									"end": 9268,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9255,
									"end": 9272,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9246,
									"end": 9252,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 9202,
									"end": 9273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "tag",
									"source": 18,
									"value": "212"
								},
								{
									"begin": 9202,
									"end": 9273,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "213"
								},
								{
									"begin": 9351,
									"end": 9353,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 9340,
									"end": 9349,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9336,
									"end": 9354,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9327,
									"end": 9333,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 9283,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "tag",
									"source": 18,
									"value": "213"
								},
								{
									"begin": 9283,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "214"
								},
								{
									"begin": 9433,
									"end": 9435,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 9422,
									"end": 9431,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9418,
									"end": 9436,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9409,
									"end": 9415,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 9365,
									"end": 9437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "tag",
									"source": 18,
									"value": "214"
								},
								{
									"begin": 9365,
									"end": 9437,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "215"
								},
								{
									"begin": 9515,
									"end": 9517,
									"name": "PUSH",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 9504,
									"end": 9513,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9491,
									"end": 9497,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 9447,
									"end": 9519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "tag",
									"source": 18,
									"value": "215"
								},
								{
									"begin": 9447,
									"end": 9519,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "216"
								},
								{
									"begin": 9597,
									"end": 9600,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 9586,
									"end": 9595,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9582,
									"end": 9601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9573,
									"end": 9579,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 9529,
									"end": 9602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "tag",
									"source": 18,
									"value": "216"
								},
								{
									"begin": 9529,
									"end": 9602,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "SWAP7",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 8945,
									"end": 9609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9708,
									"end": 9712,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9746,
									"end": 9748,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 9735,
									"end": 9744,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9731,
									"end": 9749,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9723,
									"end": 9749,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 9723,
									"end": 9749,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "218"
								},
								{
									"begin": 9827,
									"end": 9828,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9816,
									"end": 9825,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 9812,
									"end": 9829,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9803,
									"end": 9809,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 9759,
									"end": 9830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "tag",
									"source": 18,
									"value": "218"
								},
								{
									"begin": 9759,
									"end": 9830,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9615,
									"end": 9837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "tag",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 9927,
									"end": 9938,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 9961,
									"end": 9967,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9956,
									"end": 9959,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9949,
									"end": 9968,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 10001,
									"end": 10005,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 9996,
									"end": 9999,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 9992,
									"end": 10006,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 9977,
									"end": 10006,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 9977,
									"end": 10006,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 9843,
									"end": 10012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10018,
									"end": 10264,
									"name": "tag",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 10018,
									"end": 10264,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10099,
									"end": 10100,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "tag",
									"source": 18,
									"value": "221"
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10123,
									"end": 10129,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 10120,
									"end": 10121,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10117,
									"end": 10130,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "223"
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 10208,
									"end": 10209,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 10203,
									"end": 10206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 10199,
									"end": 10210,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10193,
									"end": 10211,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 10189,
									"end": 10190,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10184,
									"end": 10187,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 10180,
									"end": 10191,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10173,
									"end": 10212,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 10145,
									"end": 10147,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 10142,
									"end": 10143,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10138,
									"end": 10148,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10133,
									"end": 10148,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 10133,
									"end": 10148,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "221"
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "tag",
									"source": 18,
									"value": "223"
								},
								{
									"begin": 10109,
									"end": 10222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10256,
									"end": 10257,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10247,
									"end": 10253,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 10242,
									"end": 10245,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 10238,
									"end": 10254,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10231,
									"end": 10258,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 10080,
									"end": 10264,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10018,
									"end": 10264,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10018,
									"end": 10264,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10018,
									"end": 10264,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10018,
									"end": 10264,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10270,
									"end": 10372,
									"name": "tag",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 10270,
									"end": 10372,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10311,
									"end": 10317,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10362,
									"end": 10364,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 10358,
									"end": 10365,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 10353,
									"end": 10355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 10346,
									"end": 10351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 10342,
									"end": 10356,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10338,
									"end": 10366,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 10328,
									"end": 10366,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 10328,
									"end": 10366,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10270,
									"end": 10372,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 10270,
									"end": 10372,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 10270,
									"end": 10372,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10270,
									"end": 10372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "tag",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10466,
									"end": 10469,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10494,
									"end": 10533,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "226"
								},
								{
									"begin": 10527,
									"end": 10532,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 10494,
									"end": 10533,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 10494,
									"end": 10533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10494,
									"end": 10533,
									"name": "tag",
									"source": 18,
									"value": "226"
								},
								{
									"begin": 10494,
									"end": 10533,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10549,
									"end": 10620,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "227"
								},
								{
									"begin": 10613,
									"end": 10619,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10608,
									"end": 10611,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 10549,
									"end": 10620,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 10549,
									"end": 10620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10549,
									"end": 10620,
									"name": "tag",
									"source": 18,
									"value": "227"
								},
								{
									"begin": 10549,
									"end": 10620,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10542,
									"end": 10620,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 10542,
									"end": 10620,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10629,
									"end": 10694,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "228"
								},
								{
									"begin": 10687,
									"end": 10693,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10682,
									"end": 10685,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 10675,
									"end": 10679,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 10668,
									"end": 10673,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 10664,
									"end": 10680,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10629,
									"end": 10694,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 10629,
									"end": 10694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10629,
									"end": 10694,
									"name": "tag",
									"source": 18,
									"value": "228"
								},
								{
									"begin": 10629,
									"end": 10694,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10719,
									"end": 10748,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "229"
								},
								{
									"begin": 10741,
									"end": 10747,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10719,
									"end": 10748,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 10719,
									"end": 10748,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10719,
									"end": 10748,
									"name": "tag",
									"source": 18,
									"value": "229"
								},
								{
									"begin": 10719,
									"end": 10748,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10714,
									"end": 10717,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 10710,
									"end": 10749,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10703,
									"end": 10749,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 10703,
									"end": 10749,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10470,
									"end": 10755,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10378,
									"end": 10755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10874,
									"end": 10878,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10912,
									"end": 10914,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 10901,
									"end": 10910,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 10897,
									"end": 10915,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10889,
									"end": 10915,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 10889,
									"end": 10915,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10961,
									"end": 10970,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10955,
									"end": 10959,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 10951,
									"end": 10971,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 10947,
									"end": 10948,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 10936,
									"end": 10945,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 10932,
									"end": 10949,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 10925,
									"end": 10972,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 10989,
									"end": 11067,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "231"
								},
								{
									"begin": 11062,
									"end": 11066,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 11053,
									"end": 11059,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 10989,
									"end": 11067,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 10989,
									"end": 11067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 10989,
									"end": 11067,
									"name": "tag",
									"source": 18,
									"value": "231"
								},
								{
									"begin": 10989,
									"end": 11067,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 10981,
									"end": 11067,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 10981,
									"end": 11067,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 10761,
									"end": 11074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11080,
									"end": 11178,
									"name": "tag",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 11080,
									"end": 11178,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11131,
									"end": 11137,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 11165,
									"end": 11170,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 11159,
									"end": 11171,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 11149,
									"end": 11171,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11149,
									"end": 11171,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11080,
									"end": 11178,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 11080,
									"end": 11178,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11080,
									"end": 11178,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11080,
									"end": 11178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11184,
									"end": 11300,
									"name": "tag",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 11184,
									"end": 11300,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11235,
									"end": 11239,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 11258,
									"end": 11261,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 11250,
									"end": 11261,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11250,
									"end": 11261,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11288,
									"end": 11292,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 11283,
									"end": 11286,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 11279,
									"end": 11293,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 11271,
									"end": 11293,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11271,
									"end": 11293,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11184,
									"end": 11300,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 11184,
									"end": 11300,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11184,
									"end": 11300,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11184,
									"end": 11300,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11306,
									"end": 11460,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 11306,
									"end": 11460,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11349,
									"end": 11360,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 11385,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "235"
								},
								{
									"begin": 11409,
									"end": 11412,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 11403,
									"end": 11413,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 11385,
									"end": 11414,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 11385,
									"end": 11414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11385,
									"end": 11414,
									"name": "tag",
									"source": 18,
									"value": "235"
								},
								{
									"begin": 11385,
									"end": 11414,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11448,
									"end": 11453,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 11424,
									"end": 11453,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 11424,
									"end": 11453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11361,
									"end": 11460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11306,
									"end": 11460,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 11306,
									"end": 11460,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11306,
									"end": 11460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11306,
									"end": 11460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11466,
									"end": 12060,
									"name": "tag",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 11466,
									"end": 12060,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11550,
									"end": 11555,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 11581,
									"end": 11619,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "237"
								},
								{
									"begin": 11613,
									"end": 11618,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 11581,
									"end": 11619,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "99"
								},
								{
									"begin": 11581,
									"end": 11619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11581,
									"end": 11619,
									"name": "tag",
									"source": 18,
									"value": "237"
								},
								{
									"begin": 11581,
									"end": 11619,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11644,
									"end": 11649,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 11671,
									"end": 11711,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "238"
								},
								{
									"begin": 11705,
									"end": 11710,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 11671,
									"end": 11711,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 11671,
									"end": 11711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11671,
									"end": 11711,
									"name": "tag",
									"source": 18,
									"value": "238"
								},
								{
									"begin": 11671,
									"end": 11711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11659,
									"end": 11711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11659,
									"end": 11711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11730,
									"end": 11765,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "239"
								},
								{
									"begin": 11756,
									"end": 11764,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 11730,
									"end": 11765,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 11730,
									"end": 11765,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11730,
									"end": 11765,
									"name": "tag",
									"source": 18,
									"value": "239"
								},
								{
									"begin": 11730,
									"end": 11765,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11721,
									"end": 11765,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 11721,
									"end": 11765,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11789,
									"end": 11791,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 11781,
									"end": 11787,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 11778,
									"end": 11792,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 11775,
									"end": 12053,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 11775,
									"end": 12053,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "240"
								},
								{
									"begin": 11775,
									"end": 12053,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 11860,
									"end": 12029,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "241"
								},
								{
									"begin": 11945,
									"end": 12011,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11915,
									"end": 11921,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 11911,
									"end": 11913,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 11907,
									"end": 11922,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 11904,
									"end": 11905,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 11900,
									"end": 11923,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 11860,
									"end": 12029,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "70"
								},
								{
									"begin": 11860,
									"end": 12029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 11860,
									"end": 12029,
									"name": "tag",
									"source": 18,
									"value": "241"
								},
								{
									"begin": 11860,
									"end": 12029,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11837,
									"end": 11842,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 11816,
									"end": 12043,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 11807,
									"end": 12043,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 11807,
									"end": 12043,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11775,
									"end": 12053,
									"name": "tag",
									"source": 18,
									"value": "240"
								},
								{
									"begin": 11775,
									"end": 12053,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 11556,
									"end": 12060,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11556,
									"end": 12060,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11466,
									"end": 12060,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 11466,
									"end": 12060,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 11466,
									"end": 12060,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 11466,
									"end": 12060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "tag",
									"source": 18,
									"value": "55"
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12106,
									"end": 12109,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12125,
									"end": 12145,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "243"
								},
								{
									"begin": 12143,
									"end": 12144,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12125,
									"end": 12145,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 12125,
									"end": 12145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12125,
									"end": 12145,
									"name": "tag",
									"source": 18,
									"value": "243"
								},
								{
									"begin": 12125,
									"end": 12145,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12120,
									"end": 12145,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 12120,
									"end": 12145,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12159,
									"end": 12179,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "244"
								},
								{
									"begin": 12177,
									"end": 12178,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12159,
									"end": 12179,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "72"
								},
								{
									"begin": 12159,
									"end": 12179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12159,
									"end": 12179,
									"name": "tag",
									"source": 18,
									"value": "244"
								},
								{
									"begin": 12159,
									"end": 12179,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12154,
									"end": 12179,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12154,
									"end": 12179,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12202,
									"end": 12203,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12199,
									"end": 12200,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12195,
									"end": 12204,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12188,
									"end": 12204,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12188,
									"end": 12204,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12223,
									"end": 12226,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 12220,
									"end": 12221,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12217,
									"end": 12227,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 12250,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 12250,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "245"
								},
								{
									"begin": 12214,
									"end": 12250,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 12230,
									"end": 12248,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "246"
								},
								{
									"begin": 12230,
									"end": 12248,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 12230,
									"end": 12248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12230,
									"end": 12248,
									"name": "tag",
									"source": 18,
									"value": "246"
								},
								{
									"begin": 12230,
									"end": 12248,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12214,
									"end": 12250,
									"name": "tag",
									"source": 18,
									"value": "245"
								},
								{
									"begin": 12214,
									"end": 12250,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12066,
									"end": 12257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12412,
									"end": 12416,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12450,
									"end": 12452,
									"name": "PUSH",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 12439,
									"end": 12448,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12435,
									"end": 12453,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12427,
									"end": 12453,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12427,
									"end": 12453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12463,
									"end": 12534,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "248"
								},
								{
									"begin": 12531,
									"end": 12532,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12520,
									"end": 12529,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12516,
									"end": 12533,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12507,
									"end": 12513,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 12463,
									"end": 12534,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 12463,
									"end": 12534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12463,
									"end": 12534,
									"name": "tag",
									"source": 18,
									"value": "248"
								},
								{
									"begin": 12463,
									"end": 12534,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12544,
									"end": 12616,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "249"
								},
								{
									"begin": 12612,
									"end": 12614,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 12601,
									"end": 12610,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12597,
									"end": 12615,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12588,
									"end": 12594,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 12544,
									"end": 12616,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 12544,
									"end": 12616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12544,
									"end": 12616,
									"name": "tag",
									"source": 18,
									"value": "249"
								},
								{
									"begin": 12544,
									"end": 12616,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12626,
									"end": 12698,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "250"
								},
								{
									"begin": 12694,
									"end": 12696,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 12683,
									"end": 12692,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12679,
									"end": 12697,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12670,
									"end": 12676,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 12626,
									"end": 12698,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 12626,
									"end": 12698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12626,
									"end": 12698,
									"name": "tag",
									"source": 18,
									"value": "250"
								},
								{
									"begin": 12626,
									"end": 12698,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12263,
									"end": 12705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12804,
									"end": 12808,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12842,
									"end": 12844,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 12831,
									"end": 12840,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 12827,
									"end": 12845,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12819,
									"end": 12845,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 12819,
									"end": 12845,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12855,
									"end": 12926,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "252"
								},
								{
									"begin": 12923,
									"end": 12924,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 12912,
									"end": 12921,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 12908,
									"end": 12925,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 12899,
									"end": 12905,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 12855,
									"end": 12926,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 12855,
									"end": 12926,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 12855,
									"end": 12926,
									"name": "tag",
									"source": 18,
									"value": "252"
								},
								{
									"begin": 12855,
									"end": 12926,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 12711,
									"end": 12933,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 200,
									"end": 389,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "C0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "120"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2033"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2030"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2027"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2025"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2023"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2021"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "2019"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 200,
									"end": 389,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3b651deeede408756b2dd895a28adcb1cc2b656366aae713ce89fd739b1b30764736f6c63430008160033",
									".code": [
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "D505ACCF"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "7ECEBE00"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "84B0196E"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "3644E515"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 389,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 200,
											"end": 389,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2523,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 13
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 13,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1117,
											"name": "PUSH",
											"source": 4,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2068,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2017,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2122,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2178,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2258,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2314,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2023"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2021"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2019"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 538,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 617,
											"end": 638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 617,
											"end": 638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 538,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 538,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2030"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2033"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 759,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2025"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "2027"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 14,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 12,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 12,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 12,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 9,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 18,
											"value": "250"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "293"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 18,
											"value": "293"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 18,
											"value": "252"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 18,
											"value": "296"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "297"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "250"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 18,
											"value": "297"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "298"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 18,
											"value": "298"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "252"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 18,
											"value": "299"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "301"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 18,
											"value": "301"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 18,
											"value": "310"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "315"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 18,
											"value": "315"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 18,
											"value": "316"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "262"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 18,
											"value": "320"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 18,
											"value": "323"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 18,
											"value": "328"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 18,
											"value": "330"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 18,
											"value": "336"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 18,
											"value": "268"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "341"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "268"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 18,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 18,
											"value": "272"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "258"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 18,
											"value": "274"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 18,
											"value": "278"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "277"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 18,
											"value": "279"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "274"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "275"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "278"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "279"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "272"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "253"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "280"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "tag",
											"source": 18,
											"value": "281"
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 8965,
											"end": 8970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 8949,
											"end": 8971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 8949,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8942,
											"end": 8947,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8939,
											"end": 8972,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8986,
											"end": 8987,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8984,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8976,
											"end": 8988,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 8929,
											"end": 8990,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8878,
											"end": 8996,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8878,
											"end": 8996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9046,
											"end": 9051,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9071,
											"end": 9091,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9062,
											"end": 9091,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9062,
											"end": 9091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 9125,
											"end": 9130,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "281"
										},
										{
											"begin": 9100,
											"end": 9131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 9100,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9002,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "tag",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 9234,
											"end": 9239,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 9216,
											"end": 9240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 9216,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9209,
											"end": 9214,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9206,
											"end": 9241,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9245,
											"end": 9257,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 9196,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9143,
											"end": 9265,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9143,
											"end": 9265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "tag",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9317,
											"end": 9322,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9355,
											"end": 9361,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9342,
											"end": 9362,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9333,
											"end": 9362,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9333,
											"end": 9362,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 9398,
											"end": 9403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 9371,
											"end": 9404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 9371,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9271,
											"end": 9410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9527,
											"end": 9533,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9543,
											"end": 9549,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9559,
											"end": 9565,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9573,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9627,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9612,
											"end": 9621,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9603,
											"end": 9610,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 9599,
											"end": 9622,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9595,
											"end": 9628,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 9631,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 9631,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 9592,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 9821,
											"end": 9828,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 9812,
											"end": 9818,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9810,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 9797,
											"end": 9819,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 9776,
											"end": 9829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 9776,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9829,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 9766,
											"end": 9829,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9722,
											"end": 9839,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9878,
											"end": 9880,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 9949,
											"end": 9956,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 9940,
											"end": 9946,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9929,
											"end": 9938,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 9925,
											"end": 9947,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 9904,
											"end": 9957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 9904,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9894,
											"end": 9957,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 9894,
											"end": 9957,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9849,
											"end": 9967,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 10077,
											"end": 10084,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10068,
											"end": 10074,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10057,
											"end": 10066,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 10053,
											"end": 10075,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 10032,
											"end": 10085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 10032,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10022,
											"end": 10085,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 10022,
											"end": 10085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9977,
											"end": 10095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10134,
											"end": 10136,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 10205,
											"end": 10212,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10196,
											"end": 10202,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10185,
											"end": 10194,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 10181,
											"end": 10203,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "263"
										},
										{
											"begin": 10160,
											"end": 10213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 10160,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10150,
											"end": 10213,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10150,
											"end": 10213,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10105,
											"end": 10223,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10262,
											"end": 10265,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 10332,
											"end": 10339,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10323,
											"end": 10329,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 10308,
											"end": 10330,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 10289,
											"end": 10340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 10289,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10279,
											"end": 10340,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10279,
											"end": 10340,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10233,
											"end": 10350,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10389,
											"end": 10392,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 10461,
											"end": 10468,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10441,
											"end": 10450,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 10437,
											"end": 10459,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 10416,
											"end": 10469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 10416,
											"end": 10469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10406,
											"end": 10469,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10406,
											"end": 10469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10360,
											"end": 10479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10518,
											"end": 10521,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 10590,
											"end": 10597,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 10581,
											"end": 10587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10570,
											"end": 10579,
											"name": "DUP12",
											"source": 18
										},
										{
											"begin": 10566,
											"end": 10588,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 10545,
											"end": 10598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 10545,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10535,
											"end": 10598,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10535,
											"end": 10598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10608,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9416,
											"end": 10615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10746,
											"end": 10748,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10725,
											"end": 10732,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10721,
											"end": 10744,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10717,
											"end": 10749,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 10752,
											"end": 10831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 10752,
											"end": 10831,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 10714,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 10942,
											"end": 10949,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 10939,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10922,
											"end": 10931,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10918,
											"end": 10940,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 10897,
											"end": 10950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 10897,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10887,
											"end": 10950,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10887,
											"end": 10950,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10843,
											"end": 10960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10999,
											"end": 11001,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 11070,
											"end": 11077,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11061,
											"end": 11067,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11050,
											"end": 11059,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11046,
											"end": 11068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "260"
										},
										{
											"begin": 11025,
											"end": 11078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 11025,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11015,
											"end": 11078,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11015,
											"end": 11078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10970,
											"end": 11088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 11095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11101,
											"end": 11281,
											"name": "tag",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 11101,
											"end": 11281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11149,
											"end": 11226,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11227,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11246,
											"end": 11250,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 11243,
											"end": 11244,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 11236,
											"end": 11251,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11270,
											"end": 11274,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11267,
											"end": 11268,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11260,
											"end": 11275,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11331,
											"end": 11337,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11369,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11358,
											"end": 11370,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 11348,
											"end": 11370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11348,
											"end": 11370,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11409,
											"end": 11413,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11405,
											"end": 11417,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11436,
											"end": 11454,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11492,
											"end": 11496,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 11484,
											"end": 11490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11480,
											"end": 11497,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11470,
											"end": 11497,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11470,
											"end": 11497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "tag",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 11426,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11554,
											"end": 11556,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11546,
											"end": 11552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11543,
											"end": 11557,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11520,
											"end": 11558,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 11573,
											"end": 11591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "tag",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 11573,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 11517,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11338,
											"end": 11607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 11793,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 11613,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11661,
											"end": 11738,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11651,
											"end": 11739,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 11755,
											"end": 11756,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 11748,
											"end": 11763,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11779,
											"end": 11780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11772,
											"end": 11787,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12032,
											"end": 12036,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12070,
											"end": 12073,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 12059,
											"end": 12068,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12055,
											"end": 12074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12047,
											"end": 12074,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12047,
											"end": 12074,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12084,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 12152,
											"end": 12153,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12141,
											"end": 12150,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12137,
											"end": 12154,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12128,
											"end": 12134,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 12084,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 12084,
											"end": 12155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12084,
											"end": 12155,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 12084,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12165,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 12233,
											"end": 12235,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12218,
											"end": 12236,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12209,
											"end": 12215,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12165,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 12165,
											"end": 12237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12165,
											"end": 12237,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 12165,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12300,
											"end": 12318,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12291,
											"end": 12297,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 12247,
											"end": 12319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 12397,
											"end": 12399,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 12386,
											"end": 12395,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12373,
											"end": 12379,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 12329,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12411,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 12479,
											"end": 12482,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 12468,
											"end": 12477,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12464,
											"end": 12483,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12455,
											"end": 12461,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12411,
											"end": 12484,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 12411,
											"end": 12484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12411,
											"end": 12484,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 12411,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12494,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 12562,
											"end": 12565,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 12551,
											"end": 12560,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12547,
											"end": 12566,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12538,
											"end": 12544,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12494,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 12494,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12494,
											"end": 12567,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 12494,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11799,
											"end": 12574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12701,
											"end": 12705,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12741,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12728,
											"end": 12737,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12724,
											"end": 12742,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12716,
											"end": 12742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12716,
											"end": 12742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12752,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 12820,
											"end": 12821,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12809,
											"end": 12818,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12805,
											"end": 12822,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12796,
											"end": 12802,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12752,
											"end": 12823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 12752,
											"end": 12823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12752,
											"end": 12823,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 12752,
											"end": 12823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12833,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 12901,
											"end": 12903,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12890,
											"end": 12899,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12886,
											"end": 12904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12877,
											"end": 12883,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12833,
											"end": 12905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 12833,
											"end": 12905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12833,
											"end": 12905,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 12833,
											"end": 12905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12580,
											"end": 12912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13067,
											"end": 13071,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13107,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13082,
											"end": 13108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13118,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 13186,
											"end": 13187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13175,
											"end": 13184,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13171,
											"end": 13188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13162,
											"end": 13168,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13118,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 13118,
											"end": 13189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13118,
											"end": 13189,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 13118,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13199,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13256,
											"end": 13265,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13252,
											"end": 13270,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13243,
											"end": 13249,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13199,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 13199,
											"end": 13271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13199,
											"end": 13271,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 13199,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 13349,
											"end": 13351,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13347,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13334,
											"end": 13352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13325,
											"end": 13331,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 13281,
											"end": 13353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13353,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 13281,
											"end": 13353,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12918,
											"end": 13360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13459,
											"end": 13463,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13497,
											"end": 13499,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13486,
											"end": 13495,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13500,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13474,
											"end": 13500,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13474,
											"end": 13500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13510,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 13578,
											"end": 13579,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13567,
											"end": 13576,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13563,
											"end": 13580,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13554,
											"end": 13560,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13510,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 13510,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13510,
											"end": 13581,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 13510,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "tag",
											"source": 18,
											"value": "286"
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13642,
											"end": 13719,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13639,
											"end": 13640,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13720,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13729,
											"end": 13744,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 13839,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 13873,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13913,
											"end": 13914,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13937,
											"end": 13940,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13931,
											"end": 13941,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "286"
										},
										{
											"begin": 13944,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14205,
											"end": 14224,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14300,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 14234,
											"end": 14305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14381,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 14315,
											"end": 14387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14441,
											"end": 14447,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 14397,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 14547,
											"end": 14549,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14532,
											"end": 14550,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "266"
										},
										{
											"begin": 14479,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 14561,
											"end": 14634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13977,
											"end": 14641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "tag",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14820,
											"end": 14824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14861,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 14847,
											"end": 14856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14938,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14925,
											"end": 14942,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14916,
											"end": 14922,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 14872,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15015,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14993,
											"end": 14999,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "268"
										},
										{
											"begin": 14953,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 15099,
											"end": 15101,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15097,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15084,
											"end": 15102,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15075,
											"end": 15081,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 15031,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 15181,
											"end": 15183,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 15170,
											"end": 15179,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15166,
											"end": 15184,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15157,
											"end": 15163,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "270"
										},
										{
											"begin": 15113,
											"end": 15185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14647,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "tag",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15246,
											"end": 15323,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15324,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15343,
											"end": 15347,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 15340,
											"end": 15341,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 15333,
											"end": 15348,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15364,
											"end": 15365,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15372,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
								"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.1/utils/Context.sol",
								"@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
								"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
								"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/utils/Strings.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
								"contract-0c61f2e207.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-0c61f2e207.sol\":\"KnowLedgeToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.1/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.1/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.1/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts@5.0.1/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contract-0c61f2e207.sol\":{\"keccak256\":\"0x3918275d6d1a64aa7e0ee7cf87e22c97b4d088c17c7ba18dc45ab64d92a45786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fadd3b1e640fed140ee44642d0e253bc45c94b72daf802ea767430bfee0d0723\",\"dweb:/ipfs/QmPKFQsW7vee5QmyJrq87xuP7pev6PgGzDEXcL7oL4ff35\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 184,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 190,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 192,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 194,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 196,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2035,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2037,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1014,
								"contract": "contract-0c61f2e207.sol:KnowLedgeToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "IERC5267",
							"nameLocation": "143:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 4,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:0"
									},
									"src": "247:28:0"
								},
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 7,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "537:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 9,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "569:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 11,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "604:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "633:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "672:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "698:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 19,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 20,
													"nodeType": "ArrayTypeName",
													"src": "698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:0"
									},
									"scope": 24,
									"src": "426:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "133:605:0",
							"usedErrors": [],
							"usedEvents": [
								4
							]
						}
					],
					"src": "107:632:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							161
						],
						"IERC20Errors": [
							66
						],
						"IERC721Errors": [
							114
						]
					},
					"id": 162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 26,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 36,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 41,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 46,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 55,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 60,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 65,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 162,
							"src": "278:1764:1",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 72,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 77,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 86,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 91,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 96,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 103,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 108,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 113,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 162,
							"src": "2186:2092:1",
							"usedErrors": [
								72,
								77,
								86,
								91,
								96,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 161,
							"linearizedBaseContracts": [
								161
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 126,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 131,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 136,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 143,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 148,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 153,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 160,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 162,
							"src": "4424:2107:1",
							"usedErrors": [
								126,
								131,
								136,
								143,
								148,
								153,
								160
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1000
						],
						"ERC20": [
							676
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 755,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 164,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 935,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 166,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 934,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 1001,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1000,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 162,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 66,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 173,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1000,
										"src": "1428:7:2"
									},
									"id": 174,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 175,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1437:6:2"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 177,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 934,
										"src": "1445:14:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 66,
										"src": "1461:12:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								66,
								934,
								754,
								1000
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 189,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 188,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 191,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 196,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 195,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 208,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 676,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										921
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 676,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 228,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 196,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 227,
												"id": 229,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 676,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										933
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 234,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 676,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										703
									],
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 676,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										711
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 257,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 256,
												"id": 260,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 676,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 272,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 274,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 271,
												"id": 284,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 676,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 296,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 298,
														"indexExpression": {
															"id": 297,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"id": 299,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 301,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 676,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 313,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 315,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 319,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 318,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 312,
												"id": 325,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 676,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 358,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 343,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 341,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 338,
												"id": 357,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 676,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 369,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 370,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 382,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 376,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 375,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 381,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 390,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 396,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 676,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																428
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 428,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 453,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 432,
															"initialValue": {
																"baseExpression": {
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 430,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 433,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 434,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 437,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 409,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 438,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 428,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 439,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 413,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 436,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 36,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 441,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 452,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 448,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 413,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 473,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 467,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 469,
																			"indexExpression": {
																				"id": 468,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 411,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 472,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 465,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 461,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 192,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 462,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 413,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 464,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 477,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 476,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 676,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 492,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 676,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 676,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 627,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 676,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 593,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 592,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 586,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 585,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 591,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 594,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 595,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 601,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 606,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 617,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 576,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 620,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 676,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													638
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"arguments": [
														{
															"id": 640,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 641,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 646,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 645,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 661,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 660,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 657,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 654,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 55,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 659,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 671,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 663,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 664,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 665,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 666,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 662,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				567,
																				627
																			],
																			"referencedDeclaration": 627,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 670,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 676,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "1401:9741:2",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65
							],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 679,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 688,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 697,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 754,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 754,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 754,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 754,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 754,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 754,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 755,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							1998
						],
						"EIP712": [
							2225
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"IERC20Permit": [
							970
						],
						"Nonces": [
							1068
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 971,
							"src": "148:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 970,
										"src": "156:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 677,
							"src": "197:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "205:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 1999,
							"src": "233:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1998,
										"src": "241:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 2226,
							"src": "294:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2225,
										"src": "302:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 909,
							"sourceUnit": 1069,
							"src": "357:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1068,
										"src": "365:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 768,
										"name": "ERC20",
										"nameLocations": [
											"929:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "929:5:4"
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:4"
								},
								{
									"baseName": {
										"id": 770,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 970,
										"src": "936:12:4"
									},
									"id": 771,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:4"
								},
								{
									"baseName": {
										"id": 772,
										"name": "EIP712",
										"nameLocations": [
											"950:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2225,
										"src": "950:6:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "Nonces",
										"nameLocations": [
											"958:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1068,
										"src": "958:6:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:4"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:4",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908,
								1068,
								2225,
								24,
								970,
								676,
								66,
								934,
								754,
								1000
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 780,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 908,
									"src": "971:146:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 776,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 778,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 777,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 779,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:4",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 785,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "1211:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:4"
									},
									"src": "1181:48:4"
								},
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:4",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 792,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1312:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1328:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:4"
									},
									"src": "1285:58:4"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "1624:2:4",
										"statements": []
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:4",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 803,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 798,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 795,
													"src": "1613:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 800,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 797,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2225,
												"src": "1606:6:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "1586:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:4"
									},
									"scope": 908,
									"src": "1574:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "1869:483:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 821,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 823,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1901:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "1879:97:4",
												"trueBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "1911:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 826,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "1956:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 825,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "1932:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 828,
															"nodeType": "RevertStatement",
															"src": "1925:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "1986:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 831,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 836,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2028:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 837,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "2045:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 838,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "2052:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2061:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 841,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "2078:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 840,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "2068:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 843,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "2086:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 834,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:4",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 833,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:4"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2107:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 847,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"arguments": [
														{
															"id": 850,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2139:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 849,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "2122:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:4"
											},
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "2161:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 853,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [
														{
															"id": 857,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "2192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 858,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "2198:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 859,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "2201:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 860,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2204:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 855,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "2178:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1998_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:4",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1948,
														"src": "2178:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2220:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 864,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "2230:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "2216:88:4",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "2237:67:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 867,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2279:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 868,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "2287:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 866,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "2258:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "2251:42:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "2323:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2330:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "2339:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															567,
															627
														],
														"referencedDeclaration": 567,
														"src": "2314:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1705:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1728:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1776:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1802:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 813,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1819:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1838:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:4"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:4"
									},
									"scope": 908,
									"src": "1680:672:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										963,
										1027
									],
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2506:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "2536:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 891,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$908_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1027,
														"src": "2523:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 895,
												"nodeType": "Return",
												"src": "2516:26:4"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 887,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 885,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 970,
												"src": "2466:12:4"
											},
											{
												"id": 886,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1068,
												"src": "2480:6:4"
											}
										],
										"src": "2457:30:4"
									},
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2422:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2497:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:4"
									},
									"scope": 908,
									"src": "2406:143:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "2724:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "2741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 902,
												"id": 905,
												"nodeType": "Return",
												"src": "2734:27:4"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:4",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "2715:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:4"
									},
									"scope": 908,
									"src": "2656:112:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 909,
							"src": "896:1874:4",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1010,
								1082,
								1084,
								1661,
								1666,
								1671
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "122:2649:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							754
						],
						"IERC20Metadata": [
							934
						]
					},
					"id": 935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 935,
							"sourceUnit": 755,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 911,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 754,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 914,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "305:6:5"
									},
									"id": 915,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 934,
							"linearizedBaseContracts": [
								934,
								754
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 918,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 934,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 934,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 933,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 930,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 934,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 935,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								688,
								697
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							970
						]
					},
					"id": 971,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 936,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 937,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:6",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 970,
							"linearizedBaseContracts": [
								970
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:6",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3022:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3045:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3093:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3119:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 947,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3136:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "3155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:6"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:6"
									},
									"scope": 970,
									"src": "2997:183:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:6",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3501:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "3539:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:6"
									},
									"scope": 970,
									"src": "3485:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:6",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "3791:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 966,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:6"
									},
									"scope": 970,
									"src": "3740:60:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 971,
							"src": "2113:1689:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.1/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1000
						]
					},
					"id": 1001,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 972,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 973,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1000,
							"linearizedBaseContracts": [
								1000
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 977,
												"id": 980,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1000,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 987,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 986,
												"id": 989,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1000,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 995,
												"id": 997,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1000,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1001,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.1/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1068
						]
					},
					"id": 1069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1002,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1003,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:8",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1068,
							"linearizedBaseContracts": [
								1068
							],
							"name": "Nonces",
							"nameLocation": "227:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:8",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1010,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "361:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "378:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:8"
									},
									"src": "335:65:8"
								},
								{
									"constant": false,
									"id": 1014,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1068,
									"src": "406:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "account",
										"keyNameLocation": "422:7:8",
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "607:38:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1022,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "624:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1024,
													"indexExpression": {
														"id": 1023,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "632:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1025,
												"nodeType": "Return",
												"src": "617:21:8"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:8",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "554:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:8"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "598:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:8"
									},
									"scope": 1068,
									"src": "538:107:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "828:326:8",
										"statements": [
											{
												"id": 1040,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:8",
												"statements": [
													{
														"expression": {
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1035,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "1121:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1037,
																"indexExpression": {
																	"id": 1036,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "1129:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1034,
														"id": 1039,
														"nodeType": "Return",
														"src": "1114:23:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:8",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "778:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:8"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "819:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:8"
									},
									"scope": 1068,
									"src": "759:395:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1338:149:8",
										"statements": [
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "1348:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"arguments": [
														{
															"id": 1053,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1376:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1052,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1366:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "1396:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1057,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1405:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1065,
												"nodeType": "IfStatement",
												"src": "1392:89:8",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "1414:67:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1060,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "1455:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "1462:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1059,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "1435:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1063,
															"nodeType": "RevertStatement",
															"src": "1428:42:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:8",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1291:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1306:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:8"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:8"
									},
									"scope": 1068,
									"src": "1265:222:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1069,
							"src": "209:1280:8",
							"usedErrors": [
								1010
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1074
						],
						"ShortStrings": [
							1285
						],
						"StorageSlot": [
							1395
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1070,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1072,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 1396,
							"src": "132:46:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1071,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1395,
										"src": "140:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1074,
							"name": "ShortString",
							"nameLocation": "353:11:9",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:9",
							"underlyingType": {
								"id": 1073,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1075,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:9",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1078,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "1345:111:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1076,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1077,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1082,
									"name": "StringTooLong",
									"nameLocation": "1469:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1483:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:9"
									},
									"src": "1463:32:9"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1084,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:9"
									},
									"src": "1500:27:9"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "1786:208:9",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "1796:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1093,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"arguments": [
														{
															"id": 1097,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1822:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1095,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1100,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "1840:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "1836:72:9",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "1858:50:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1105,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "1893:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1104,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1879:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1107,
															"nodeType": "RevertStatement",
															"src": "1872:25:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1118,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1094,
																						"src": "1965:4:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1117,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1116,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1114,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1121,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1094,
																			"src": "1974:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1110,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "1924:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1074_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:9",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1074_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1126,
												"nodeType": "Return",
												"src": "1917:70:9"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:9",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1731:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1086,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:9"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1773:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "1773:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "1773:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:9"
									},
									"scope": 1285,
									"src": "1708:286:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "2152:331:9",
										"statements": [
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "2162:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "2187:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																"typeString": "ShortString"
															}
														],
														"id": 1139,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2176:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:9"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "2280:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1143,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1145,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:9"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:9",
													"nodeType": "YulBlock",
													"src": "2376:81:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:9"
																},
																"nativeSrc": "2390:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:9"
															},
															"nativeSrc": "2390:16:9",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:9"
																		},
																		"nativeSrc": "2426:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:9"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:9"
																},
																"nativeSrc": "2419:28:9",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:9"
															},
															"nativeSrc": "2419:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:9"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1138,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1132,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:9",
														"valueSize": 1
													}
												],
												"id": 1150,
												"nodeType": "InlineAssembly",
												"src": "2367:90:9"
											},
											{
												"expression": {
													"id": 1151,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1144,
													"src": "2473:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1152,
												"nodeType": "Return",
												"src": "2466:10:9"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:9",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2096:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1130,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "2096:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "2096:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:9"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2137:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:9"
									},
									"scope": 1285,
									"src": "2078:405:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "2625:175:9",
										"statements": [
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1185,
														"src": "2635:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1163,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1169,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "2679:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1167,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "2660:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1074_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:9",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1165,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1175,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2706:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "2702:69:9",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "2719:52:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1178,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "2740:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1180,
															"nodeType": "RevertStatement",
															"src": "2733:27:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1183,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "2787:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1162,
												"id": 1184,
												"nodeType": "Return",
												"src": "2780:13:9"
											}
										]
									},
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:9",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2575:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1156,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "2575:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "2575:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:9"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2616:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:9"
									},
									"scope": 1285,
									"src": "2555:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "3023:231:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1199,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "3043:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1197,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "3121:127:9",
													"statements": [
														{
															"expression": {
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1212,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1191,
																				"src": "3161:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1209,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "3135:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1395_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:9",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1372,
																			"src": "3135:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1303_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1303_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:9",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1302,
																	"src": "3135:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "3176:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "3219:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1218,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "3202:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1074_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:9",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1074_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1196,
															"id": 1222,
															"nodeType": "Return",
															"src": "3195:42:9"
														}
													]
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "3033:215:9",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "3063:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "3098:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1204,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "3084:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1074_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1196,
															"id": 1207,
															"nodeType": "Return",
															"src": "3077:27:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:9",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "2949:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "2970:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:9"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "3010:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1193,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "3010:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "3010:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:9"
									},
									"scope": 1285,
									"src": "2914:340:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "3494:158:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "3527:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1237,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "3508:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1074_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:9",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1241,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "3537:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "3609:37:9",
													"statements": [
														{
															"expression": {
																"id": 1248,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "3630:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1236,
															"id": 1249,
															"nodeType": "Return",
															"src": "3623:12:9"
														}
													]
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "3504:142:9",
												"trueBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "3556:47:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1244,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "3586:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1243,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "3577:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1236,
															"id": 1246,
															"nodeType": "Return",
															"src": "3570:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:9",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3415:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1228,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "3415:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "3415:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3434:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3479:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:9"
									},
									"scope": 1285,
									"src": "3385:267:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "4132:174:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "4165:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1264,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "4146:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1074_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:9",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1268,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "4175:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "4249:51:9",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1277,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "4276:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1275,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1263,
															"id": 1280,
															"nodeType": "Return",
															"src": "4263:26:9"
														}
													]
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "4142:158:9",
												"trueBody": {
													"id": 1274,
													"nodeType": "Block",
													"src": "4194:49:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1271,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "4226:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1270,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "4215:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1074_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1263,
															"id": 1273,
															"nodeType": "Return",
															"src": "4208:24:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:9",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "4059:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1255,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1074,
														"src": "4059:11:9"
													},
													"referencedDeclaration": 1074,
													"src": "4059:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "4078:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "4123:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:9"
									},
									"scope": 1285,
									"src": "4027:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "1255:3053:9",
							"usedErrors": [
								1082,
								1084
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1395
						]
					},
					"id": 1396,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1395,
							"linearizedBaseContracts": [
								1395
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1291,
									"members": [
										{
											"constant": false,
											"id": 1290,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1291,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1289,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1294,
									"members": [
										{
											"constant": false,
											"id": 1293,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1294,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1292,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1297,
									"members": [
										{
											"constant": false,
											"id": 1296,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1297,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1295,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1300,
									"members": [
										{
											"constant": false,
											"id": 1299,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1300,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1298,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1303,
									"members": [
										{
											"constant": false,
											"id": 1302,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1303,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1301,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1306,
									"members": [
										{
											"constant": false,
											"id": 1305,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1306,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1304,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 1395,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:10",
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nativeSrc": "1844:14:10",
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:10",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1313,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1309,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 1315,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1291_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1311,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1291,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1291,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1291_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 1395,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:10",
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nativeSrc": "2132:14:10",
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:10",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1324,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1320,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 1326,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1294_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1322,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1294,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1294,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1294_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 1395,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:10",
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nativeSrc": "2420:14:10",
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:10",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1335,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1331,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 1337,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1297_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1297,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1297,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1297_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 1395,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:10",
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nativeSrc": "2708:14:10",
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:10",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1346,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1342,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 1348,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1300_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1344,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1300,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1300,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1300_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 1395,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:10",
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nativeSrc": "2993:14:10",
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:10",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1357,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1353,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 1359,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1303_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1355,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1303,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1303,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1303_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 1395,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:10",
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nativeSrc": "3301:20:10",
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:10",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1370,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1303_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1303,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1303,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1303_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 1395,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:10",
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nativeSrc": "3589:14:10",
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:10",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1379,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1375,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 1381,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1306_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1306,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1306,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1306_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 1395,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:10",
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nativeSrc": "3892:20:10",
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:10",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1390,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1386,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1392,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1306_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1306,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1306,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1306_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 1395,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1396,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.0.1/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3353
						],
						"SignedMath": [
							3458
						],
						"Strings": [
							1650
						]
					},
					"id": 1651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1397,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1399,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1651,
							"sourceUnit": 3354,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1398,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3353,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1651,
							"sourceUnit": 3459,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1400,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3458,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1402,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1650,
							"linearizedBaseContracts": [
								1650
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1405,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "273:56:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1403,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1408,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "335:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1406,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1415,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "505:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:11"
									},
									"src": "470:66:11"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "708:627:11",
										"statements": [
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "718:611:11",
												"statements": [
													{
														"assignments": [
															1424
														],
														"declarations": [
															{
																"constant": false,
																"id": 1424,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1461,
																"src": "742:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1423,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1431,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1427,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "770:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1425,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3353,
																		"src": "759:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3353_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3173,
																	"src": "759:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:11"
													},
													{
														"assignments": [
															1433
														],
														"declarations": [
															{
																"constant": false,
																"id": 1433,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1461,
																"src": "794:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1432,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1438,
														"initialValue": {
															"arguments": [
																{
																	"id": 1436,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1434,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:11"
													},
													{
														"assignments": [
															1440
														],
														"declarations": [
															{
																"constant": false,
																"id": 1440,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1461,
																"src": "849:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1439,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1441,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:11"
													},
													{
														"AST": {
															"nativeSrc": "930:67:11",
															"nodeType": "YulBlock",
															"src": "930:67:11",
															"statements": [
																{
																	"nativeSrc": "948:35:11",
																	"nodeType": "YulAssignment",
																	"src": "948:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:11",
																						"nodeType": "YulLiteral",
																						"src": "971:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:11"
																				},
																				"nativeSrc": "967:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:11"
																		},
																		"nativeSrc": "955:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1433,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1424,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1440,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:11",
																"valueSize": 1
															}
														],
														"id": 1442,
														"nodeType": "InlineAssembly",
														"src": "921:76:11"
													},
													{
														"body": {
															"id": 1457,
															"nodeType": "Block",
															"src": "1023:269:11",
															"statements": [
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:11",
																		"subExpression": {
																			"id": 1444,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "1041:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:11",
																		"nodeType": "YulBlock",
																		"src": "1124:86:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:11"
																									},
																									"nativeSrc": "1164:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:11"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:11"
																							},
																							"nativeSrc": "1159:32:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:11"
																					},
																					"nativeSrc": "1146:46:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:11"
																				},
																				"nativeSrc": "1146:46:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1405,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1440,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1418,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1447,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:11"
																},
																{
																	"expression": {
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1448,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "1227:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "1260:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1456,
																	"nodeType": "IfStatement",
																	"src": "1256:21:11",
																	"trueBody": {
																		"id": 1455,
																		"nodeType": "Break",
																		"src": "1272:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1458,
														"nodeType": "WhileStatement",
														"src": "1010:282:11"
													},
													{
														"expression": {
															"id": 1459,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1422,
														"id": 1460,
														"nodeType": "Return",
														"src": "1305:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "655:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:11"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "693:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:11"
									},
									"scope": 1650,
									"src": "637:698:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "1511:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "1542:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1483,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1588:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1481,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3458,
																			"src": "1573:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3458_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3457,
																		"src": "1573:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1480,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "1564:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1471,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1487,
												"nodeType": "Return",
												"src": "1521:75:11"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1459:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1465,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:11"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1496:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:11"
									},
									"scope": 1650,
									"src": "1435:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1782:100:11",
										"statements": [
											{
												"id": 1507,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "1835:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1501,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1492,
																				"src": "1854:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1499,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3353,
																				"src": "1842:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3353_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3295,
																			"src": "1842:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1497,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1509,
																	1592,
																	1612
																],
																"referencedDeclaration": 1592,
																"src": "1823:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1496,
														"id": 1506,
														"nodeType": "Return",
														"src": "1816:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1729:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:11"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1767:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:11"
									},
									"scope": 1650,
									"src": "1708:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2095:435:11",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1591,
														"src": "2105:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"id": 1521,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1512,
													"src": "2126:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:11"
											},
											{
												"assignments": [
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1591,
														"src": "2141:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1523,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1528,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "2177:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1525,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:11"
											},
											{
												"expression": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1534,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2198:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1536,
														"indexExpression": {
															"hexValue": "30",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:11"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1540,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2223:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1542,
														"indexExpression": {
															"hexValue": "31",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:11"
											},
											{
												"body": {
													"id": 1574,
													"nodeType": "Block",
													"src": "2293:95:11",
													"statements": [
														{
															"expression": {
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1560,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "2307:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1562,
																	"indexExpression": {
																		"id": 1561,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "2314:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1563,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "2319:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1567,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1564,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "2330:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1569,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:11"
														},
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1570,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "2361:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1554,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2281:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"initializationExpression": {
													"assignments": [
														1547
													],
													"declarations": [
														{
															"constant": false,
															"id": 1547,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1575,
															"src": "2253:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1546,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1553,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1549,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "2269:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:11"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:11",
														"subExpression": {
															"id": 1557,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "2290:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1559,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1576,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "2401:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "2397:96:11",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "2418:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1580,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "2468:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1581,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1514,
																		"src": "2475:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1579,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "2439:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1583,
															"nodeType": "RevertStatement",
															"src": "2432:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1588,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2516:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1586,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1590,
												"nodeType": "Return",
												"src": "2502:21:11"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2026:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2041:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:11"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2080:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:11"
									},
									"scope": 1650,
									"src": "2005:525:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "2762:75:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1605,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "2807:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1603,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1601,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1608,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "2815:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1600,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1509,
															1592,
															1612
														],
														"referencedDeclaration": 1592,
														"src": "2779:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1610,
												"nodeType": "Return",
												"src": "2772:58:11"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2710:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:11"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2747:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:11"
									},
									"scope": 1650,
									"src": "2689:148:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "2992:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1624,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "3015:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1622,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1629,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1617,
																		"src": "3034:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1627,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1636,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "3063:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1634,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1633,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1642,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "3086:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1640,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1639,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1647,
												"nodeType": "Return",
												"src": "3002:87:11"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2929:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2946:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:11"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "2986:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:11"
									},
									"scope": 1650,
									"src": "2914:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1651,
							"src": "251:2847:11",
							"usedErrors": [
								1415
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1998
						]
					},
					"id": 1999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1653,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:12",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1998,
							"linearizedBaseContracts": [
								1998
							],
							"name": "ECDSA",
							"nameLocation": "352:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1658,
									"members": [
										{
											"id": 1654,
											"name": "NoError",
											"nameLocation": "392:7:12",
											"nodeType": "EnumValue",
											"src": "392:7:12"
										},
										{
											"id": 1655,
											"name": "InvalidSignature",
											"nameLocation": "409:16:12",
											"nodeType": "EnumValue",
											"src": "409:16:12"
										},
										{
											"id": 1656,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:12",
											"nodeType": "EnumValue",
											"src": "435:22:12"
										},
										{
											"id": 1657,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:12",
											"nodeType": "EnumValue",
											"src": "467:17:12"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:12",
									"nodeType": "EnumDefinition",
									"src": "364:126:12"
								},
								{
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:12",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1661,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:12"
									},
									"src": "564:30:12"
								},
								{
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:12",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1666,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "699:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:12"
									},
									"src": "665:50:12"
								},
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:12",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1671,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "840:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:12"
									},
									"src": "811:40:12"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "2242:653:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1686,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "2256:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1721,
													"nodeType": "Block",
													"src": "2781:108:12",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1708,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1712,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "2815:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:12",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1656,
																		"src": "2815:35:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1658",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1716,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1676,
																					"src": "2860:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:12",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1714,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1685,
															"id": 1720,
															"nodeType": "Return",
															"src": "2795:83:12"
														}
													]
												},
												"id": 1722,
												"nodeType": "IfStatement",
												"src": "2252:637:12",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "2280:495:12",
													"statements": [
														{
															"assignments": [
																1691
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1691,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1707,
																	"src": "2294:9:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1690,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1692,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:12"
														},
														{
															"assignments": [
																1694
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1694,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1707,
																	"src": "2317:9:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1693,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1695,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:12"
														},
														{
															"assignments": [
																1697
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1697,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1707,
																	"src": "2340:7:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1696,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1698,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:12"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:12",
																"nodeType": "YulBlock",
																"src": "2548:171:12",
																"statements": [
																	{
																		"nativeSrc": "2566:32:12",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:12",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:12",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:12"
																					},
																					"nativeSrc": "2577:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:12"
																			},
																			"nativeSrc": "2571:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:12"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:12",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:12",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:12",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:12",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:12"
																					},
																					"nativeSrc": "2626:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:12"
																			},
																			"nativeSrc": "2620:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:12"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:12",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:12",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:12",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:12"
																							},
																							"nativeSrc": "2683:20:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:12"
																					},
																					"nativeSrc": "2677:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:12"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:12"
																			},
																			"nativeSrc": "2669:36:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:12"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:12"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1691,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1694,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1676,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1676,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1676,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:12",
																	"valueSize": 1
																},
																{
																	"declaration": 1697,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:12",
																	"valueSize": 1
																}
															],
															"id": 1699,
															"nodeType": "InlineAssembly",
															"src": "2539:180:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1701,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "2750:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1702,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "2756:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1703,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "2759:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1704,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "2762:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1700,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1724,
																		1804,
																		1912
																	],
																	"referencedDeclaration": 1912,
																	"src": "2739:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1685,
															"id": 1706,
															"nodeType": "Return",
															"src": "2732:32:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:12",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2149:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2163:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:12"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2219:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1658",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1680,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1658,
														"src": "2219:12:12"
													},
													"referencedDeclaration": 1658,
													"src": "2219:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1658",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2233:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1683,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:12"
									},
									"scope": 1998,
									"src": "2129:766:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "3789:168:12",
										"statements": [
											{
												"assignments": [
													1735,
													1738,
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "3800:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "3819:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1737,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1736,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1658,
																"src": "3819:12:12"
															},
															"referencedDeclaration": 1658,
															"src": "3819:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "3839:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1739,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"initialValue": {
													"arguments": [
														{
															"id": 1742,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "3870:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1743,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "3876:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1741,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1804,
															1912
														],
														"referencedDeclaration": 1724,
														"src": "3859:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1747,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "3908:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1748,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "3915:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1746,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "3896:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1658_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:12"
											},
											{
												"expression": {
													"id": 1751,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1735,
													"src": "3941:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1733,
												"id": 1752,
												"nodeType": "Return",
												"src": "3934:16:12"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:12",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "3719:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "3733:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:12"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "3780:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:12"
									},
									"scope": 1998,
									"src": "3702:255:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "4285:342:12",
										"statements": [
											{
												"id": 1802,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:12",
												"statements": [
													{
														"assignments": [
															1772
														],
														"declarations": [
															{
																"constant": false,
																"id": 1772,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1802,
																"src": "4319:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1771,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1779,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1773,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "4331:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1774,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:12"
													},
													{
														"assignments": [
															1781
														],
														"declarations": [
															{
																"constant": false,
																"id": 1781,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1802,
																"src": "4522:7:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1780,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1794,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1786,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1761,
																							"src": "4547:2:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1784,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1790,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1782,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1796,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "4596:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1797,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "4602:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1798,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "4605:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1799,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "4608:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1795,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1724,
																	1804,
																	1912
																],
																"referencedDeclaration": 1912,
																"src": "4585:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1770,
														"id": 1801,
														"nodeType": "Return",
														"src": "4578:32:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:12",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4193:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4207:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1758,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4218:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:12"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4253:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4262:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1658",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1765,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1658,
														"src": "4262:12:12"
													},
													"referencedDeclaration": 1658,
													"src": "4262:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1658",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "4276:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:12"
									},
									"scope": 1998,
									"src": "4173:454:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "4840:164:12",
										"statements": [
											{
												"assignments": [
													1817,
													1820,
													1822
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "4851:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1820,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "4870:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1819,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1818,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1658,
																"src": "4870:12:12"
															},
															"referencedDeclaration": 1658,
															"src": "4870:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1822,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "4890:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1821,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1828,
												"initialValue": {
													"arguments": [
														{
															"id": 1824,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "4921:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1825,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "4927:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1826,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "4930:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1823,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1804,
															1912
														],
														"referencedDeclaration": 1804,
														"src": "4910:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1830,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "4955:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1831,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "4962:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1829,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "4943:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1658_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1833,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:12"
											},
											{
												"expression": {
													"id": 1834,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1817,
													"src": "4988:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1815,
												"id": 1835,
												"nodeType": "Return",
												"src": "4981:16:12"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:12",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "4771:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "4785:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "4796:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:12"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "4831:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:12"
									},
									"scope": 1998,
									"src": "4754:250:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "5298:1372:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1858,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "6194:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1856,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1872,
												"nodeType": "IfStatement",
												"src": "6182:164:12",
												"trueBody": {
													"id": 1871,
													"nodeType": "Block",
													"src": "6267:79:12",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1866,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "6301:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:12",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1657,
																		"src": "6301:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1658",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1868,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "6333:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1869,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1870,
															"nodeType": "Return",
															"src": "6281:54:12"
														}
													]
												}
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1911,
														"src": "6440:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"arguments": [
														{
															"id": 1876,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "6467:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1877,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "6473:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1878,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "6476:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1879,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "6479:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1875,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1882,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "6495:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1901,
												"nodeType": "IfStatement",
												"src": "6491:113:12",
												"trueBody": {
													"id": 1900,
													"nodeType": "Block",
													"src": "6517:87:12",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1890,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1888,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1892,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "6551:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:12",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1655,
																		"src": "6551:29:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1658",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1894,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1898,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1899,
															"nodeType": "Return",
															"src": "6531:62:12"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1902,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "6622:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1903,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "6630:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:12",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1654,
															"src": "6630:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1905,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1909,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1855,
												"id": 1910,
												"nodeType": "Return",
												"src": "6614:49:12"
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:12",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5169:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5191:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1841,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5208:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5227:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1845,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:12"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5266:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5275:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1658",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1851,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1850,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1658,
														"src": "5275:12:12"
													},
													"referencedDeclaration": 1658,
													"src": "5275:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1658",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "5289:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1853,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:12"
									},
									"scope": 1998,
									"src": "5140:1530:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "6897:166:12",
										"statements": [
											{
												"assignments": [
													1927,
													1930,
													1932
												],
												"declarations": [
													{
														"constant": false,
														"id": 1927,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "6908:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1926,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1930,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "6927:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1929,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1928,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1658,
																"src": "6927:12:12"
															},
															"referencedDeclaration": 1658,
															"src": "6927:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1932,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "6947:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1931,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1939,
												"initialValue": {
													"arguments": [
														{
															"id": 1934,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "6978:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1935,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "6984:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1936,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "6987:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1937,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "6990:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1933,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1724,
															1804,
															1912
														],
														"referencedDeclaration": 1912,
														"src": "6967:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1658_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1941,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "7014:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1942,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "7021:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1940,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "7002:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1658_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:12"
											},
											{
												"expression": {
													"id": 1945,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1927,
													"src": "7047:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1925,
												"id": 1946,
												"nodeType": "Return",
												"src": "7040:16:12"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:12",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6820:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6834:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1916,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6843:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1918,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6854:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:12"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "6888:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:12"
									},
									"scope": 1998,
									"src": "6803:260:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "7268:460:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1658",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1957,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "7282:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1958,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "7291:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:12",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1654,
														"src": "7291:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1658",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1963,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "7378:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1964,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "7387:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:12",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1655,
															"src": "7387:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1658",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1971,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "7483:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1658",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1972,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "7492:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:12",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1656,
																"src": "7492:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1658",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1658",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1983,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "7617:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1658",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1984,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "7626:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1658_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:12",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1657,
																	"src": "7626:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1658",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1992,
															"nodeType": "IfStatement",
															"src": "7613:109:12",
															"trueBody": {
																"id": 1991,
																"nodeType": "Block",
																"src": "7658:64:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1988,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "7702:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1987,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1671,
																				"src": "7679:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1990,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:12"
																	}
																]
															}
														},
														"id": 1993,
														"nodeType": "IfStatement",
														"src": "7479:243:12",
														"trueBody": {
															"id": 1982,
															"nodeType": "Block",
															"src": "7529:78:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1978,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1954,
																						"src": "7586:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1976,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1975,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1666,
																			"src": "7550:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1981,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:12"
																}
															]
														}
													},
													"id": 1994,
													"nodeType": "IfStatement",
													"src": "7374:348:12",
													"trueBody": {
														"id": 1970,
														"nodeType": "Block",
														"src": "7418:55:12",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1967,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "7439:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1969,
																"nodeType": "RevertStatement",
																"src": "7432:30:12"
															}
														]
													}
												},
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "7278:444:12",
												"trueBody": {
													"id": 1962,
													"nodeType": "Block",
													"src": "7313:55:12",
													"statements": [
														{
															"functionReturnParameters": 1956,
															"id": 1961,
															"nodeType": "Return",
															"src": "7327:7:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:12",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "7217:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1658",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1951,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1950,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1658,
														"src": "7217:12:12"
													},
													"referencedDeclaration": 1658,
													"src": "7217:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1658",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "7237:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:12"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:12"
									},
									"scope": 1998,
									"src": "7196:532:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1999,
							"src": "344:7386:12",
							"usedErrors": [
								1661,
								1666,
								1671
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2225
						],
						"IERC5267": [
							24
						],
						"MessageHashUtils": [
							2299
						],
						"ShortString": [
							1074
						],
						"ShortStrings": [
							1285
						]
					},
					"id": 2226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2226,
							"sourceUnit": 2300,
							"src": "139:56:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2001,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2299,
										"src": "147:16:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2005,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2226,
							"sourceUnit": 1286,
							"src": "196:62:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2003,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "204:12:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2004,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1074,
										"src": "218:11:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2007,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2226,
							"sourceUnit": 25,
							"src": "259:55:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2006,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 24,
										"src": "267:8:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2009,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 24,
										"src": "1988:8:13"
									},
									"id": 2010,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:13"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2008,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:13",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2225,
							"linearizedBaseContracts": [
								2225,
								24
							],
							"name": "EIP712",
							"nameLocation": "1978:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2012,
									"libraryName": {
										"id": 2011,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "2009:12:13"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:13"
								},
								{
									"constant": true,
									"id": 2017,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2034:140:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2013,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2015,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2014,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2019,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2373:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2018,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2021,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2427:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2023,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2473:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2022,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2025,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2517:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2024,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2027,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2560:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2026,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2030,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2607:35:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2029,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2028,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1074,
											"src": "2607:11:13"
										},
										"referencedDeclaration": 1074,
										"src": "2607:11:13",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2033,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2648:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2032,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2031,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1074,
											"src": "2648:11:13"
										},
										"referencedDeclaration": 1074,
										"src": "2648:11:13",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2035,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2692:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2034,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2037,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:13",
									"nodeType": "VariableDeclaration",
									"scope": 2225,
									"src": "2726:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2036,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "3383:376:13",
										"statements": [
											{
												"expression": {
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2045,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "3393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2048,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "3432:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2046,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "3401:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:13",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1226,
															"src": "3401:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1074_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:13"
											},
											{
												"expression": {
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2052,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "3456:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2055,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "3501:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2053,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "3467:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:13",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1226,
															"src": "3467:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1074_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:13",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
														"typeString": "ShortString"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:13"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2059,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "3528:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2063,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2040,
																		"src": "3558:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2061,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2060,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:13"
											},
											{
												"expression": {
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "3574:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2072,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "3607:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2070,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2069,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:13"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2077,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "3627:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2078,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:13",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:13"
											},
											{
												"expression": {
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2082,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "3667:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2083,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "3692:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2086,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:13"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2087,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "3725:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2090,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2225",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2225",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2088,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:13"
											}
										]
									},
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:13",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2095,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "3340:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2039,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "3360:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:13"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:13"
									},
									"scope": 2225,
									"src": "3328:431:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "3907:200:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2103,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2225",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2225",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2105,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "3938:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2107,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:13",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2109,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "3970:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2118,
													"nodeType": "Block",
													"src": "4046:55:13",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2115,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2142,
																	"src": "4067:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2100,
															"id": 2117,
															"nodeType": "Return",
															"src": "4060:30:13"
														}
													]
												},
												"id": 2119,
												"nodeType": "IfStatement",
												"src": "3917:184:13",
												"trueBody": {
													"id": 2114,
													"nodeType": "Block",
													"src": "3986:54:13",
													"statements": [
														{
															"expression": {
																"id": 2112,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "4007:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2100,
															"id": 2113,
															"nodeType": "Return",
															"src": "4000:29:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:13",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:13"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "3898:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:13"
									},
									"scope": 2225,
									"src": "3845:262:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "4177:115:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2129,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2017,
																	"src": "4215:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2130,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "4226:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2131,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "4239:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2132,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:13",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2136,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2225",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2225",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2134,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2127,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:13",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2126,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2125,
												"id": 2140,
												"nodeType": "Return",
												"src": "4187:98:13"
											}
										]
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:13"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "4168:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2123,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:13"
									},
									"scope": 2225,
									"src": "4113:179:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "5003:90:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2152,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "5053:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2154,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "5075:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2150,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "5020:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2299_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:13",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2298,
														"src": "5020:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2156,
												"nodeType": "Return",
												"src": "5013:73:13"
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:13",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "4943:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:13"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "4994:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:13"
									},
									"scope": 2225,
									"src": "4917:176:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "5472:229:13",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2178,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "5533:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2180,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "5560:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2182,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:13",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2186,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2225",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2225",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2184,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2188,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2192,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2193,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2197,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2176,
												"id": 2198,
												"nodeType": "Return",
												"src": "5482:212:13"
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:13",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:13"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5242:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5269:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5301:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2165,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5336:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5365:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5404:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5430:27:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2173,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2174,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:13"
									},
									"scope": 2225,
									"src": "5144:557:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "6082:65:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2208,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "6126:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2206,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "6099:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																"typeString": "ShortString"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:13",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1253,
														"src": "6099:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1074_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1074_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2210,
												"nodeType": "Return",
												"src": "6092:48:13"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:13",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:13"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "6067:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2203,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:13"
									},
									"scope": 2225,
									"src": "6021:126:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "6537:71:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2220,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2037,
															"src": "6584:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2218,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "6554:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1074",
																"typeString": "ShortString"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:13",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1253,
														"src": "6554:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1074_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1074_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2222,
												"nodeType": "Return",
												"src": "6547:54:13"
											}
										]
									},
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:13",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:13"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "6522:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:13"
									},
									"scope": 2225,
									"src": "6473:135:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2226,
							"src": "1960:4650:13",
							"usedErrors": [
								1082,
								1084
							],
							"usedEvents": [
								4
							]
						}
					],
					"src": "113:6498:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2299
						],
						"Strings": [
							1650
						]
					},
					"id": 2300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2300,
							"sourceUnit": 1651,
							"src": "149:39:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2228,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1650,
										"src": "157:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2230,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:14",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2299,
							"linearizedBaseContracts": [
								2299
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "1314:368:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:14",
													"nodeType": "YulBlock",
													"src": "1376:300:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:14",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:14",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:14",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:14"
																},
																"nativeSrc": "1390:48:14",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:14"
															},
															"nativeSrc": "1390:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:14",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:14"
																},
																"nativeSrc": "1492:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:14"
															},
															"nativeSrc": "1492:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:14"
														},
														{
															"nativeSrc": "1571:31:14",
															"nodeType": "YulAssignment",
															"src": "1571:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:14",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:14",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:14"
																},
																"nativeSrc": "1581:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:14"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2233,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:14",
														"valueSize": 1
													}
												],
												"id": 2238,
												"nodeType": "InlineAssembly",
												"src": "1367:309:14"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:14",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1254:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:14"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1298:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:14"
									},
									"scope": 2299,
									"src": "1222:460:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "2234:143:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2257,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2243,
																						"src": "2343:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:14",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2255,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1650,
																					"src": "2326:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1650_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:14",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1463,
																				"src": "2326:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2253,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2261,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2243,
																	"src": "2361:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2249,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:14",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2248,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2247,
												"id": 2264,
												"nodeType": "Return",
												"src": "2244:126:14"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:14",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2180:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:14"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "2225:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:14"
									},
									"scope": 2299,
									"src": "2148:229:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "2831:80:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2280,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "2887:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2281,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "2898:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2277,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:14",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2276,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2284,
												"nodeType": "Return",
												"src": "2841:63:14"
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:14",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2761:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2780:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:14"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2822:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:14"
									},
									"scope": 2299,
									"src": "2720:191:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "3462:292:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:14",
													"nodeType": "YulBlock",
													"src": "3524:224:14",
													"statements": [
														{
															"nativeSrc": "3538:22:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:14",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:14"
																},
																"nativeSrc": "3549:11:14",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:14"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:14",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:14"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:14",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:14",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:14"
																},
																"nativeSrc": "3573:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:14"
															},
															"nativeSrc": "3573:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:14",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:14"
																		},
																		"nativeSrc": "3616:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:14"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:14",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:14"
																},
																"nativeSrc": "3609:39:14",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:14"
															},
															"nativeSrc": "3609:39:14",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:14",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:14"
																		},
																		"nativeSrc": "3668:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:14"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:14"
																},
																"nativeSrc": "3661:34:14",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:14"
															},
															"nativeSrc": "3661:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:14"
														},
														{
															"nativeSrc": "3708:30:14",
															"nodeType": "YulAssignment",
															"src": "3708:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:14",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:14"
																},
																"nativeSrc": "3718:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:14"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2294,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:14",
														"valueSize": 1
													},
													{
														"declaration": 2289,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:14",
														"valueSize": 1
													},
													{
														"declaration": 2291,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:14",
														"valueSize": 1
													}
												],
												"id": 2296,
												"nodeType": "InlineAssembly",
												"src": "3515:233:14"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:14",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "3378:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "3403:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:14"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "3446:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:14"
									},
									"scope": 2299,
									"src": "3353:401:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2300,
							"src": "521:3235:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts@5.0.1/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3353
						]
					},
					"id": 3354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2301,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2302,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3353,
							"linearizedBaseContracts": [
								3353
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2305,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2310,
									"members": [
										{
											"id": 2306,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 2307,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 2308,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 2309,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 2340,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															2323
														],
														"declarations": [
															{
																"constant": false,
																"id": 2323,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2340,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2327,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2328,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2329,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2335,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2333,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2321,
															"id": 2334,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2337,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2338,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2321,
														"id": 2339,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3353,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2368,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2347,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2355,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2361,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2359,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2353,
															"id": 2360,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2363,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2345,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2364,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2366,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2353,
														"id": 2367,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3353,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2389,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2381,
															"id": 2388,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2391
														],
														"declarations": [
															{
																"constant": false,
																"id": 2391,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2390,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2395,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2392,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2393,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2396,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2397,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2399,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2405,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2403,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2381,
															"id": 2404,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2407,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2381,
														"id": 2409,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3353,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2438,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2431,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2423,
															"id": 2430,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2433,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2434,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2436,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2423,
														"id": 2437,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3353,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2466,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2459,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2457,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2451,
															"id": 2458,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2461,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2462,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2445,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2451,
														"id": 2465,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3353,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2478,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2479,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2482,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2481,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2477,
												"id": 2484,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3353,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2496,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2497,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2500,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2499,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2502,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3353,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2514,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2515,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2517,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2518,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2519,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2509,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2521,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2513,
												"id": 2525,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3353,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2537,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2532,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2545,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2544,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2540,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2541,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2536,
															"id": 2543,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2546,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2550,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2530,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2553,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2554,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2532,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2536,
												"id": 2559,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2528,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3353,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2685,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2574
														],
														"declarations": [
															{
																"constant": false,
																"id": 2574,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2685,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2573,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2578,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2575,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2576,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2580
														],
														"declarations": [
															{
																"constant": false,
																"id": 2580,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2685,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2579,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2581,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2564,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2566,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2582,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2583,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2580,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2591,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2590,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2586,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2574,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2587,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2572,
																	"id": 2589,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2592,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2593,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2580,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2599,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2598,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2595,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2305,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2597,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2601
														],
														"declarations": [
															{
																"constant": false,
																"id": 2601,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2685,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2602,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2568,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2580,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2601,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2601,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2601,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2564,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2566,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2603,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2605
														],
														"declarations": [
															{
																"constant": false,
																"id": 2605,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2685,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2604,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2612,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2606,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2608,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2610,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2568,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2568,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2574,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2605,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2605,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2605,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2605,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2605,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2613,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2614,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2574,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2615,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2616,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2619,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2621
														],
														"declarations": [
															{
																"constant": false,
																"id": 2621,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2685,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2628,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2623,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2629,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2631,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2632,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2636,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2637,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2639,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2640,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2644,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2645,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2647,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2648,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2652,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2653,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2655,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2656,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2660,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2661,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2663,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2664,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2668,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2669,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2671,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2672,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2676,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2677,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2571,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2678,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2574,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2679,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2621,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2682,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2683,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2572,
														"id": 2684,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2562,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3353,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2703
												],
												"declarations": [
													{
														"constant": false,
														"id": 2703,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2729,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2709,
												"initialValue": {
													"arguments": [
														{
															"id": 2705,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2706,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2707,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2704,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2687,
															2730
														],
														"referencedDeclaration": 2687,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2711,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2697,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2310",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2310",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2710,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3352,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2310_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2714,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2690,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2715,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2716,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2713,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2726,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2725,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2721,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2703,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2724,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2727,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2703,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2701,
												"id": 2728,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2696,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2695,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3353,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2738,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2744,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2743,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2737,
															"id": 2742,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2746
												],
												"declarations": [
													{
														"constant": false,
														"id": 2746,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2841,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2755,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2749,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2748,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3009,
																			3044
																		],
																		"referencedDeclaration": 3009,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2753,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2840,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2756,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2757,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2758,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2759,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2762,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2766,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2767,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2768,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2769,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2770,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2773,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2777,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2778,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2779,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2780,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2781,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2784,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2788,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2789,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2790,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2791,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2792,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2795,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2799,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2800,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2801,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2802,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2803,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2806,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2810,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2811,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2812,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2813,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2814,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2817,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2821,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2822,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2823,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2746,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2824,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2733,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2825,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2746,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2828,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2832,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2834,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2835,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2836,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2833,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2504,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2737,
														"id": 2839,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3353,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2875,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2854
														],
														"declarations": [
															{
																"constant": false,
																"id": 2854,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2875,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2858,
														"initialValue": {
															"arguments": [
																{
																	"id": 2856,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2845,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2855,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2842,
																	2877
																],
																"referencedDeclaration": 2842,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2861,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2848,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2860,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3352,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2310_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2863,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2854,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2864,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2854,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2866,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2845,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2872,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2852,
														"id": 2874,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2846,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3353,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2886
												],
												"declarations": [
													{
														"constant": false,
														"id": 2886,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3008,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2888,
												"initialValue": {
													"hexValue": "30",
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 3005,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2903,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2902,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2897,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2901,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2918,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2917,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2916,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2933,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2932,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2927,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2931,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2948,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2947,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2942,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2946,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2963,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2962,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2958,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2961,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2964,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2978,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2977,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2969,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2972,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2973,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2976,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2993,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2992,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2987,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2988,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2991,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2994,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2880,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3004,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 3003,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2999,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2886,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3002,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3006,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2886,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2884,
												"id": 3007,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3353,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 3042,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															3021
														],
														"declarations": [
															{
																"constant": false,
																"id": 3021,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3042,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3025,
														"initialValue": {
															"arguments": [
																{
																	"id": 3023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3022,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3009,
																	3044
																],
																"referencedDeclaration": 3009,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3026,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3028,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3015,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3027,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3352,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2310_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3030,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3031,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3021,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3033,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3012,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3019,
														"id": 3041,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3010,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3013,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3353,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3172,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													3053
												],
												"declarations": [
													{
														"constant": false,
														"id": 3053,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3172,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3055,
												"initialValue": {
													"hexValue": "30",
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 3169,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3056,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3072,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 3071,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 3065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3066,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 3069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3067,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3070,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3089,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 3088,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 3082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3078,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3083,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 3086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3087,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3106,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 3105,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 3099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3095,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3100,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 3103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3101,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3104,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3123,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 3122,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3117,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3121,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3124,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3140,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 3139,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3129,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3131,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3134,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3135,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3138,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3157,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 3156,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3146,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3047,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3151,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 3154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3152,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3155,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3168,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 3167,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3163,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3166,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3170,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3053,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3051,
												"id": 3171,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3353,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3207,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 3206,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															3185
														],
														"declarations": [
															{
																"constant": false,
																"id": 3185,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3206,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3184,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3189,
														"initialValue": {
															"arguments": [
																{
																	"id": 3187,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3176,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3186,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3173,
																	3208
																],
																"referencedDeclaration": 3173,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3190,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3192,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3179,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3191,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3352,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2310_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3195,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3185,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3197,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3176,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3203,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3183,
														"id": 3205,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3174,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3178,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3177,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3353,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3294,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													3217
												],
												"declarations": [
													{
														"constant": false,
														"id": 3217,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 3294,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3219,
												"initialValue": {
													"hexValue": "30",
													"id": 3218,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 3291,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3211,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3234,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 3233,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 3227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3211,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3228,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 3231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3232,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3211,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3249,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 3248,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3240,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3211,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3243,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 3246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3244,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3247,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3211,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3264,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 3263,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3255,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3211,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3258,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 3261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3259,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3262,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3265,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3211,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3279,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 3278,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 3272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3270,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3211,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3273,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 3276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3274,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3277,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3211,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3290,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 3289,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3288,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3292,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3217,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3215,
												"id": 3293,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 3209,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3295,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3295,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3353,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3332,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 3331,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															3307
														],
														"declarations": [
															{
																"constant": false,
																"id": 3307,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3331,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3306,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3311,
														"initialValue": {
															"arguments": [
																{
																	"id": 3309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3298,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3308,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3295,
																	3333
																],
																"referencedDeclaration": 3295,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3312,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3307,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3314,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3301,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2310",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3313,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3352,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2310_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3321,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3319,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3317,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3307,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3318,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3320,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3322,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3298,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3305,
														"id": 3330,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3296,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3299,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3353,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3351,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3344,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3337,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2310",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2310",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3342,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3341,
												"id": 3350,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 3334,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2310",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3335,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2310,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 2310,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2310",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 3341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3353,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3354,
							"src": "203:14914:15",
							"usedErrors": [
								2305
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3458
						]
					},
					"id": 3459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3356,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3458,
							"linearizedBaseContracts": [
								3458
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3373,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3366,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3359,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3367,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3361,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3370,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3369,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3359,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3365,
												"id": 3372,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3357,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3360,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3374,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3363,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3458,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3391,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3384,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3377,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3385,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3379,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3388,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3379,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3387,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3377,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3383,
												"id": 3390,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3375,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3376,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3379,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3458,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3435,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3403
												],
												"declarations": [
													{
														"constant": false,
														"id": 3403,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3435,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3402,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3416,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3404,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3395,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3405,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3397,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3407,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3408,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3395,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3409,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3397,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3411,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3414,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3417,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3403,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3422,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3403,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3420,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3418,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3427,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3395,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3428,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3397,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3432,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3401,
												"id": 3434,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3393,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3394,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3399,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3458,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3456,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3455,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3446,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3439,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3450,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3439,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3449,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3439,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3443,
														"id": 3454,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3457,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3438,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3457,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3458,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3459,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contract-0c61f2e207.sol": {
				"ast": {
					"absolutePath": "contract-0c61f2e207.sol",
					"exportedSymbols": {
						"Context": [
							1000
						],
						"ECDSA": [
							1998
						],
						"EIP712": [
							2225
						],
						"ERC20": [
							676
						],
						"ERC20Permit": [
							908
						],
						"IERC20": [
							754
						],
						"IERC20Errors": [
							66
						],
						"IERC20Metadata": [
							934
						],
						"IERC20Permit": [
							970
						],
						"KnowLedgeToken": [
							3489
						],
						"Nonces": [
							1068
						]
					},
					"id": 3490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol",
							"id": 3461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3490,
							"sourceUnit": 677,
							"src": "58:61:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3490,
							"sourceUnit": 909,
							"src": "120:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3463,
										"name": "ERC20",
										"nameLocations": [
											"227:5:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "227:5:17"
									},
									"id": 3464,
									"nodeType": "InheritanceSpecifier",
									"src": "227:5:17"
								},
								{
									"baseName": {
										"id": 3465,
										"name": "ERC20Permit",
										"nameLocations": [
											"234:11:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 908,
										"src": "234:11:17"
									},
									"id": 3466,
									"nodeType": "InheritanceSpecifier",
									"src": "234:11:17"
								}
							],
							"canonicalName": "KnowLedgeToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3489,
							"linearizedBaseContracts": [
								3489,
								908,
								1068,
								2225,
								24,
								970,
								676,
								66,
								934,
								754,
								1000
							],
							"name": "KnowLedgeToken",
							"nameLocation": "209:14:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3487,
										"nodeType": "Block",
										"src": "327:60:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3477,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "343:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "347:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "343:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030",
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "355:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "363:2:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3481,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "369:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "369:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "363:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "355:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3476,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "337:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "337:43:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3486,
												"nodeType": "ExpressionStatement",
												"src": "337:43:17"
											}
										]
									},
									"id": 3488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4b6e6f774c65646765546f6b656e",
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "272:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9541fadcaacd0c2609df6bde9047de94233a3410e9d53a4ac7bbfdac2a4738b0",
														"typeString": "literal_string \"KnowLedgeToken\""
													},
													"value": "KnowLedgeToken"
												},
												{
													"hexValue": "4b544b",
													"id": 3470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "290:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8d5445f60932521ee222a77c1aefdb2efd8b197bbc321f4746c3b2d12a305b5a",
														"typeString": "literal_string \"KTK\""
													},
													"value": "KTK"
												}
											],
											"id": 3471,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3468,
												"name": "ERC20",
												"nameLocations": [
													"266:5:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 676,
												"src": "266:5:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "266:30:17"
										},
										{
											"arguments": [
												{
													"hexValue": "4b6e6f774c65646765546f6b656e",
													"id": 3473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "309:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9541fadcaacd0c2609df6bde9047de94233a3410e9d53a4ac7bbfdac2a4738b0",
														"typeString": "literal_string \"KnowLedgeToken\""
													},
													"value": "KnowLedgeToken"
												}
											],
											"id": 3474,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3472,
												"name": "ERC20Permit",
												"nameLocations": [
													"297:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "297:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "297:29:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:17"
									},
									"returnParameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:17"
									},
									"scope": 3489,
									"src": "252:135:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3490,
							"src": "200:189:17",
							"usedErrors": [
								36,
								41,
								46,
								55,
								60,
								65,
								785,
								792,
								1010,
								1082,
								1084,
								1661,
								1666,
								1671
							],
							"usedEvents": [
								4,
								688,
								697
							]
						}
					],
					"src": "32:358:17"
				},
				"id": 17
			}
		}
	}
}